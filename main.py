from config import photos,elite_photos,ero_photos,arc_photos,trap_photos,casino_pics
from threading import Thread
import random
import schedule
import telebot
from telebot import types
import time
import logging
import math
from datetime import datetime
from flask import Flask, request, send_from_directory, send_file, jsonify
import os
from PIL import Image,ImageDraw,ImageFont, ImageStat
import emoji
import textwrap
from petpetgif.saveGif import save_transparent_gif
from pkg_resources import resource_stream
from sqlalchemy import create_engine
import json
import requests
time.sleep(120)
token = '5388861642:AAGb08Jk5d_ukvzENmIY8JXn94UySQPsJ9A'
bot = telebot.TeleBot(token, threaded=False)

#cursor = create_engine("mysql+mysqldb://Bibasosinka:foxy1987@Bibasosinka.mysql.pythonanywhere-services.com/Bibasosinka$default",pool_recycle=280)
#cursor = create_engine("sqlite:///nekoslavia.db",pool_recycle=280)
cursor = create_engine("postgresql://scqvirad:fiEMsH6qg24NVE1Tt2NaUQEfIllS3BD8@dumbo.db.elephantsql.com/scqvirad",pool_recycle=280)
#conn = connect(host="Bibasosinka.mysql.pythonanywhere-services.com",user="Bibasosinka",password="foxy1987", database="Bibasosinka$default")
#cursor = engine.connect()
#cursor = conn.cursor()

frames = 10
resolution = (512, 512)
delay = 20

APP_URL = f'https://nekoslaviabot.onrender.com/{token}'
app = Flask(__name__)
bot.remove_webhook()
bot.set_webhook(url=APP_URL)

random.seed()

enemies = [['Gayster',3,243,24],['Gayster blaster (–Ω–µ–∑–∞—Ä—è–∂.)',2,232,92],['Gayster blaster (–∑–∞—Ä—è–∂.)',2,232,92],['–ü–µ—Ç—Ä–æ–≤–∏—á',3,175,15],['Gay bomb',1,240,183],['–õ–ì–ë–¢ –°–ª–∏–∑–µ–Ω—å',3,186,163],['–í—Ä–∞–∂–¥–µ–±–Ω–∞—è —Å–ª–∏–∑—å',1,240,207]]

cans = [0]
can = True
dcan = True

patch_version = 106
patch_title = '–ó–∞–µ–±–∏—Å—å'
patch_text = '–ë–æ—Ç –∑–∞—Ä–∞–±–æ—Ç–∞–ª, –Ω–æ —ç—Ç–æ –Ω–µ —Ç–æ—á–Ω–æ'
patch_image = 'AgACAgIAAx0CZQN7rQACznBjQgABiPsE5FE7am8mfAOKiXsSOEsAAju9MRuS1hFKlyErHhjWQfcBAAMCAANzAAMqBA'

skill_list = ['<b>–ù–µ—Ç –Ω–∞–≤—ã–∫–∞ ‚ùå</b>\n','<b>–ö—Ä–µ–ø–∫–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ ü´Ä (–ø–∞—Å—Å–∏–≤)</b>\n–ö–≤–∞–¥—Ä–∞—Ç—ã –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é—Ç –∑–¥–æ—Ä–æ–≤—å–µ –≤–º–µ—Å—Ç–æ –±–ª–æ–∫–æ–≤\n','<b>–ü–æ–≤—ã—à–µ–Ω–Ω–∞—è —Å–∏–ª–∞ üü° (–ø–∞—Å—Å–∏–≤)</b>\n–ë–æ–ª—å—à–µ –∂—ë–ª—Ç—ã—Ö –∫—Ä—É–≥–æ–≤ –Ω–∞ –ø–æ–ª–µ, –ø—Ä–∏ –∏—Ö —Å–∫–ª–∞–¥—ã–≤–∞–Ω–∏–∏ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –∑–≤–µ–∑–¥–∞\n','<b>–ü–æ–≤—ã—à–µ–Ω–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å üíô (–ø–∞—Å—Å–∏–≤)</b>\n–ë–æ–ª—å—à–µ —Å–∏–Ω–∏—Ö —Å–µ—Ä–¥–µ—Ü –Ω–∞ –ø–æ–ª–µ, –ø—Ä–∏ –∏—Ö —Å–∫–ª–∞–¥—ã–≤–∞–Ω–∏–∏ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –∑–≤–µ–∑–¥–∞\n','<b>–ü–æ—Å–ª–µ–¥–Ω–∏–π —à–∞–Ω—Å üíî (–ø–∞—Å—Å–∏–≤)</b>\n–í –¥–≤–∞ —Ä–∞–∑–∞ –±–æ–ª—å—à–µ —É—Ä–æ–Ω–∞ –ø—Ä–∏ 1 —Ö–ø\n','<b>–≠–Ω–µ—Ä–≥–∏—á–Ω–æ—Å—Ç—å ‚ö°Ô∏è (–ø–∞—Å—Å–∏–≤)</b>\n–í –¥–≤–∞ —Ä–∞–∑–∞ –±–æ–ª—å—à–µ —É—Ä–æ–Ω–∞ –ø—Ä–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–º —Ö–ø\n','<b>–î–µ–≤—è—Ç—å –∂–∏–∑–Ω–µ–π üê± (–ø–∞—Å—Å–∏–≤)</b>\n–°–ø–∞—Å–∞–µ—Ç –æ—Ç —Å–º–µ—Ä—Ç–∏ –æ–¥–∏–Ω —Ä–∞–∑\n','<b>–ê—Ç–∞–∫–∞ —Å–æ —Å–ø–∏–Ω—ã üí´ (–ø–∞—Å—Å–∏–≤)</b>\n4 —Ö–æ–¥–∞ –Ω–∞ –ø–µ—Ä–≤—ã–π —Ö–æ–¥\n','<b>–ó–≤–µ–∑–¥–∞ ‚≠êÔ∏è (–∞–∫—Ç–∏–≤)</b>\n–ü—Ä–µ–≤—Ä–∞—â–∞–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—É—é —Ñ–∏–≥—É—Ä—É –≤ –∑–≤–µ–∑–¥—É\n','<b>–†–∞–∑—Ä—É—à–µ–Ω–∏–µ üí• (–∞–∫—Ç–∏–≤)</b>\n–†–∞–∑—Ä—É—à–∞–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—É—é —Ñ–∏–≥—É—Ä—É, –∑–∞–º–µ–Ω—è—è –µ—ë –ø—É—Å—Ç–æ—Ç–æ–π\n','<b>–ü–µ—Ä–µ–º–µ—à–∞—Ç—å üîÑ (–∞–∫—Ç–∏–≤)</b>\n–ü–µ—Ä–µ–º–µ—à—ã–≤–∞–µ—Ç –ø–æ–ª–µ, –ø—Ä–∏ —ç—Ç–æ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∏–≥—É—Ä –∫–∞–∂–¥–æ–≥–æ —Ü–≤–µ—Ç–∞ –Ω–µ –∏–∑–º–µ–Ω—è–µ—Ç—Å—è\n','<b>–ü—Ä–µ–≤–µ–Ω—Ç–∏–≤–Ω—ã–π —É–¥–∞—Ä üó° (–∞–∫—Ç–∏–≤)</b>\n–ó–∞–±–∏—Ä–∞–µ—Ç –æ–¥–∏–Ω —Ö–æ–¥, –Ω–æ –Ω–∞–Ω–æ—Å–∏—Ç —É—Ä–æ–Ω –≤—Ä–∞–≥—É\n','<b>–ó–∞—â–∏—Ç–Ω–∞—è —Å—Ç–æ–π–∫–∞ üõ° (–∞–∫—Ç–∏–≤)</b>\n–ó–∞–±–∏—Ä–∞–µ—Ç –æ–¥–∏–Ω —Ö–æ–¥, –Ω–æ –¥–∞—ë—Ç –æ–¥–∏–Ω –±–ª–æ–∫\n','<b>–ó–≤—ë–∑–¥–Ω—ã–π —á–∞—Å üåü (–∞–∫—Ç–∏–≤)</b>\n–î–≤–µ —Å–ª—É—á–∞–π–Ω—ã–µ —Ñ–∏–≥—É—Ä—ã –∑–∞–º–µ–Ω—è–µ—Ç –∑–≤—ë–∑–¥–∞–º–∏\n','<b>–•–æ–¥ –∫–æ–Ω—ë–º üß© (–∞–∫—Ç–∏–≤)</b>\n–ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ñ–∏–≥—É—Ä –Ω–∞ –ø–æ–ª–µ –Ω–µ –º–µ–Ω—å—à–µ –æ–¥–∏–Ω–Ω–∞–¥—Ü–∞—Ç–∏, –∑–∞–º–µ–Ω—è–µ—Ç –∏—Ö –Ω–∞ –ø—É—Å—Ç–æ—Ç—É –∏ –¥–µ–ª–∞–µ—Ç –¥–µ–π—Å—Ç–≤–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —Ñ–∏–≥—É—Ä—ã (1 –±–ª–æ–∫, 1 —É—Ä–æ–Ω –∏–ª–∏ 1 —Ö–æ–¥)\n']
passive_skill_list = ['<b>–ù–µ—Ç –Ω–∞–≤—ã–∫–∞ ‚ùå</b>\n',
'<b>–ö—Ä–µ–ø–∫–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ ü´Ä (–ø–∞—Å—Å–∏–≤)</b>\n–ö–≤–∞–¥—Ä–∞—Ç—ã –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é—Ç –∑–¥–æ—Ä–æ–≤—å–µ –≤–º–µ—Å—Ç–æ –±–ª–æ–∫–æ–≤\n',
'<b>–ü–æ–≤—ã—à–µ–Ω–Ω–∞—è —Å–∏–ª–∞ üü° (–ø–∞—Å—Å–∏–≤)</b>\n–ë–æ–ª—å—à–µ –∂—ë–ª—Ç—ã—Ö –∫—Ä—É–≥–æ–≤ –Ω–∞ –ø–æ–ª–µ, –ø—Ä–∏ –∏—Ö —Å–∫–ª–∞–¥—ã–≤–∞–Ω–∏–∏ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –∑–≤–µ–∑–¥–∞\n',
'<b>–ü–æ–≤—ã—à–µ–Ω–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å üíô (–ø–∞—Å—Å–∏–≤)</b>\n–ë–æ–ª—å—à–µ —Å–∏–Ω–∏—Ö —Å–µ—Ä–¥–µ—Ü –Ω–∞ –ø–æ–ª–µ, –ø—Ä–∏ –∏—Ö —Å–∫–ª–∞–¥—ã–≤–∞–Ω–∏–∏ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –∑–≤–µ–∑–¥–∞\n',
'<b>–ü–æ—Å–ª–µ–¥–Ω–∏–π —à–∞–Ω—Å üíî (–ø–∞—Å—Å–∏–≤)</b>\n–ù–∞ –æ–¥–Ω—É –µ–¥–∏–Ω–∏—Ü—É —É—Ä–æ–Ω–∞ –±–æ–ª—å—à–µ –µ—Å–ª–∏ 2 —Ö–ø –∏–ª–∏ –º–µ–Ω—å—à–µ\n',
'<b>–≠–Ω–µ—Ä–≥–∏—á–Ω–æ—Å—Ç—å ‚ö°Ô∏è (–ø–∞—Å—Å–∏–≤)</b>\n–ù–∞ –æ–¥–Ω—É –µ–¥–∏–Ω–∏—Ü—É —É—Ä–æ–Ω–∞ –±–æ–ª—å—à–µ –ø—Ä–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–º —Ö–ø\n',
'<b>–î–µ–≤—è—Ç—å –∂–∏–∑–Ω–µ–π üê± (–ø–∞—Å—Å–∏–≤)</b>\n–°–ø–∞—Å–∞–µ—Ç –æ—Ç —Å–º–µ—Ä—Ç–∏ –æ–¥–∏–Ω —Ä–∞–∑\n',
'<b>–ê—Ç–∞–∫–∞ —Å–æ —Å–ø–∏–Ω—ã üí´ (–ø–∞—Å—Å–∏–≤)</b>\n4 —Ö–æ–¥–∞ –Ω–∞ –ø–µ—Ä–≤—ã–π —Ö–æ–¥\n',
'<b>–£–¥–∞—á–∞ ‚òòÔ∏è (–ø–∞—Å—Å–∏–≤)</b>\n5% —à–∞–Ω—Å —É–≤–µ—Ä–Ω—É—Ç—å—Å—è –æ—Ç –ª—é–±–æ–π –∞—Ç–∞–∫–∏, —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–µ –±–æ–ª–µ–µ –¥–≤—É—Ö —Ä–∞–∑ –∑–∞ –±–æ–π\n',
'<b>–°–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ—Å—Ç—å ‚öñÔ∏è (–ø–∞—Å—Å–∏–≤)</b>\n–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ö–æ–¥ –µ—Å–ª–∏ —Ç–≤–æ—ë —Ö–ø –º–µ–Ω—å—à–µ —Å—É–º–º–∞—Ä–Ω–æ–≥–æ —Ö–ø –≤—Ä–∞–≥–æ–≤, –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –ø–µ—Ä–≤—ã–π —Ö–æ–¥\n',
'<b>–ù–µ–æ–ø—Ä–∞–≤–¥–∞–Ω–Ω—ã–π —Ä–∏—Å–∫ ‚ô†Ô∏è (–ø–∞—Å—Å–∏–≤)</b>\n–ù–∞ –æ–¥–Ω—É –µ–¥–∏–Ω–∏—Ü—É —É—Ä–æ–Ω–∞ –±–æ–ª—å—à–µ –µ—Å–ª–∏ –∞—Ç–∞–∫–æ–≤–∞—Ç—å –≤–æ –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Ö–æ–¥–∞ –Ω–µ –∏–º–µ—è –ø—Ä–∏ —ç—Ç–æ–º –±–ª–æ–∫–æ–≤\n'
]
active_skill_list = ['<b>–ù–µ—Ç –Ω–∞–≤—ã–∫–∞ ‚ùå</b>\n',
'<b>–ó–≤–µ–∑–¥–∞ ‚≠êÔ∏è (–∞–∫—Ç–∏–≤)</b>\n–ü—Ä–µ–≤—Ä–∞—â–∞–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—É—é —Ñ–∏–≥—É—Ä—É –≤ –∑–≤–µ–∑–¥—É\n',
'<b>–†–∞–∑—Ä—É—à–µ–Ω–∏–µ üí• (–∞–∫—Ç–∏–≤)</b>\n–†–∞–∑—Ä—É—à–∞–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—É—é —Ñ–∏–≥—É—Ä—É, –∑–∞–º–µ–Ω—è—è –µ—ë –ø—É—Å—Ç–æ—Ç–æ–π\n',
'<b>–ü–µ—Ä–µ–º–µ—à–∞—Ç—å üîÑ (–∞–∫—Ç–∏–≤)</b>\n–ü–µ—Ä–µ–º–µ—à—ã–≤–∞–µ—Ç –ø–æ–ª–µ, –ø—Ä–∏ —ç—Ç–æ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∏–≥—É—Ä –∫–∞–∂–¥–æ–≥–æ —Ü–≤–µ—Ç–∞ –Ω–µ –∏–∑–º–µ–Ω—è–µ—Ç—Å—è\n',
'<b>–ü—Ä–µ–≤–µ–Ω—Ç–∏–≤–Ω—ã–π —É–¥–∞—Ä üó° (–∞–∫—Ç–∏–≤)</b>\n–ó–∞–±–∏—Ä–∞–µ—Ç –æ–¥–∏–Ω —Ö–æ–¥, –Ω–æ –Ω–∞–Ω–æ—Å–∏—Ç —É—Ä–æ–Ω –≤—Ä–∞–≥—É\n',
'<b>–ó–∞—â–∏—Ç–Ω–∞—è —Å—Ç–æ–π–∫–∞ üõ° (–∞–∫—Ç–∏–≤)</b>\n–ó–∞–±–∏—Ä–∞–µ—Ç –æ–¥–∏–Ω —Ö–æ–¥, –Ω–æ –¥–∞—ë—Ç –æ–¥–∏–Ω –±–ª–æ–∫\n',
'<b>–ó–≤—ë–∑–¥–Ω—ã–π —á–∞—Å üåü (–∞–∫—Ç–∏–≤)</b>\n–î–≤–µ —Å–ª—É—á–∞–π–Ω—ã–µ —Ñ–∏–≥—É—Ä—ã –∑–∞–º–µ–Ω—è–µ—Ç –∑–≤—ë–∑–¥–∞–º–∏\n',
'<b>–•–æ–¥ –∫–æ–Ω—ë–º üß© (–∞–∫—Ç–∏–≤)</b>\n–ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ñ–∏–≥—É—Ä –Ω–∞ –ø–æ–ª–µ –Ω–µ –º–µ–Ω—å—à–µ –æ–¥–∏–Ω–Ω–∞–¥—Ü–∞—Ç–∏, –∑–∞–º–µ–Ω—è–µ—Ç –∏—Ö –Ω–∞ –ø—É—Å—Ç–æ—Ç—É –∏ –¥–µ–ª–∞–µ—Ç –¥–µ–π—Å—Ç–≤–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —Ñ–∏–≥—É—Ä—ã (1 –±–ª–æ–∫, 1 —É—Ä–æ–Ω –∏–ª–∏ 1 —Ö–æ–¥)\n',
'<b>–ê–Ω–Ω–∏–≥–∏–ª—è—Ü–∏—è üî• (–∞–∫—Ç–∏–≤)</b>\n–£–Ω–∏—á—Ç–æ–∂–∞–µ—Ç —Ä—è–¥ —Ñ–∏–≥—É—Ä –Ω–∞ –ø–æ–ª–µ\n',
'<b>–ó–≤—ë–∑–¥–Ω–∞—è —è—Ä–æ—Å—Ç—å ‚ú® (–∞–∫—Ç–∏–≤)</b>\n–£–Ω–∏—á—Ç–æ–∂–∞–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—É—é –∑–≤–µ–∑–¥—É, –Ω–æ –¥–∞—ë—Ç 1 —Ö–æ–¥\n',
'<b>–£–º–Ω–æ–∂–µ–Ω–∏–µ üíï (–∞–∫—Ç–∏–≤)</b>\n–î–æ–±–∞–≤–ª—è–µ—Ç 2 —Ñ–∏–≥—É—Ä—ã –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ü–≤–µ—Ç–∞ –Ω–∞ –ø–æ–ª–µ, —Ä–∞–±–æ—Ç–∞–µ—Ç —Å–æ –∑–≤—ë–∑–¥–∞–º–∏\n'
]

skill_names = ['–ù–µ—Ç –Ω–∞–≤—ã–∫–∞ ‚ùå',
'–ó–≤–µ–∑–¥–∞ ‚≠êÔ∏è',
'–†–∞–∑—Ä—É—à–µ–Ω–∏–µ üí•',
'–ü–µ—Ä–µ–º–µ—à–∞—Ç—å üîÑ',
'–ü—Ä–µ–≤–µ–Ω—Ç–∏–≤–Ω—ã–π —É–¥–∞—Ä üó°',
'–ó–∞—â–∏—Ç–Ω–∞—è —Å—Ç–æ–π–∫–∞ üõ°',
'–ó–≤—ë–∑–¥–Ω—ã–π —á–∞—Å üåü',
'–•–æ–¥ –∫–æ–Ω—ë–º üß©',
'–ê–Ω–Ω–∏–≥–∏–ª—è—Ü–∏—è üî•',
'–ó–≤—ë–∑–¥–Ω–∞—è —è—Ä–æ—Å—Ç—å ‚ú®',
'–£–º–Ω–æ–∂–µ–Ω–∏–µ üíï'
]
nekosas = {'540255407': '16 4',
'738931917': '17 2',
'523497602': '4 7',
'729883976': '19 2',
'448214297': '29 4',
'503671007': '3 10',
'460507186': '19 1',
'783003689': '27 1'}
def date_string(cur):
    dy = int(cur.day)
    if dy < 10:
        dy = '0'+str(dy)
    else:
        dy = str(dy)
    mn = int(cur.month)
    if mn < 10:
        mn = '0'+str(mn)
    else:
        mn = str(mn)
    yr = str(cur.year)
    date = dy+'.'+mn+'.'+yr
    return date
def pack(mas):
    data = {"data": mas}
    data = json.dumps(data,ensure_ascii=False)
    return data
def unpack(data):
    mas = json.loads(data)
    mas = mas["data"]
    return mas
def dominant_color(filename):
        #Resizing parameters
        width, height = 150,150
        image = Image.open(filename)
        image = image.resize((width, height),resample = 0)
        #Get colors from image object
        pixels = image.getcolors(width * height)
        #Sort them by count number(first element of tuple)
        sorted_pixels = sorted(pixels, key=lambda t: t[0])
        #Get the most frequent color
        dominant_color = sorted_pixels[-1][1]
        return dominant_color
def make(source, dest, clr):
    images = []
    base = Image.open(source).convert('RGBA').resize(resolution)

    for i in range(frames):
        squeeze = i if i < frames/2 else frames - i
        width = 0.8 + squeeze * 0.02
        height = 0.8 - squeeze * 0.05
        offsetX = (1 - width) * 0.5 + 0.1
        offsetY = (1 - height) - 0.08

        canvas = Image.new('RGBA', size=resolution, color=clr)
        canvas.paste(base.resize((round(width * resolution[0]), round(height * resolution[1]))), (round(offsetX * resolution[0]), round(offsetY * resolution[1])))
        pet = Image.open(resource_stream(__name__, f"bot/pet{i}.gif")).convert('RGBA').resize(resolution)
        canvas.paste(pet, mask=pet)
        images.append(canvas)

    save_transparent_gif(images, durations=20, save_file=dest)
def gazeta():
    global patch_image
    lines = textwrap.wrap(patch_text, width=35)
    ptxt = ''
    for line in lines:
        ptxt = ptxt + line + '\n'
    im0 = Image.open('bot/gazetka.png')
    font = ImageFont.truetype('bot/times-new-roman.ttf', size=50)
    draw = ImageDraw.Draw(im0)
    draw.text((70, 130), ptxt, font=font, fill=(82, 64, 64))
    w = font.getlength(patch_title)
    draw.text(((924-w)/2,50), patch_title, font=font, fill=(82, 64, 64))
    im0.save('bot/result.png')
    f = open("bot/result.png","rb")
    m = bot.send_photo(-1001694727085, photo=f)
    patch_image = m.photo[len(m.photo) - 1].file_id
gazeta()
papers_images = []
prof = ['–ú–æ–Ω—Ç–∞–∂–Ω–∏–∫','–≠–ª–µ–∫—Ç—Ä–∏–∫','–¢–æ–∫–∞—Ä—å','–°–≤–∞—Ä—â–∏–∫','–û—Ö—Ä–∞–Ω–Ω–∏–∫']
bad_prof = random.choice(prof)
def papers():
    global papers_images,prof,bad_prof
    for k in range(1,11):
        propusk = random.choice([True,False])
        reason = 0
        if not propusk:
            reason = random.randint(1,5)
        im0 = Image.open('bot/zavod/papers.png')
        im1 = Image.open('bot/zavod/table'+str(k)+'.png')
        im0.paste(im1.convert('RGB'), (0,0))
        if reason == 1:
            k2 = random.randint(1,10)
            while k == k2:
                k2 = random.randint(1,10)
            im2 = Image.open('bot/zavod/pas'+str(k2)+'.png')
            im0.paste(im2.convert('RGB'), (445,35))
        else:
            im2 = Image.open('bot/zavod/pas'+str(k)+'.png')
            im0.paste(im2.convert('RGB'), (445,35))
        names = ['–ú–∏–∫—É', '–ë–∞–∫–∞', '–ù–∞—Ä—É—Ç–æ', '–ú–∞–∫–∏–º–∞', '–®–º–∞—Ä–∞']
        families = ['–ù–µ–∫–æ—á–∞–Ω–æ–≤–Ω–∞','–°–ª–∞–≤–æ–Ω–µ–∫–æ–≤–Ω–∞','–ö—Ä–∏–Ω–∂–µ–¥–µ–ª–æ–≤–Ω–∞','–°–æ—Å–∞–ª–∫–∞','–î–µ–≥–µ–Ω–µ—Ä–∞—Ç–æ–≤–Ω–∞']
        draw = ImageDraw.Draw(im0)
        font = ImageFont.truetype('bot/segoeprint_bold.ttf', size=24)
        text = random.choice(names) + ' ' + random.choice(families)
        draw.text((650, 100), text, font=font,fill="#f0f0f0", stroke_width=2, stroke_fill='#141414')
        font = ImageFont.truetype('bot/segoeprint_bold.ttf', size=20)
        if reason == 2:
            p = bad_prof
            text = '–ü—Ä–æ—Ñ–µ—Å—Å–∏—è: ' + p
            draw.text((650, 137), text, font=font, fill="#141414", stroke_width=0, stroke_fill='#141414')
        else:
            p = random.choice(prof)
            while p == bad_prof:
                p = random.choice(prof)
            text = '–ü—Ä–æ—Ñ–µ—Å—Å–∏—è: ' + p
            draw.text((650, 137), text, font=font, fill="#141414", stroke_width=0, stroke_fill='#141414')
        if reason == 3:
            days = random.randint(10,363)
            date = date_string(datetime.fromtimestamp(time.time() + days*3600*24))
            text = '–í—ã–¥–∞–Ω–æ: ' + date
            draw.text((650, 165), text, font=font, fill="#141414", stroke_width=0, stroke_fill='#141414')
        else:
            days = random.randint(20,363)
            date = date_string(datetime.fromtimestamp(time.time() - days*3600*24))
            text = '–í—ã–¥–∞–Ω–æ: ' + date
            draw.text((650, 165), text, font=font, fill="#141414", stroke_width=0, stroke_fill='#141414')
        if reason == 4:
            days = random.randint(1,15)
            date = date_string(datetime.fromtimestamp(time.time() - days*3600*24))
            text = '–î–æ: ' + date
            draw.text((650, 193), text, font=font, fill="#141414", stroke_width=0, stroke_fill='#141414')
        else:
            days = random.randint(10,363)
            date = date_string(datetime.fromtimestamp(time.time() + days*3600*24))
            text = '–î–æ: ' + date
            draw.text((650, 193), text, font=font, fill="#141414", stroke_width=0, stroke_fill='#141414')
        if reason == 5:
            pechat = random.choice([True,False])
            if pechat:
                im3 = Image.open('bot/zavod/skamik.png')
                im0.paste(im3.convert('RGB'), (840,110),im3)
        else:
            im3 = Image.open('bot/zavod/slavik.png')
            im0.paste(im3.convert('RGB'), (840,110),im3)
        im0.save('bot/zavod/result.png')
        f = open("bot/zavod/result.png","rb")
        m = bot.send_photo(-1001694727085, photo=f)
        img = m.photo[len(m.photo) - 1].file_id
        papers_images.append(str(img) + ' ' + str(propusk))
        time.sleep(2)
papers()


def equ(a):
    if -1 in a:
        return False
    for i in range(5):
        b = a.copy()
        for j in range(len(b)):
            if b[j] == 5:
                b[j] = i
        if b.count(b[0]) == len(b):
            return True
    return False
def fielder(field,sk1,sk2,do_stars):
    atack = 0
    blocks = 0
    turns = 0
    stars = 0
    skills = [sk1,sk2]
    b = [0,1,2,3,4]
    if 2 in skills:
        b.append(2)
    if 3 in skills:
        b.append(4)
    while True:
        found = False
        for j in range(6):
            i = 0
            a = [field[j*6+i],field[j*6+i+1],field[j*6+i+2],field[j*6+i+3],field[j*6+i+4],field[j*6+i+5]]
            if equ(a):

                if 2 in a and 2 in skills:
                    stars += 1
                if 4 in a and 3 in skills:
                    stars += 1

                if 0 in a or 1 in a:
                    blocks = blocks + 3
                elif 2 in a or 3 in a:
                    atack = atack + 3
                elif 4 in a:
                    turns = turns + 3
                field[j*6+i] = -1
                field[j*6+i+1] = -1
                field[j*6+i+2] = -1
                field[j*6+i+3] = -1
                field[j*6+i+4] = -1
                field[j*6+i+5] = -1
                found = True
        for i in range(6):
            j = 0
            a = [field[j*6+i],field[(j+1)*6+i],field[(j+2)*6+i],field[(j+3)*6+i],field[(j+4)*6+i],field[(j+5)*6+i]]
            if equ(a):

                if 2 in a and 2 in skills:
                    stars += 1
                if 4 in a and 3 in skills:
                    stars += 1

                if 0 in a or 1 in a:
                    blocks = blocks + 3
                elif 2 in a or 3 in a:
                    atack = atack + 3
                elif 4 in a:
                    turns = turns + 3
                field[j*6+i] = -1
                field[(j+1)*6+i] = -1
                field[(j+2)*6+i] = -1
                field[(j+3)*6+i] = -1
                field[(j+4)*6+i] = -1
                field[(j+5)*6+i] = -1
                found = True
        for j in range(6):
            for i in range(2):
                a = [field[j*6+i],field[j*6+i+1],field[j*6+i+2],field[j*6+i+3],field[j*6+i+4]]
                if equ(a):

                    if 2 in a and 2 in skills:
                        stars += 1
                    if 4 in a and 3 in skills:
                        stars += 1

                    if 0 in a or 1 in a:
                        blocks = blocks + 2
                    elif 2 in a or 3 in a:
                        atack = atack + 2
                    elif 4 in a:
                        turns = turns + 2
                    field[j*6+i] = -1
                    field[j*6+i+1] = -1
                    field[j*6+i+2] = -1
                    field[j*6+i+3] = -1
                    field[j*6+i+4] = -1
                    found = True
        for j in range(2):
            for i in range(6):
                a = [field[j*6+i],field[(j+1)*6+i],field[(j+2)*6+i],field[(j+3)*6+i],field[(j+4)*6+i]]
                if equ(a):

                    if 2 in a and 2 in skills:
                        stars += 1
                    if 4 in a and 3 in skills:
                        stars += 1

                    if 0 in a or 1 in a:
                        blocks = blocks + 2
                    elif 2 in a or 3 in a:
                        atack = atack + 2
                    elif 4 in a:
                        turns = turns + 2
                    field[j*6+i] = -1
                    field[(j+1)*6+i] = -1
                    field[(j+2)*6+i] = -1
                    field[(j+3)*6+i] = -1
                    field[(j+4)*6+i] = -1
                    found = True
        for j in range(6):
            for i in range(3):
                a = [field[j*6+i],field[j*6+i+1],field[j*6+i+2],field[j*6+i+3]]
                if equ(a):

                    if 2 in a and 2 in skills:
                        stars += 1
                    if 4 in a and 3 in skills:
                        stars += 1

                    if 0 in a or 1 in a:
                        blocks = blocks + 1
                    elif 2 in a or 3 in a:
                        atack = atack + 1
                    elif 4 in a:
                        turns = turns + 1
                    field[j*6+i] = -1
                    field[j*6+i+1] = -1
                    field[j*6+i+2] = -1
                    field[j*6+i+3] = -1
                    found = True
        for j in range(3):
            for i in range(6):
                a = [field[j*6+i],field[(j+1)*6+i],field[(j+2)*6+i],field[(j+3)*6+i]]
                if equ(a):

                    if 2 in a and 2 in skills:
                        stars += 1
                    if 4 in a and 3 in skills:
                        stars += 1

                    if 0 in a or 1 in a:
                        blocks = blocks + 1
                    elif 2 in a or 3 in a:
                        atack = atack + 1
                    elif 4 in a:
                        turns = turns + 1
                    field[j*6+i] = -1
                    field[(j+1)*6+i] = -1
                    field[(j+2)*6+i] = -1
                    field[(j+3)*6+i] = -1
                    found = True
        if -1 in field and found == False:
            found = True
        if found == False:
            break
        while True:
            for i in range(36):
                if field[i] == -1:
                    if i < 6:
                        if stars > 0 and do_stars:
                            stars -= 1
                            field[i] = 5
                        else:
                            field[i] = random.choice(b)
                    else:
                        field[i] = field[i-6]
                        field[i-6] = -1
            if -1 not in field:
                break

    result = [atack,blocks,turns]
    return result
def combinator(cards):
    numbers = []
    colors = []
    for card in cards:
        b = round((card%1)*10)
        a = round(card)
        numbers.append(a)
        colors.append(b)
    max_low = sorted(numbers)
    max_low.reverse()
    #–°—Ç–∞—Ä—à–∞—è –∫–∞—Ä—Ç–∞
    comb = 0 + max(numbers)/100
    #–ü–∞—Ä–∞
    for n in max_low:
        if numbers.count(n) >= 2:
            comb = 1 + n/100
            break
    #–î–≤–µ –ø–∞—Ä—ã
    p1 = 0
    p2 = 0
    for n in max_low:
        if numbers.count(n) >= 2 and n != p1 and n != p2:
            if p1 == 0:
                p1 = n
            else:
                p2 = n
        if p1 != 0 and p2 != 0:
            comb = 2 + max(p1,p2)/100 + min(p1,p2)/10000
            break
    #–°–µ—Ç
    for n in max_low:
        if numbers.count(n) >= 3:
            comb = 3 + n/100
            break
    #–°—Ç—Ä–∏—Ç
    max_l = sorted(list(set(max_low)))
    max_l.reverse()
    for i in range(len(cards)):
        try:
            if max_l[i] == max_l[i+1]+1 and max_l[i+1] == max_l[i+2]+1 and max_l[i+2] == max_l[i+3]+1 and max_l[i+3] == max_l[i+4]+1:
                comb = 4 + max_l[i]/100
                break
        except:
            pass
    #–§–ª–µ—à
    for color in colors:
                if colors.count(color) >= 5:
                    crd = cards.copy()
                    for x in crd:
                        if round((x%1)*10) != color:
                            crd.remove(x)
                    comb = 5 + (round(max(crd)))/100
                    break
    #–§—É–ª–ª —Ö–∞—É—Å
    two = 0
    three = 0
    for n in max_low:
        if numbers.count(n) >= 3:
            three = n
        elif numbers.count(n) >= 2:
            two = n
        if two != 0  and three != 0:
            comb = 6 + three/100 + two/10000
            break

    #–ö–∞—Ä–µ
    for n in max_low:
                if numbers.count(n) >= 4:
                    comb = 7 + n/100
                    break
    #–°—Ç—Ä–∏—Ç —Ñ–ª–µ—à
    for j in range(4):
        max_l = []
        for x in cards:
            if round((x%1)*10) == j + 1:
                max_l.append(round(x))
        max_l = sorted(max_l)
        max_l.reverse()
        for i in range(len(max_l)):
            try:
                if max_l[i] == max_l[i+1]+1 and max_l[i+1] == max_l[i+2]+1 and max_l[i+2] == max_l[i+3]+1 and max_l[i+3] == max_l[i+4]+1:
                    if max_l[i] == 14:
                        comb = 9 + max_l[i]/100
                    else:
                        comb = 8 + max_l[i]/100
                    break

            except:
                pass

    return comb
def check_poker(idk):
    data = cursor.execute('SELECT * FROM poker')
    data = data.fetchall()
    if data is None:
        return False
    for d in data:
        players = unpack(d[7])
        if idk in players:
            return True
    return False
@bot.message_handler(commands=["start"])
def msg_start(message):
        data = cursor.execute('SELECT * FROM neko WHERE id = '+str(message.from_user.id))
        data = data.fetchone()
        if data is None:
            p = random.choice(photos)
            kormit = int(time.time()-4*3600)
            gulat = int(time.time())
            cursor.execute("INSERT INTO neko (id,name,rep,gulat,kormit,photo,bolnitsa,zavod,base,car,event,coins,buff,licension) VALUES ("+str(message.from_user.id)+",'–ù–µ–∫–æ–¥–µ–≤–æ—á–∫–∞',0,"+str(gulat)+","+str(kormit)+",'"+p+"',0,0,0,0,0,0,0,"+str(time.time() + 345600)+")")

            bot.send_message(message.chat.id,'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ù–µ–∫–æ—Å–ª–∞–≤–∏—é! –ö–∞–∂–¥–æ–º—É –≥—Ä–∞–∂–¥–∞–Ω–∏–Ω—É, —Å–æ–≥–ª–∞—Å–Ω–æ –∫–æ–Ω—Å—Ç–∏—Ç—É—Ü–∏–∏, –ø–æ–ª–∞–≥–∞–µ—Ç—Å—è –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫–∞, –¥–µ—Ä–∂–∏ —Å–≤–æ—é\n\n/cmd - —Å–ø–∏—Å–æ–∫ –∫–æ–º–º–∞–Ω–¥\n\n/help - –ø–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏')
            time.sleep(2)
            text = '–ù–∞–¥–æ –±—ã –ø–æ—è—Å–Ω–∏—Ç—å —Ç–µ–±–µ –Ω–∞—à–∏ –ø–æ—Ä—è–¥–∫–∏. <b>–ù–µ–∫–æ—Å–ª–∞–≤–∏—è</b> - –≤–µ–ª–∏–∫–∞—è –¥–µ—Ä–∂–∞–≤–∞, –∞ –≤–µ–ª–∏–∫–∞—è –¥–µ—Ä–∂–∞–≤–∞ –¥–æ–ª–∂–Ω–∞ –∑–∞–±–æ—Ç–∏—Ç—å—Å—è –æ –±–ª–∞–≥–æ–ø–æ–ª—É—á–∏–∏ —Å–≤–æ–∏—Ö –≥—Ä–∞–∂–¥–∞–Ω–∞—Ö, –Ω–µ —Ç–∞–∫ –ª–∏? –î–ª—è —ç—Ç–æ–≥–æ –∑–∞–ø—É—â–µ–Ω–∞ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è —Å–æ—Ü–∏–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ - –∫–∞–∂–¥–æ–º—É –ø–æ–ª–∞–≥–∞–µ—Ç—Å—è –ø–æ –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫–µ, –±–µ–∑ –æ—á–µ—Ä–µ–¥–µ–π –∏ –Ω–∞–ª–æ–≥–æ–≤. –ö —Å—á–∞—Å—Ç—å—é, –±–ª–∞–≥–æ–¥–∞—Ä—è –Ω–æ–≤–µ–π—à–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞–º —É –Ω–∞—Å –∏—Ö –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ. –ü–æ –∑–∞–∫–æ–Ω—É –∫–∞–∂–¥—ã–π –Ω–µ–∫–æ—Å–ª–∞–≤ –æ–±—è–∑–∞–Ω –∑–∞–±–æ—Ç–∏—Ç—å—Å—è –æ —Å–≤–æ–µ–π –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫–µ, –∞ –µ—ë —Å–º–µ—Ä—Ç—å —É–≥–æ–ª–æ–≤–Ω–æ –Ω–∞–∫–∞–∑—É–µ–º–∞'
            bot.send_photo(message.chat.id, photo = 'AgACAgIAAx0CZQN7rQACsJRi4vTvzOG-zrdVRRS3iQhKUm-K_QAC37oxG6IdGEsIcBwLxnaZgwEAAwIAA3MAAykE',caption = text,parse_mode='HTML')
            time.sleep(2)
            text = '–ê –≤–æ—Ç –∏ —Ç–≤–æ—è –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫–∞. –í–µ—Ä–æ—è—Ç–Ω–æ, –æ–Ω–∞ –ø—Ä–æ–≥–æ–ª–æ–¥–∞–ª–∞—Å—å –ø–æ–∫–∞ –∂–¥–∞–ª–∞ —Ç–µ–±—è. –ù–∞–ø–∏—à–∏ /neko —á—Ç–æ–±—ã —É–±–µ–¥–∏—Ç—å—Å—è –≤ —ç—Ç–æ–º, –∞ –∫–æ–≥–¥–∞ –ø–æ–∫–æ—Ä–º–∏—à—å - –Ω–µ –∑–∞–±—É–¥—å –¥–∞—Ç—å –µ–π –∏–º—è'
            bot.send_photo(message.chat.id, photo = p,caption = text,parse_mode='HTML')
            photo_design = 'AgACAgIAAx0CZQN7rQAC1H9jUKXUvp7PcTBU56QeArc8auJhJgAC5MQxGxUkiUrpDEdocq5guwEAAwIAA3MAAyoE'
            m = bot.send_photo(-1001694727085,photo=photo_design,caption = '–ò–¥—ë—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∞...')
            file_info = bot.get_file(m.photo[len(m.photo) - 1].file_id)
            downloaded_file = bot.download_file(file_info.file_path)
            src = 'bot/files/' + file_info.file_path
            with open(src, 'wb') as new_file:
                new_file.write(downloaded_file)
            im0 = Image.open(src)
            w,h = im0.size
            if w > h:
                nh = 630
                nw = int((630/h)*w)
            else:
                nw = 600
                nh = int((600/w)*h)
            if nw < 600:
                nw = 600
            if nh < 630:
                nh = 630
            im0 = im0.resize((nw, nh),  Image.ANTIALIAS)
            im1 = Image.open('bot/white1.png')
            im1.paste(im0.convert('RGB'), (40,34))
            im0 = im1
            im1 = Image.open('bot/02.png')
            im0.paste(im1.convert('RGB'), (0,0), im1)
            im0 = im0.convert('RGBA')
            pixdata = im0.load()
            for y in range(im0.size[1]):
                for x in range(im0.size[0]):
                    if pixdata[x,y][0]==255 and pixdata[x,y][1]==0 and pixdata[x,y][2]==0:
                        pixdata[x, y] = (255, 255, 255,0)

            chel = message.from_user.first_name
            if len(chel) > 18:
                chel = (chel[:18] + '..')
            m = bot.send_photo(-1001694727085,photo=p,caption = '–ò–¥—ë—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∞...')
            file_info = bot.get_file(m.photo[len(m.photo) - 1].file_id)
            downloaded_file = bot.download_file(file_info.file_path)
            src = 'bot/files/' + file_info.file_path
            with open(src, 'wb') as new_file:
                new_file.write(downloaded_file)
            im1 = Image.open(src)
            w,h = im1.size
            if w > h:
                nh = 630
                nw = int((630/h)*w)
            else:
                nw = 600
                nh = int((600/w)*h)
            if nw < 600:
                nw = 600
            if nh < 630:
                nh = 630
            im1 = im1.resize((nw, nh),  Image.ANTIALIAS)
            im3 = Image.open('bot/white1.png')
            im3.paste(im1.convert('RGB'), (490,30))
            im1 = im3
            im1.paste(im0.convert('RGB'), (0,0), im0)
            font = ImageFont.truetype('bot/segoeprint_bold.ttf', size=34)
            draw = ImageDraw.Draw(im1)
            cur = datetime.fromtimestamp(time.time() + 3*3600)
            d = int(cur.day)
            if d < 10:
                d = '0'+str(d)
            else:
                d = str(d)
            md = int(cur.month)
            if md < 10:
                md = '0'+str(md)
            else:
                md = str(md)
            y = str(cur.year)
            old_date = d+'.'+md+'.'+y

            cur = datetime.fromtimestamp(time.time() + 3*3600 + 345600)
            d = int(cur.day)
            if d < 10:
                d = '0'+str(d)
            else:
                d = str(d)
            md = int(cur.month)
            if md < 10:
                md = '0'+str(md)
            else:
                md = str(md)
            y = str(cur.year)
            new_date = d+'.'+md+'.'+y

            text = '–í—ã–¥–∞–Ω–æ:  @NekoslaviaBot'
            x, y = 63, 65
            fillcolor = "#FFFFFF"
            shadowcolor = "#242425"

            draw.text((x-2, y), text, font=font, fill=shadowcolor)
            draw.text((x+2, y), text, font=font, fill=shadowcolor)
            draw.text((x, y-2), text, font=font, fill=shadowcolor)
            draw.text((x, y+2), text, font=font, fill=shadowcolor)

            draw.text((x-2, y-2), text, font=font, fill=shadowcolor)
            draw.text((x+2, y-2), text, font=font, fill=shadowcolor)
            draw.text((x-2, y+2), text, font=font, fill=shadowcolor)

            draw.text((x, y), text, font=font, fill=fillcolor)

            text = '–ö–æ–º—É:  ' + chel
            x, y = 63, 125

            draw.text((x-2, y), text, font=font, fill=shadowcolor)
            draw.text((x+2, y), text, font=font, fill=shadowcolor)
            draw.text((x, y-2), text, font=font, fill=shadowcolor)
            draw.text((x, y+2), text, font=font, fill=shadowcolor)

            draw.text((x-2, y-2), text, font=font, fill=shadowcolor)
            draw.text((x+2, y-2), text, font=font, fill=shadowcolor)
            draw.text((x-2, y+2), text, font=font, fill=shadowcolor)

            draw.text((x, y), text, font=font, fill=fillcolor)

            text = '–î–∞—Ç–∞ –≤—ã–¥–∞—á–∏:  ' + old_date
            x, y = 63, 185

            draw.text((x-2, y), text, font=font, fill=shadowcolor)
            draw.text((x+2, y), text, font=font, fill=shadowcolor)
            draw.text((x, y-2), text, font=font, fill=shadowcolor)
            draw.text((x, y+2), text, font=font, fill=shadowcolor)

            draw.text((x-2, y-2), text, font=font, fill=shadowcolor)
            draw.text((x+2, y-2), text, font=font, fill=shadowcolor)
            draw.text((x-2, y+2), text, font=font, fill=shadowcolor)

            draw.text((x, y), text, font=font, fill=fillcolor)

            text = '–î–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ:  ' + new_date
            x, y = 63, 245

            draw.text((x-2, y), text, font=font, fill=shadowcolor)
            draw.text((x+2, y), text, font=font, fill=shadowcolor)
            draw.text((x, y-2), text, font=font, fill=shadowcolor)
            draw.text((x, y+2), text, font=font, fill=shadowcolor)

            draw.text((x-2, y-2), text, font=font, fill=shadowcolor)
            draw.text((x+2, y-2), text, font=font, fill=shadowcolor)
            draw.text((x-2, y+2), text, font=font, fill=shadowcolor)

            draw.text((x, y), text, font=font, fill=fillcolor)

            font = ImageFont.truetype('bot/comicbd.ttf', size=52)
            text = '–õ–ò–¶–ï–ù–ó–ò–Ø –ù–ê\n–ù–ï–ö–û–î–ï–í–û–ß–ö–£'
            x, y = 95, 500
            fillcolor = "#F6B1CB"

            draw.text((x-2, y), text, font=font, fill=shadowcolor)
            draw.text((x+2, y), text, font=font, fill=shadowcolor)
            draw.text((x, y-2), text, font=font, fill=shadowcolor)
            draw.text((x, y+2), text, font=font, fill=shadowcolor)

            draw.text((x-2, y-2), text, font=font, fill=shadowcolor)
            draw.text((x+2, y-2), text, font=font, fill=shadowcolor)
            draw.text((x-2, y+2), text, font=font, fill=shadowcolor)

            draw.text((x, y), text, font=font, fill=fillcolor)

            im1.save('bot/result.png')
            f = open("bot/result.png","rb")
            m = bot.send_photo(message.chat.id, photo=f,caption = '–ò —Å–∞–º–æ–µ –≥–ª–∞–≤–Ω–æ–µ, –¥–µ—Ä–∂–∏ –ª–∏—Ü–µ–Ω–∑–∏—é üé´ –Ω–∞ —Å–≤–æ—é –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫—É. –ù—É–∂–Ω–æ –±—É–¥–µ—Ç –ø—Ä–æ–¥–ª–∏—Ç—å –µ—ë —á–µ—Ä–µ–∑ 4 –¥–Ω—è, –µ—Å–ª–∏ –Ω–µ —Ö–æ—á–µ—à—å –ø–ª–∞—Ç–∏—Ç—å —à—Ç—Ä–∞—Ñ, –∫–æ–Ω–µ—á–Ω–æ')
            fil = m.photo[len(m.photo) - 1].file_id
            os.remove(src)
            cursor.execute("UPDATE neko SET photo_licension = '" + fil + "' WHERE id = " + str(message.from_user.id))
            #conn.commit()
        else:
            bot.send_message(message.chat.id,'–¢—ã —É–∂–µ –Ω–µ–∫–æ—Å–ª–∞–≤ –µ–±–∞–Ω–∞—Ç')
            bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
@bot.message_handler(commands=["pet"])
def msg_pet(message):
        if message.reply_to_message is None:
            bot.send_message(message.chat.id, '–û—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–∞—É–Ω')
            bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
            return
        try:
            r = bot.get_user_profile_photos(message.reply_to_message.from_user.id)
            p = r.photos
            for photo_sizes in p:
                phot = max(photo_sizes, key=lambda x: x.width)
                fil = phot.file_id
                m = bot.send_photo(-1001694727085,photo=fil)
                file_info = bot.get_file(m.photo[len(m.photo) - 1].file_id)
                downloaded_file = bot.download_file(file_info.file_path)
                src = 'bot/files/' + file_info.file_path
                with open(src, 'wb') as new_file:
                    new_file.write(downloaded_file)
                #img = Image.open(src)
                #mean = ImageStat.Stat(img).mean
                #aboba = '{: .0f} {:.0f} {:.0f}'.format(*mean)
                #args = aboba.split()
                #mean = (int(args[0]),int(args[1]),int(args[2]))
                mean = dominant_color(src)
                make(src, 'result.gif',mean)
                f = open("result.gif","rb")
                bot.send_animation(message.chat.id,f)
                os.remove(src)
                f.close()
                break
        except Exception as e:
            bot.send_message(message.chat.id, e)
@bot.message_handler(commands=["sex"])
def msg_sex(message):
        bot.send_animation(message.chat.id,r'https://c.tenor.com/V8cU0yYnehAAAAAM/nosex-sex.gif')
@bot.message_handler(commands=["cmd"])
def msg_cmd(message):
        text = '–°–ø–∏—Å–æ–∫ –∫–æ–º–º–∞–Ω–¥:\n\n<code>–ù–µ–∫–æ</code> - —Ç–≤–æ—è –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫–∞\n<code>–í–µ—â–∏</code> - –≤—Å—è–∫–∏–π –º—É—Å–æ—Ä, —Ç–≤–æ–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å\n<code>–ü–æ–∫–æ—Ä–º–∏—Ç—å</code> - –º–æ–∂–Ω–æ –∫–æ—Ä–º–∏—Ç—å —Ä–∞–∑ –≤ 4 —á–∞—Å–∞\n<code>–í—ã–≥—É–ª—è—Ç—å</code> - –º–æ–∂–Ω–æ –≤—ã–≥—É–ª–∏–≤–∞—Ç—å —Ä–∞–∑ –≤ 6 —á–∞—Å–æ–≤, –æ—Ç 2-—Ö –¥–æ–≤–µ—Ä–∏—è\n<code>–ü–æ–≥–ª–∞–¥–∏—Ç—å</code> - –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ–≤–æ—Ä–∏—Ç —Å–∞–º–æ –∑–∞ —Å–µ–±—è, –æ—Ç 10-—Ç–∏ –¥–æ–≤–µ—Ä–∏—è\n<code>–ò–º—è [—Ç–µ–∫—Å—Ç]</code> - –¥–∞—Ç—å –∏–º—è, –æ—Ç 1-–≥–æ –¥–æ–≤–µ—Ä–∏—è\n<code>–¢–æ–ø</code> - –ª—É—á—à–∏–µ –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫–∏\n<code>–ö–ª–∞–¥–±–∏—â–µ</code> - –Ω–µ–¥–∞–≤–Ω–æ —É–º–µ—Ä—à–∏–µ –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫–∏\n<code>–ë–∞–∑–∞</code> - —Ç—ã –∑–¥–µ—Å—å –∂–∏–≤—ë—à—å\n<code>–ì–∞—Ä–∞–∂</code> - —Ç—É—Ç –±—É–¥–µ—Ç —Å—Ç–æ—è—Ç—å —Ç–≤–æ—è –º–∞—à–∏–Ω–∞\n<code>–ó–∞–≤–æ–¥</code> - –æ—Ç—Ä–∞–±–æ—Ç–∞—Ç—å —Å–º–µ–Ω—É —Ä–∞–∑ –≤ –¥–µ–Ω—å\n<code>–ö–∞–∑–∏–Ω–æ</code> - –∞ –∑–¥–µ—Å—å –º–æ–∂–Ω–æ –ø—Ä–æ–µ–±–∞—Ç—å –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –¥–µ–Ω—å–≥–∏\n<code>–î–æ–Ω–∞—Ç [N]</code> - –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –¥–µ–Ω—å–≥–∏ –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ\n<code>–ê—Ä–µ–Ω–∞</code> - –∞—Ä–µ–Ω–∞ –Ω–µ–∫–æ–¥–µ–≤–æ—á–µ–∫, –æ—Ç 20-—Ç–∏ –¥–æ–≤–µ—Ä–∏—è\n<code>–õ–∏—Ü–µ–Ω–∑–∏—è</code> - –ø–æ–ª—É—á–∏—Ç—å –Ω–æ–≤—É—é –ª–∏—Ü–µ–Ω–∑–∏—é –Ω–∞ –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫—É –∑–∞ 10 üí∞\n<code>–ü–æ—Ä—Ç–∞–ª</code> - –¥–∞–Ω–∂ –æ—Ç 50-—Ç–∏ –¥–æ–≤–µ—Ä–∏—è, –Ω—É–∂–µ–Ω –Ω–µ–∫–æ–º–æ–±–∏–ª—å\n<code>–ù–∞–≤—ã–∫–∏</code> - —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –±–æ–µ–≤—ã–µ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ —Ç–≤–æ–µ–π –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫–∏'
        bot.send_message(message.chat.id,text,parse_mode='HTML')
@bot.message_handler(commands=["paint"])
def msg_paint(message):
        try:
            keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True,one_time_keyboard=True)
            webAppTest = types.WebAppInfo("https://mackaronina.github.io/bibasosina/")
            one_butt = types.KeyboardButton(text="–†–∏—Å–æ–≤–∞—Ç—å –ø–∏—Å—å–∫–∏", web_app=webAppTest) #—Å–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É —Ç–∏–ø–∞ webapp
            keyboard.add(one_butt)
            bot.send_message(message.chat.id, '–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É —á—Ç–æ–±—ã —Ä–∏—Å–æ–≤–∞—Ç—å –ø–∏—Å—å–∫–∏', reply_markup=keyboard)
        except Exception as e:
            pass
@bot.message_handler(commands=["clear"])
def msg_clear(message):
        try:
            keyboard = types.ReplyKeyboardRemove()
            bot.send_message(message.chat.id, '–£–±—Ä–∞–ª —ç—Ç—É –µ–±—É—á—É—é –∫–Ω–æ–ø–∫—É', reply_markup=keyboard)
        except Exception as e:
            pass
@bot.message_handler(commands=["test"])
def msg_spin(message):
        try:
            data = cursor.execute('SELECT * FROM neko')
            data = data.fetchall()
            i = 0
            while i < len(data):
                idk = data[i][0]
                skill1 = data[i][30]
                skill2 = data[i][31]
                if skill1 >= 8:
                    skill1 = skill1 - 7 + 100
                if skill2 >= 8:
                    skill2 = skill2 - 7 + 100
                cursor.execute('UPDATE neko SET skill_one = ' + str(skill1) + ',skill_two = ' + str(skill2) + ' WHERE id = ' + str(idk))
                i = i + 1
        except Exception as e:
            bot.send_message(-1001694727085,e)
@bot.message_handler(content_types="web_app_data")
def answer(webAppMes):
        try:
            bot.send_photo(-1001268892138,photo = webAppMes.web_app_data.data)
        except:
            bot.send_message(-1001268892138, 'error')
@bot.message_handler(commands=["fix"])
def msg_fix(message):
        global can
        global dcan
        can = True
        dcan = True
        bot.send_message(message.chat.id,'–î–æ–ø—É—Å—Ç–∏–º',parse_mode='HTML')
@bot.message_handler(commands=["help"])
def msg_help(message):
        text = '<b>–ù–µ–∫–æ—Å–ª–∞–≤–∏—è</b> - –≤–µ–ª–∏–∫–∞—è –¥–µ—Ä–∂–∞–≤–∞, –∞ –≤–µ–ª–∏–∫–∞—è –¥–µ—Ä–∂–∞–≤–∞ –¥–æ–ª–∂–Ω–∞ –∑–∞–±–æ—Ç–∏—Ç—å—Å—è –æ —Å–≤–æ–∏—Ö –≥—Ä–∞–∂–¥–∞–Ω–∞—Ö, –Ω–µ —Ç–∞–∫ –ª–∏? –î–ª—è —ç—Ç–æ–≥–æ –∑–∞–ø—Évv—â–µ–Ω–∞ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è —Å–æ—Ü–∏–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ - –∫–∞–∂–¥–æ–º—É –ø–æ–ª–∞–≥–∞–µ—Ç—Å—è –ø–æ –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫–µ, –±–µ–∑ –æ—á–µ—Ä–µ–¥–µ–π –∏ –Ω–∞–ª–æ–≥–æ–≤. –ö —Å—á–∞—Å—Ç—å—é, –±–ª–∞–≥–æ–¥–∞—Ä—è –Ω–æ–≤–µ–π—à–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞–º —É –Ω–∞—Å –∏—Ö –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ. –ü–æ –∑–∞–∫–æ–Ω—É –∫–∞–∂–¥—ã–π –Ω–µ–∫–æ—Å–ª–∞–≤ –æ–±—è–∑–∞–Ω –∑–∞–±–æ—Ç–∏—Ç—å—Å—è –æ —Å–≤–æ–µ–π –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫–µ, –∞ –µ—ë —Å–º–µ—Ä—Ç—å —É–≥–æ–ª–æ–≤–Ω–æ –Ω–∞–∫–∞–∑—É–µ–º–∞. –û—Å–Ω–æ–≤–æ–π –∂–µ –Ω–∞—à–µ–≥–æ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å—Ç—Ä–æ—è —è–≤–ª—è–µ—Ç—Å—è —Å–æ—Ü–∏–∞–ª—å–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥ –≥—Ä–∞–∂–¥–∞–Ω, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–ø—Ä—è–º—É—é –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –¥–æ–≤–µ—Ä–∏—è –ø–∏—Ç–æ–º—Ü–µ–≤ –∫ –Ω–∏–º\n\n–ï—Å–ª–∏ —Ç–µ–±–µ —ç—Ç–æ–≥–æ –º–∞–ª–æ, –≤–æ—Ç —Å—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª:\n<a href="https://www.youtube.com/channel/UCGGQGNMYzZqNJSCmmLsqEBg">Nekoslavia</a>\n–ó–∞–¥–æ–Ω–∞—Ç–∏—Ç—å –Ω–∞ —Ä–∞–∑–≤–∏—Ç–∏–µ –±–æ—Ç–∞:\n<i>5375 4141 3075 3857</i>'
        text = '–ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏:\n\n<a href="https://t.me/nekoslavia">–ë–µ—Å–µ–¥–∞ —Å –±–æ—Ç–æ–º</a>\n\n<a href="https://www.youtube.com/channel/UCGGQGNMYzZqNJSCmmLsqEBg">–ù–∞—à –∫–∞–Ω–∞–ª –Ω–∞ —é—Ç—É–±–µ</a>\n\n<a href="https://send.monobank.ua/jar/8A79RjcXRM">–ó–∞–¥–æ–Ω–∞—Ç–∏—Ç—å –Ω–∞ —Ä–∞–∑–≤–∏—Ç–∏–µ –±–æ—Ç–∞</a>'
        bot.send_photo(message.chat.id, photo = 'AgACAgIAAx0CZQN7rQACsNJi4zRDEZJXRw3LDwsaG18kszXm_wACPbsxG6IdGEsJeCDpoaaZxAEAAwIAA3MAAykE',caption = text,parse_mode='HTML')
@bot.message_handler(commands=["stat"])
def msg_stat(message):
        text = '–í—Å–µ–≥–æ –Ω–µ–∫–æ–¥–µ–≤–æ—á–µ–∫:  ' + str(len(photos) + len(elite_photos) + len(ero_photos) + len(arc_photos) + len(trap_photos)) + '\n–û–±—ã—á–Ω—ã–µ:  ' + str(len(photos)) + '\n–ú–∞–≥–∞–∑–∏–Ω:  ' + str(len(elite_photos)) + '\n–ö–∞–∑–∏–Ω–æ:  ' + str(len(ero_photos)) + '\n–ù–µ–∫–æ–∞—Ä–∫–∏:  ' + str(len(arc_photos)) + '\n–ù–µ–∫–æ–º–∞–ª—å—á–∏–∫–∏:  ' + str(len(trap_photos))
        bot.send_message(message.chat.id,text)
@bot.message_handler(func=lambda message: True,content_types=["text"])
def repeat_text(message):
        if str(message.from_user.id) in nekosas:
            args = nekosas[str(message.from_user.id)]
            args = args.split()
            dr_day = int(args[0])
            dr_month = int(args[1])
            cur = datetime.fromtimestamp(time.time() + 3*3600)
            if cur.day == dr_day and cur.month == dr_month:
                bot.send_message(message.chat.id, '–ò–º–µ–Ω–∏–Ω–Ω–∏–∫–∞ —Å–ø—Ä–æ—Å–∏—Ç—å –∑–∞–±—ã–ª–∏',reply_to_message_id=message.message_id)
                return
        if message.text == '–Ω–µ–∫–æ' or message.text == '–ù–µ–∫–æ' or message.text == '@NekoslaviaBot –ù–µ–∫–æ' or message.text == '@NekoslaviaBot –Ω–µ–∫–æ':
            data = cursor.execute('SELECT * FROM neko WHERE id = '+str(message.from_user.id))
            data = data.fetchone()
            if data is None:
                bot.send_message(message.chat.id,'–¢—ã –Ω–µ –æ–¥–∏–Ω –∏–∑ –Ω–∞—Å, –Ω–∞–ø–∏—à–∏ /start —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –Ω–µ–∫–æ—Å–ª–∞–≤–æ–º ')
                return
            markup = types.InlineKeyboardMarkup()
            switch_button1 = types.InlineKeyboardButton(text='–ü–æ–∫–æ—Ä–º–∏—Ç—å üêü', switch_inline_query_current_chat = "–ü–æ–∫–æ—Ä–º–∏—Ç—å")
            switch_button2 = types.InlineKeyboardButton(text='–í—ã–≥—É–ª—è—Ç—å üö∂‚Äç‚ôÄÔ∏è', switch_inline_query_current_chat = "–í—ã–≥—É–ª—è—Ç—å")
            switch_button3 = types.InlineKeyboardButton(text='–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å üéí', switch_inline_query_current_chat = "–í–µ—â–∏")
            markup.add(switch_button1,switch_button2)
            markup.add(switch_button3)
            nam = str(data[1]).rstrip()
            rep = data[2]
            phot = str(data[5]).rstrip()
            new_phot = str(data[38]).rstrip()
            if new_phot != 'None':
                phot = new_phot
            event = data[10]
            bolnitsa = int(data[6] - time.time())
            coins = data[11]
            baza = data[8]
            buff = data[12]
            ch = data[13]
            kormit = int(time.time() - data[4])
            gulat = int(time.time() - data[3])
            car = data[9]
            chel = str(data[16]).rstrip()
            gender = data[33]
            if message.from_user.first_name != chel:
                chel = message.from_user.first_name
                cursor.execute("UPDATE neko SET chel = '"+ str(chel) +"' WHERE id = " + str(message.from_user.id))
                #conn.commit()
            if gulat < 6*3600:
                g = '–ü–æ–∫–∞ –Ω–µ —Ö–æ—á–µ—Ç –≥—É–ª—è—Ç—å ‚ùå\n'
            else:
                g = '–•–æ—Ç–µ–ª–∞ –±—ã –ø—Ä–æ–≥—É–ª—è—Ç—å—Å—è ‚úÖ\n'
                if gender == 1:
                    g = '–•–æ—Ç–µ–ª –±—ã –ø—Ä–æ–≥—É–ª—è—Ç—å—Å—è ‚úÖ\n'
            if kormit < 4*3600:
                k = '\n–ü–æ–∫–∞ –Ω–µ —Ö–æ—á–µ—Ç –µ—Å—Ç—å ‚ùå\n'
            else:
                k = '\n–ù–µ –æ—Ç–∫–∞–∑–∞–ª–∞—Å—å –±—ã –æ—Ç –≤–∏—Å–∫–∞—Å–∞ ‚úÖ\n'
                if gender == 1:
                    k = '\n–ù–µ –æ—Ç–∫–∞–∑–∞–ª—Å—è –±—ã –æ—Ç –≤–∏—Å–∫–∞—Å–∞ ‚úÖ\n'
            if car == 0:
                c = '–ù–µ—Ç –Ω–µ–∫–æ–º–æ–±–∏–ª—è üöò\n'
            else:
                c = '–ï—Å—Ç—å –Ω–µ–∫–æ–º–æ–±–∏–ª—å üöò\n'
            if ch != message.chat.id:
                ch = message.chat.id
                cursor.execute('UPDATE neko SET chat = '+ str(ch) +' WHERE id = ' + str(message.from_user.id))
                #conn.commit()
            if nam == '–ù–µ–∫–æ–¥–µ–≤–æ—á–∫–∞' or nam == '–ù–µ–∫–æ–º–∞–ª—å—á–∏–∫':
                txt = '–£ –Ω–µ—ë –Ω–µ—Ç –∏–º–µ–Ω–∏'
                if gender == 1:
                    txt = '–£ –Ω–µ–≥–æ –Ω–µ—Ç –∏–º–µ–Ω–∏'
            else:
                txt = '–ï—ë –∑–æ–≤—É—Ç ' + nam
                if gender == 1:
                    txt = '–ï–≥–æ –∑–æ–≤—É—Ç ' + nam
            text = '–ß—Ç–æ –∂, —ç—Ç–æ —Ç–≤–æ—è –ª–∏—á–Ω–∞—è –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫–∞, —á–µ–º –Ω–µ –ø–æ–≤–æ–¥ –¥–ª—è –≥–æ—Ä–¥–æ—Å—Ç–∏?\n\n' + txt + k + g + '–î–æ–≤–µ—Ä–∏–µ üíû:  '+str(rep) + '\n\n–ê –≤–æ—Ç —á—Ç–æ –∫–∞—Å–∞–µ—Ç—Å—è —Ç–µ–±—è...\n'
            if gender == 1:
                text = '–ß—Ç–æ –∂, —ç—Ç–æ —Ç–≤–æ–π –ª–∏—á–Ω—ã–π –Ω–µ–∫–æ–º–∞–ª—å—á–∏–∫, —á–µ–º –Ω–µ –ø–æ–≤–æ–¥ –¥–ª—è –≥–æ—Ä–¥–æ—Å—Ç–∏?\n\n' + txt + k + g + '–î–æ–≤–µ—Ä–∏–µ üíû:  '+str(rep) + '\n\n–ê –≤–æ—Ç —á—Ç–æ –∫–∞—Å–∞–µ—Ç—Å—è —Ç–µ–±—è...\n'
            text = text + c + '–£—Ä–æ–≤–µ–Ω—å –Ω–µ–∫–æ–±–∞–∑—ã üè†:  ' + str(baza) + '\n–ù–µ–∫–æ–≥—Ä–∏–≤–µ–Ω üí∞:  ' + str(coins)
            if bolnitsa > 0:
                if bolnitsa < 3600:
                    b = 1
                else:
                    b = math.ceil(bolnitsa/3600)
                text = text + '\n–¢—ã –≤ –±–æ–ª—å–Ω–∏—Ü–µ üíä\n–û—Å—Ç–∞–ª–æ—Å—å –ª–µ—á–∏—Ç—å—Å—è ' + str(b) + ' —á–∞—Å–æ–≤'
            bot.send_photo(message.chat.id,photo=phot,caption = text,reply_markup=markup)
        elif message.text == '–í–µ—â–∏' or message.text == '–≤–µ—â–∏' or message.text == '@NekoslaviaBot –í–µ—â–∏' or message.text == '@NekoslaviaBot –≤–µ—â–∏':
            data = cursor.execute('SELECT * FROM neko WHERE id = '+str(message.from_user.id))
            data = data.fetchone()
            if data is None:
                bot.send_message(message.chat.id,'–¢—ã –Ω–µ –æ–¥–∏–Ω –∏–∑ –Ω–∞—Å, –Ω–∞–ø–∏—à–∏ /start —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –Ω–µ–∫–æ—Å–ª–∞–≤–æ–º ')
                return
            notifed = data[39]
            casino = data[40]
            pilk = data[41]
            days = data[42]
            coins = data[11]
            buff = data[12]
            monsters = data[20]
            heal = data[21]
            boxes = data[34]
            bones = data[43]
            markup = types.InlineKeyboardMarkup()
            switch_button1 = types.InlineKeyboardButton(text='–ê–Ω—Ç–∏–ø–æ—Ö–º–µ–ª–∏–Ω üçº', switch_inline_query_current_chat = "–ê–Ω—Ç–∏–ø–æ—Ö–º–µ–ª–∏–Ω")
            markup.add(switch_button1)
            switch_button2 = types.InlineKeyboardButton(text='–í–∏—Å–∫–∞—Å üç´', switch_inline_query_current_chat = "–í–∏—Å–∫–∞—Å")
            markup.add(switch_button2)
            text = '–≠—Ç–æ —Ç–≤–æ–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å. –ù–∞–¥–µ—é—Å—å, —Ç—ã —Å–º–æ–∂–µ—à—å –Ω–∞–π—Ç–∏ –≤—Å–µ–º—É —ç—Ç–æ–º—É –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ\n\n–ù–µ–∫–æ–≥—Ä–∏–≤–µ–Ω üí∞:  ' + str(coins) + '\n–í–∏—Å–∫–∞—Å–∞ üç´:  ' + str(buff) + '\n–ú–æ–Ω—Å—Ç—Ä–æ–≤ ‚ö°Ô∏è:  ' + str(monsters) + '\n–ê–Ω—Ç–∏–ø–æ—Ö–º–µ–ª–∏–Ω–∞ üçº:  ' + str(heal) + '\nPilk ü•õ: ' + str(pilk)
            if boxes > 0:
                text = text + '\n–ü–æ—Å—ã–ª–æ–∫ üì¶:  ' + str(boxes)
            if bones > 0:
                text = text + '\n–ö–æ—Å—Ç–µ–π —Å–∞–Ω—Å–∞ ü¶¥:  ' + str(bones)
            text = text + '\n\n<code>–ê–Ω—Ç–∏–ø–æ—Ö–º–µ–ª–∏–Ω</code> - –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–µ–¥–º–µ—Ç —á—Ç–æ–±—ã –≤—ã–π—Ç–∏ –∏–∑ –±–æ–ª—å–Ω–∏—Ü—ã\n\n<code>–í–∏—Å–∫–∞—Å</code> - –≤–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤–∏—Å–∫–∞—Å–∞'
            bot.send_photo(message.chat.id,photo='AgACAgIAAx0CZQN7rQACrNBi2OxzrdcKU1c1LOxqBdGsjRxKDAACn70xG-8HyUoUEuWNwlQYIgEAAwIAA3MAAykE',caption = text,parse_mode='HTML',reply_markup=markup)
        elif message.text == '–ù–∞–≤—ã–∫–∏' or message.text == '–Ω–∞–≤—ã–∫–∏' or message.text == '@NekoslaviaBot –ù–∞–≤—ã–∫–∏' or message.text == '@NekoslaviaBot –Ω–∞–≤—ã–∫–∏':
            data = cursor.execute('SELECT * FROM neko WHERE id = '+str(message.from_user.id))
            data = data.fetchone()
            if data is None:
                bot.send_message(message.chat.id,'–¢—ã –Ω–µ –æ–¥–∏–Ω –∏–∑ –Ω–∞—Å, –Ω–∞–ø–∏—à–∏ /start —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –Ω–µ–∫–æ—Å–ª–∞–≤–æ–º ')
                return
            skill1 = data[30]
            skill2 = data[31]
            gender = data[33]
            if skill1 > 100:
                sktxt1 = active_skill_list[skill1-100]
            else:
                sktxt1 = passive_skill_list[skill1]
            if skill2 > 100:
                sktxt2 = active_skill_list[skill2-100]
            else:
                sktxt2 = passive_skill_list[skill2]
            text = '–≠—Ç–æ –Ω–∞–≤—ã–∫–∏ –∏ —á–µ—Ä—Ç—ã —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞, –∫–æ—Ç–æ—Ä—ã–º–∏ –æ–±–ª–∞–¥–∞–µ—Ç —Ç–≤–æ—è –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫–∞. –£–¥–∏–≤–∏—Ç–µ–ª—å–Ω–æ, –Ω–æ –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫–∏ –æ–±—ã—á–Ω–æ –Ω–µ —Ç–∞–∫–∏–µ —Å–ª–∞–±—ã–µ, –∫–∞–∫–∏–º–∏ –∫–∞–∂—É—Ç—Å—è –Ω–∞ –ø–µ—Ä–≤—ã–π –≤–∑–≥–ª—è–¥, –∞ –∏—Ö –∫–æ–≥—Ç–∏ –æ—Å—Ç—Ä–µ–µ –±—Ä–∏—Ç–≤—ã\n\n' + sktxt1 + '\n' + sktxt2
            if gender == 1:
                text = '–≠—Ç–æ –Ω–∞–≤—ã–∫–∏ –∏ —á–µ—Ä—Ç—ã —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∞, –∫–æ—Ç–æ—Ä—ã–º–∏ –æ–±–ª–∞–¥–∞–µ—Ç —Ç–≤–æ–π –Ω–µ–∫–æ–º–∞–ª—å—á–∏–∫. –£–¥–∏–≤–∏—Ç–µ–ª—å–Ω–æ, –Ω–æ –Ω–µ–∫–æ–º–∞–ª—å—á–∏–∫–∏ –æ–±—ã—á–Ω–æ –Ω–µ —Ç–∞–∫–∏–µ —Å–ª–∞–±—ã–µ, –∫–∞–∫–∏–º–∏ –∫–∞–∂—É—Ç—Å—è –Ω–∞ –ø–µ—Ä–≤—ã–π –≤–∑–≥–ª—è–¥, –∞ –∏—Ö –∫–æ–≥—Ç–∏ –æ—Å—Ç—Ä–µ–µ –±—Ä–∏—Ç–≤—ã\n\n' + sktxt1 + '\n' + sktxt2
            bot.send_photo(message.chat.id,photo='AgACAgIAAx0CZQN7rQACzrBjRJTTrokWxq7HNUPeZWB8hwhOAwACy8AxGzDSKUp1KOI5xNQ4_gEAAwIAA3MAAyoE',caption = text, parse_mode='HTML')
        elif message.text == '–∞–Ω—Ç–∏–ø–æ—Ö–º–µ–ª–∏–Ω' or message.text == '–ê–Ω—Ç–∏–ø–æ—Ö–º–µ–ª–∏–Ω' or message.text == '@NekoslaviaBot –ê–Ω—Ç–∏–ø–æ—Ö–º–µ–ª–∏–Ω' or message.text == '@NekoslaviaBot –∞–Ω—Ç–∏–ø–æ—Ö–º–µ–ª–∏–Ω':
            data = cursor.execute('SELECT * FROM neko WHERE id = '+str(message.from_user.id))
            data = data.fetchone()
            if data is None:
                bot.send_message(message.chat.id,'–¢—ã –Ω–µ –æ–¥–∏–Ω –∏–∑ –Ω–∞—Å, –Ω–∞–ø–∏—à–∏ /start —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –Ω–µ–∫–æ—Å–ª–∞–≤–æ–º')
                return
            heal = data[21]
            event = data[10]
            bolnitsa = int(data[6] - time.time())

            if event > 0:
                bot.send_message(message.chat.id, '–¢—ã –≥—É–ª—è–µ—à—å –µ–±–∞–Ω–∞—Ç')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            if heal < 1:
                bot.send_message(message.chat.id, '–£ —Ç–µ–±—è –Ω–µ—Ç –∞–Ω—Ç–∏–ø–æ—Ö–º–µ–ª–∏–Ω–∞ –¥–µ–≥–µ–Ω–µ—Ä–∞—Ç')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            if message.reply_to_message is None:
                if bolnitsa <= 0:
                    bot.send_message(message.chat.id, '–¢—ã –Ω–µ –≤ –±–æ–ª—å–Ω–∏—Ü–µ –¥–µ–±–∏–ª')
                    bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                    return
                bolnitsa = 0
                heal = heal - 1
                cursor.execute('UPDATE neko SET bolnitsa = '+ str(bolnitsa) +',heal = ' + str(heal) + ' WHERE id = ' + str(message.from_user.id))
                bot.send_message(message.chat.id, '–¢—ã –≤—ã–ª–µ—Ç–µ–ª(–∞) –∏–∑ –±–æ–ª—å–Ω–∏—Ü—ã –Ω–∞ –∂–æ–ø–Ω–æ–π —Ç—è–≥–µ')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFhGti8zHsovf2QjnACCIhNm-mGDTNfgACJhUAAm8UmEppPj8WKn_J6ikE')
                return
            else:
                idk = message.reply_to_message.from_user.id
                if idk == message.from_user.id:
                    bot.send_message(message.chat.id, '–ß–µ—Ç —è –Ω–µ –ø–æ–Ω—è–ª')
                    bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                    return
                data = cursor.execute('SELECT * FROM neko WHERE id = '+str(idk))
                data = data.fetchone()
                if data is None:
                    bot.send_message(message.chat.id,'–£ —ç—Ç–æ–≥–æ –ª–æ—Ö–∞ –Ω–µ—Ç –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫–∏')
                    bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                    return
                b2 = int(data[6] - time.time())
                chel = str(data[16]).rstrip()
                if b2 <= 0:
                    bot.send_message(message.chat.id,'–≠—Ç–æ—Ç –ª–æ—Ö –Ω–µ –≤ –±–æ–ª—å–Ω–∏—Ü–µ')
                    bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                    return
                heal = heal - 1
                b2 = 0
                cursor.execute('UPDATE neko SET heal = ' + str(heal) + ' WHERE id = ' + str(message.from_user.id))
                cursor.execute('UPDATE neko SET bolnitsa = ' + str(b2) + ' WHERE id = ' + str(idk))
                bot.send_message(message.chat.id, '<a href="tg://user?id='+str(idk)+'">'+str(chel)+'</a> –≤—ã–ª–µ—Ç–µ–ª(–∞) –∏–∑ –±–æ–ª—å–Ω–∏—Ü—ã –Ω–∞ –∂–æ–ø–Ω–æ–π —Ç—è–≥–µ',parse_mode='HTML')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFhGti8zHsovf2QjnACCIhNm-mGDTNfgACJhUAAm8UmEppPj8WKn_J6ikE')
                return


        elif message.text == '—Ç–æ–ø' or message.text == '–¢–æ–ø' or message.text == '@NekoslaviaBot –¢–æ–ø' or message.text == '@NekoslaviaBot —Ç–æ–ø':
            data = cursor.execute('SELECT * FROM neko WHERE id = '+str(message.from_user.id))
            data = data.fetchone()
            if data is None:
                bot.send_message(message.chat.id,'–¢—ã –Ω–µ –æ–¥–∏–Ω –∏–∑ –Ω–∞—Å, –Ω–∞–ø–∏—à–∏ /start —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –Ω–µ–∫–æ—Å–ª–∞–≤–æ–º')
                return
            nam = str(data[1]).rstrip()
            rep = data[2]
            phot = str(data[5]).rstrip()
            event = data[10]
            m = cursor.execute('SELECT MAX(wins) FROM neko')
            m = m.fetchone()
            m = m[0]
            text = '–ü–∏—Ç–æ–º—Ü—ã –ª—É—á—à–∏—Ö –≥—Ä–∞–∂–¥–∞–Ω –Ω–∞—à–µ–π —Ä–æ–¥–∏–Ω—ã, –ù–µ–∫–æ—Å–ª–∞–≤–∏–∏. –ù–µ—Ç, —á–∏—Å–ª–∞ —ç—Ç–æ –Ω–µ —Ü–µ–Ω–∞ –∑–∞ —á–∞—Å, –¥–∞–∂–µ –Ω–µ –¥—É–º–∞–π –æ–± —ç—Ç–æ–º\n\n'
            cmd = """SELECT * FROM neko ORDER BY rep DESC"""
            api_url = 'https://bibasosinka.pythonanywhere.com/sql/'
            response = requests.get(api_url + cmd)
            response_json = response.json()
            data = response_json["data"]

            #data = cursor.execute('SELECT * FROM neko ORDER BY rep DESC')
            #data = data.fetchall()
            i = 0
            if data is not None:
             for d in data:
                if i == 10:
                    break
                if str(d[1]).rstrip() == '–ù–µ–∫–æ–¥–µ–≤–æ—á–∫–∞' or str(d[1]).rstrip() == '–ù–µ–∫–æ–º–∞–ª—å—á–∏–∫':
                    n = '–ë–µ–∑—ã–º—è–Ω–Ω–∞—è —à–º–∞—Ä–æ—ë–±–∏–Ω–∞'
                else:
                    n = str(d[1]).rstrip()
                if d[15] == m and m != 0:
                    text = text + 'üèÜ <b>' + n + '</b>  ' + str(d[2]) + ' üíû\n'
                else:
                    text = text + str(i+1) + '.  ' + n + '  ' + str(d[2]) + ' üíû\n'
                i = i + 1
            bot.send_photo(message.chat.id, photo = 'AgACAgIAAx0CZQN7rQACn9piwJArenxX-o-B5a2xO7AhvSCTlAAC4LUxG5j7EUkOukwyvavLgQEAAwIAA3MAAykE',caption = text,parse_mode='HTML')
        elif message.text == '—Ç–æ–ø –¥–µ–Ω—å–≥–∏' or message.text == '–¢–æ–ø –¥–µ–Ω—å–≥–∏' or message.text == '@NekoslaviaBot –¢–æ–ø –¥–µ–Ω—å–≥–∏' or message.text == '@NekoslaviaBot —Ç–æ–ø –¥–µ–Ω—å–≥–∏':
            data = cursor.execute('SELECT * FROM neko WHERE id = '+str(message.from_user.id))
            data = data.fetchone()
            if data is None:
                bot.send_message(message.chat.id,'–¢—ã –Ω–µ –æ–¥–∏–Ω –∏–∑ –Ω–∞—Å, –Ω–∞–ø–∏—à–∏ /start —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –Ω–µ–∫–æ—Å–ª–∞–≤–æ–º')
                return
            text = '–≠—Ç–æ –±–æ–≥–∞—Ç–µ–π—à–∏–µ –≥—Ä–∞–∂–¥–∞–Ω–µ –ù–µ–∫–æ—Å–ª–∞–≤–∏–∏. –ö–æ–≥–¥–∞-–Ω–∏–±—É–¥—å —Ç—ã —Å—Ç–∞–Ω–µ—à—å –æ–¥–Ω–∏–º –∏–∑ –Ω–∏—Ö, –µ—Å–ª–∏, –∫–æ–Ω–µ—á–Ω–æ, –Ω–µ –±—É–¥–µ—à—å –ø—Ä–æ—ë–±—ã–≤–∞—Ç—å –≤—Å–µ –¥–µ–Ω—å–≥–∏ –≤ –∫–∞–∑–∏–Ω–æ\n\n'
            
          
            data = cursor.execute('SELECT * FROM neko ORDER BY coins DESC')
            data = data.fetchall()
            i = 0
            if data is not None:
             for d in data:
                if i == 10:
                    break
                n = str(d[16]).rstrip()
                text = text + str(i+1) + '.  ' + n + '  ' + str(d[11]) + ' üí∞\n'
                i = i + 1
            bot.send_photo(message.chat.id, photo = 'AgACAgIAAx0CZQN7rQACw-di9rxFH9TpOzq-NFDEthztPu5QdAACprwxG81SuUuSxydRTDvpogEAAwIAA3MAAykE',caption = text,parse_mode='HTML')
        elif message.text == '–ø–æ–≥–ª–∞–¥–∏—Ç—å' or message.text == '–ü–æ–≥–ª–∞–¥–∏—Ç—å' or message.text == '@NekoslaviaBot –ü–æ–≥–ª–∞–¥–∏—Ç—å' or message.text == '@NekoslaviaBot –ø–æ–≥–ª–∞–¥–∏—Ç—å':
            data = cursor.execute('SELECT * FROM neko WHERE id = '+str(message.from_user.id))
            data = data.fetchone()
            if data is None:
                bot.send_message(message.chat.id,'–¢—ã –Ω–µ –æ–¥–∏–Ω –∏–∑ –Ω–∞—Å, –Ω–∞–ø–∏—à–∏ /start —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –Ω–µ–∫–æ—Å–ª–∞–≤–æ–º')
                return
            nam = str(data[1]).rstrip()
            rep = data[2]
            event = data[10]
            bolnitsa = int(data[6] - time.time())
            ch = data[13]
            gladit = data[14]
            gender = data[33]
            gladit = gladit + 1
            phot = str(data[5]).rstrip()
            new_phot = str(data[38]).rstrip()
            if new_phot != 'None':
                phot = new_phot
            gifka = str(data[32]).rstrip()
            if ch != message.chat.id:
                ch = message.chat.id
                cursor.execute('UPDATE neko SET chat = '+ str(ch) +' WHERE id = ' + str(message.from_user.id))
            if bolnitsa > 0:
                bot.send_message(message.chat.id, '–¢—ã –≤ –±–æ–ª—å–Ω–∏—Ü–µ –¥–µ–±–∏–ª')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            if event > 0:
                bot.send_message(message.chat.id, '–¢—ã –≥—É–ª—è–µ—à—å –µ–±–∞–Ω–∞—Ç')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            if rep < 10:
                text = nam + ' –¥–∞—ë—Ç –ø–æ–Ω—è—Ç—å, —á—Ç–æ –æ—Ç–∫—É—Å–∏—Ç –ø–∞–ª–µ—Ü –µ—Å–ª–∏ —Ç—ã –ø–æ–ø—ã—Ç–∞–µ—à—å—Å—è –µ—ë –ø–æ–≥–ª–∞–¥–∏—Ç—å'
                if gender == 1:
                    text = nam + ' –¥–∞—ë—Ç –ø–æ–Ω—è—Ç—å, —á—Ç–æ –æ—Ç–∫—É—Å–∏—Ç –ø–∞–ª–µ—Ü –µ—Å–ª–∏ —Ç—ã –ø–æ–ø—ã—Ç–∞–µ—à—å—Å—è –µ–≥–æ –ø–æ–≥–ª–∞–¥–∏—Ç—å'
                bot.send_message(message.chat.id,text)
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLY5iwIflAaGLlpw7vXvQvEvJcWilzgACjxEAAqg6WEjqQFCw4uPiwikE')
                return
            text = '–¢—ã –ø–æ–≥–ª–∞–¥–∏–ª –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫—É, –∏ –æ–Ω–∞ –¥–æ–≤–æ–ª—å–Ω–æ –ø–æ–º—É—Ä—á–∞–ª–∞ –≤ –æ—Ç–≤–µ—Ç. –£–¥–∏–≤–∏—Ç–µ–ª—å–Ω–æ, –Ω–æ ' + nam + ' —É–∂–µ –±—ã–ª–∞ –ø–æ–≥–ª–∞–∂–µ–Ω–∞ ' + str(gladit) + ' —Ä–∞–∑'
            if gender == 1:
                text = '–¢—ã –ø–æ–≥–ª–∞–¥–∏–ª –Ω–µ–∫–æ–º–∞–ª—å—á–∏–∫–∞, –∏ –æ–Ω –¥–æ–≤–æ–ª—å–Ω–æ –ø–æ–º—É—Ä—á–∞–ª –≤ –æ—Ç–≤–µ—Ç. –£–¥–∏–≤–∏—Ç–µ–ª—å–Ω–æ, –Ω–æ ' + nam + ' —É–∂–µ –±—ã–ª –ø–æ–≥–ª–∞–∂–µ–Ω ' + str(gladit) + ' —Ä–∞–∑'
            try:
              if gifka == 'Nothing':
                m = bot.send_photo(-1001694727085,photo=phot)
                file_info = bot.get_file(m.photo[len(m.photo) - 1].file_id)
                downloaded_file = bot.download_file(file_info.file_path)
                src = 'bot/files/' + file_info.file_path
                with open(src, 'wb') as new_file:
                    new_file.write(downloaded_file)
                im0 = Image.open(src)
                w,h = im0.size
                if w > h:
                    n = h
                else:
                    n = w
                area = (0, 0, n, n)
                im0 = im0.crop(area)
                im0.save(src)
                time.sleep(0.25)
                mean = dominant_color(src)
                make(src, 'bot/result.gif',mean)
                f = open("bot/result.gif","rb")
                m = bot.send_animation(message.chat.id,f,caption = text)
                gifka = m.animation.file_id
                os.remove(src)
                f.close()
              else:
                bot.send_animation(message.chat.id,gifka,caption = text)
              cursor.execute("UPDATE neko SET gladit = "+ str(gladit) +", gifka = '" + gifka + "'  WHERE id = " + str(message.from_user.id))
            except Exception as e:
                bot.send_message(message.chat.id,e)
        elif message.text == '–ø–æ–∫–æ—Ä–º–∏—Ç—å' or message.text == '–ü–æ–∫–æ—Ä–º–∏—Ç—å' or message.text == '@NekoslaviaBot –ü–æ–∫–æ—Ä–º–∏—Ç—å' or message.text == '@NekoslaviaBot –ø–æ–∫–æ—Ä–º–∏—Ç—å':
            data = cursor.execute('SELECT * FROM neko WHERE id = '+str(message.from_user.id))
            data = data.fetchone()
            if data is None:
                bot.send_message(message.chat.id,'–¢—ã –Ω–µ –æ–¥–∏–Ω –∏–∑ –Ω–∞—Å, –Ω–∞–ø–∏—à–∏ /start —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –Ω–µ–∫–æ—Å–ª–∞–≤–æ–º')
                return
            nam = str(data[1]).rstrip()
            rep = data[2]
            event = data[10]
            bolnitsa = int(data[6] - time.time())
            kormit = int(time.time() - data[4])
            buff = data[12]
            ch = data[13]
            automate = data[25]
            gender = data[33]
            if ch != message.chat.id:
                ch = message.chat.id
                cursor.execute('UPDATE neko SET chat = '+ str(ch) +' WHERE id = ' + str(message.from_user.id))
            if bolnitsa > 0:
                bot.send_message(message.chat.id, '–¢—ã –≤ –±–æ–ª—å–Ω–∏—Ü–µ –¥–µ–±–∏–ª')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            if event > 0:
                bot.send_message(message.chat.id, '–¢—ã –≥—É–ª—è–µ—à—å –µ–±–∞–Ω–∞—Ç')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            if kormit < 4*3600:
                text = nam + ' –ø–æ–∫–∞ –Ω–µ —Ö–æ—á–µ—Ç –µ—Å—Ç—å'
                bot.send_message(message.chat.id,text)
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW1iwHwF7vKClo5usceHHPCXG_sHxwACKxAAAnazWEhhnVRbfrQa8ikE')
            else:

                if buff > 0 and automate == 1:
                    rep = rep + 2
                    buff = buff - 1
                    if rep < 10:
                        text = '–¢—ã –ø–æ–∫–æ—Ä–º–∏–ª –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫—É –µ—ë –ª—é–±–∏–º—ã–º –≤–∏—Å–∫–∞—Å–æ–º üç´. –£–≤–µ—Ä–µ–Ω, –µ–π —ç—Ç–æ –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å –≥–∞—Ä–∞–∑–¥–æ –±–æ–ª—å—à–µ –æ–±—ã—á–Ω–æ–π –µ–¥—ã ‚ù§Ô∏è'
                        if gender == 1:
                            text = '–¢—ã –ø–æ–∫–æ—Ä–º–∏–ª –Ω–µ–∫–æ–º–∞–ª—å—á–∏–∫–∞ –µ–≥–æ –ª—é–±–∏–º—ã–º –≤–∏—Å–∫–∞—Å–æ–º üç´. –£–≤–µ—Ä–µ–Ω, –µ–º—É —ç—Ç–æ –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å –≥–∞—Ä–∞–∑–¥–æ –±–æ–ª—å—à–µ –æ–±—ã—á–Ω–æ–π –µ–¥—ã ‚ù§Ô∏è'
                    else:
                        text = '–¢—ã –ø–æ–∫–æ—Ä–º–∏–ª –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫—É –µ—ë –ª—é–±–∏–º—ã–º –≤–∏—Å–∫–∞—Å–æ–º üç´. –ï–π —ç—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å, –∏ –≤ –∑–Ω–∞–∫ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏ –æ–Ω–∞ –ø—Ä–µ–¥–ª–æ–∂–∏–ª–∞ –ø–æ–≥–ª–∞–¥–∏—Ç—å —Å–µ–±—è ‚ù§Ô∏è'
                        if gender == 1:
                            text = '–¢—ã –ø–æ–∫–æ—Ä–º–∏–ª –Ω–µ–∫–æ–º–∞–ª—å—á–∏–∫–∞ –µ–≥–æ –ª—é–±–∏–º—ã–º –≤–∏—Å–∫–∞—Å–æ–º üç´. –ï–º—É —ç—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å, –∏ –≤ –∑–Ω–∞–∫ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏ –æ–Ω –ø—Ä–µ–¥–ª–æ–∂–∏–ª –ø–æ–≥–ª–∞–¥–∏—Ç—å —Å–µ–±—è ‚ù§Ô∏è'
                else:
                    rep = rep + 1
                    if rep < 10:
                        text = '–¢—ã –ø–æ–∫–æ—Ä–º–∏–ª –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫—É, –ø—Ä–æ–¥–æ–ª–∂–∞–π –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ –∏ –æ–Ω–∞ —Ä–∞–∑—Ä–µ—à–∏—Ç —Ç–µ–±–µ —Å–µ–±—è –ø–æ–≥–ª–∞–¥–∏—Ç—å ‚ù§Ô∏è'
                        if gender == 1:
                            text = '–¢—ã –ø–æ–∫–æ—Ä–º–∏–ª –Ω–µ–∫–æ–º–∞–ª—å—á–∏–∫–∞, –ø—Ä–æ–¥–æ–ª–∂–∞–π –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ –∏ –æ–Ω —Ä–∞–∑—Ä–µ—à–∏—Ç —Ç–µ–±–µ —Å–µ–±—è –ø–æ–≥–ª–∞–¥–∏—Ç—å ‚ù§Ô∏è'
                    else:
                        text = '–¢—ã –ø–æ–∫–æ—Ä–º–∏–ª –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫—É, –∏ –≤ –∑–Ω–∞–∫ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏ –æ–Ω–∞ –ø—Ä–µ–¥–ª–æ–∂–∏–ª–∞ –ø–æ–≥–ª–∞–¥–∏—Ç—å —Å–µ–±—è. –ù–µ —Å–æ–≤–µ—Ç—É—é –æ—Ç–∫–∞–∑—ã–≤–∞—Ç—å—Å—è ‚ù§Ô∏è'
                        if gender == 1:
                            text = '–¢—ã –ø–æ–∫–æ—Ä–º–∏–ª –Ω–µ–∫–æ–º–∞–ª—å—á–∏–∫–∞, –∏ –≤ –∑–Ω–∞–∫ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏ –æ–Ω –ø—Ä–µ–¥–ª–æ–∂–∏–ª –ø–æ–≥–ª–∞–¥–∏—Ç—å —Å–µ–±—è. –ù–µ —Å–æ–≤–µ—Ç—É—é –æ—Ç–∫–∞–∑—ã–≤–∞—Ç—å—Å—è ‚ù§Ô∏è'
                kormit = int(time.time() + random.randint(-1800,1800))
                bot.send_message(message.chat.id,text)
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLXFiwHwWe1jhzAgMe071rTZ4ureX3AACJRAAAhQoWEiDQZVvpXK9GikE')
                cursor.execute('UPDATE neko SET notifed = 0, kormit = '+ str(kormit) +' WHERE id = ' + str(message.from_user.id))
                cursor.execute('UPDATE neko SET rep = '+ str(rep) +' WHERE id = ' + str(message.from_user.id))
                cursor.execute('UPDATE neko SET buff = '+ str(buff) +' WHERE id = ' + str(message.from_user.id))
        elif message.text == '–≤—ã–≥—É–ª—è—Ç—å' or message.text == '–í—ã–≥—É–ª—è—Ç—å' or message.text == '@NekoslaviaBot –í—ã–≥—É–ª—è—Ç—å' or message.text == '@NekoslaviaBot –≤—ã–≥—É–ª—è—Ç—å':
            data = cursor.execute('SELECT * FROM neko WHERE id ='+str(message.from_user.id))
            data = data.fetchone()
            if data is None:
                bot.send_message(message.chat.id,'–¢—ã –Ω–µ –æ–¥–∏–Ω –∏–∑ –Ω–∞—Å, –Ω–∞–ø–∏—à–∏ /start —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –Ω–µ–∫–æ—Å–ª–∞–≤–æ–º')
                return
            nam = str(data[1]).rstrip()
            rep = data[2]
            event = data[10]
            bolnitsa = int(data[6] - time.time())
            gulat = int(time.time() - data[3])
            coins = data[11]
            ch = data[13]
            baza = data[8]
            gender = data[33]
            if ch != message.chat.id:
                ch = message.chat.id
                cursor.execute('UPDATE neko SET chat = '+ str(ch) +' WHERE id = ' + str(message.from_user.id))
            if bolnitsa > 0:
                bot.send_message(message.chat.id, '–¢—ã –≤ –±–æ–ª—å–Ω–∏—Ü–µ –¥–µ–±–∏–ª')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            if event > 0:
                bot.send_message(message.chat.id, '–¢—ã –≥—É–ª—è–µ—à—å –µ–±–∞–Ω–∞—Ç')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            if rep < 2:
                text = nam + ' —Ç–µ–±–µ –Ω–µ –¥–æ–≤–µ—Ä—è–µ—Ç, –ø—Ä–æ–¥–æ–ª–∂–∞–π –∫–æ—Ä–º–∏—Ç—å –µ—ë'
                bot.send_message(message.chat.id, text)
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLY5iwIflAaGLlpw7vXvQvEvJcWilzgACjxEAAqg6WEjqQFCw4uPiwikE')
                return
            if gulat < 6*3600:
                text = nam + ' –ø–æ–∫–∞ –Ω–µ —Ö–æ—á–µ—Ç –≥—É–ª—è—Ç—å'
                bot.send_message(message.chat.id, text)
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW1iwHwF7vKClo5usceHHPCXG_sHxwACKxAAAnazWEhhnVRbfrQa8ikE')
            else:
                d = random.randint(1,6)
                gulat = int(time.time() + random.randint(-1800,1800))
                cursor.execute('UPDATE neko SET gulat = '+ str(gulat) +' WHERE id = ' + str(message.from_user.id))
                if d == 1:
                    if coins < 10:
                        text = '–í–∑–æ—Ä –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫–∏ —É–ø–∞–ª –Ω–∞ —Å—Ç–∞—Ä—É—é –∫–æ–ª–æ–¥—É –∫–∞—Ä—Ç. –ë—ã–ª–æ —Ä–µ—à–µ–Ω–æ —Å—ã–≥—Ä–∞—Ç—å –≤ –¥—É—Ä–∞–∫–∞ –Ω–∞ —Ä–∞–∑–¥–µ–≤–∞–Ω–∏–µ, –∏ —Ç—ã –æ—Å—Ç–∞–ª—Å—è –≤ –æ–¥–Ω–∏—Ö —Ç—Ä—É—Å–∞—Ö. –£–¥–∏–≤–∏—Ç–µ–ª—å–Ω–æ, –Ω–æ –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫–µ –æ–Ω–∏ –ø–æ–Ω—Ä–∞–≤–∏–ª–∏—Å—å ‚ù§Ô∏è'
                        if gender == 1:
                            text = '–í–∑–æ—Ä –Ω–µ–∫–æ–º–∞–ª—å—á–∏–∫–∞ —É–ø–∞–ª –Ω–∞ —Å—Ç–∞—Ä—É—é –∫–æ–ª–æ–¥—É –∫–∞—Ä—Ç. –ë—ã–ª–æ —Ä–µ—à–µ–Ω–æ —Å—ã–≥—Ä–∞—Ç—å –≤ –¥—É—Ä–∞–∫–∞ –Ω–∞ —Ä–∞–∑–¥–µ–≤–∞–Ω–∏–µ, –∏ —Ç—ã –æ—Å—Ç–∞–ª—Å—è –≤ –æ–¥–Ω–∏—Ö —Ç—Ä—É—Å–∞—Ö. –£–¥–∏–≤–∏—Ç–µ–ª—å–Ω–æ, –Ω–æ –Ω–µ–∫–æ–º–∞–ª—å—á–∏–∫—É –æ–Ω–∏ –ø–æ–Ω—Ä–∞–≤–∏–ª–∏—Å—å ‚ù§Ô∏è'
                        bot.send_photo(message.chat.id, photo = 'AgACAgIAAx0CZQN7rQACrPNi2TTbjCTpB2sEekm_cYy69euvVgACYr8xG35hyUq6nUwvpV7fGgEAAwIAA3MAAykE',caption = text)
                        rep = rep + 1
                        cursor.execute('UPDATE neko SET rep = '+ str(rep) +' WHERE id = ' + str(message.from_user.id))
                    else:
                        cost = random.randint(1,10)
                        k = random.randint(1,2)
                        if k == 1:
                            coins = coins - cost
                            text = '–í–∑–æ—Ä –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫–∏ —É–ø–∞–ª –Ω–∞ —Å—Ç–∞—Ä—É—é –∫–æ–ª–æ–¥—É –∫–∞—Ä—Ç. –ë—ã–ª–æ —Ä–µ—à–µ–Ω–æ —Å—ã–≥—Ä–∞—Ç—å –≤ –¥—É—Ä–∞–∫–∞, –∏ —Ç—ã –ø—Ä–æ–µ–±–∞–ª ' + str(cost) + ' –Ω–µ–∫–æ–≥—Ä–∏–≤–µ–Ω üí∞. –ï—Å–ª–∏ –Ω–µ –æ–±—Ä–∞—â–∞—Ç—å –Ω–∞ —ç—Ç–æ –≤–Ω–∏–º–∞–Ω–∏—è, ' + nam + ' –≤–µ—Å–µ–ª–æ –ø—Ä–æ–≤–µ–ª–∞ –≤—Ä–µ–º—è'
                            if gender == 1:
                                text = '–í–∑–æ—Ä –Ω–µ–∫–æ–º–∞–ª—å—á–∏–∫–∞ —É–ø–∞–ª –Ω–∞ —Å—Ç–∞—Ä—É—é –∫–æ–ª–æ–¥—É –∫–∞—Ä—Ç. –ë—ã–ª–æ —Ä–µ—à–µ–Ω–æ —Å—ã–≥—Ä–∞—Ç—å –≤ –¥—É—Ä–∞–∫–∞, –∏ —Ç—ã –ø—Ä–æ–µ–±–∞–ª ' + str(cost) + ' –Ω–µ–∫–æ–≥—Ä–∏–≤–µ–Ω üí∞. –ï—Å–ª–∏ –Ω–µ –æ–±—Ä–∞—â–∞—Ç—å –Ω–∞ —ç—Ç–æ –≤–Ω–∏–º–∞–Ω–∏—è, ' + nam + ' –≤–µ—Å–µ–ª–æ –ø—Ä–æ–≤—ë–ª –≤—Ä–µ–º—è'
                            bot.send_photo(message.chat.id, photo = 'AgACAgIAAx0CZQN7rQACrPVi2TUAAV6ak7zuL9k5SIEEHAYXdUkAAmO_MRt-YclKhliUv3FMpYABAAMCAANzAAMpBA',caption = text)
                            cursor.execute('UPDATE neko SET coins = '+ str(coins) +' WHERE id = ' + str(message.from_user.id))
                        elif k == 2:
                            coins = coins + cost
                            text = '–í–∑–æ—Ä –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫–∏ —É–ø–∞–ª –Ω–∞ —Å—Ç–∞—Ä—É—é –∫–æ–ª–æ–¥—É –∫–∞—Ä—Ç. –ë—ã–ª–æ —Ä–µ—à–µ–Ω–æ —Å—ã–≥—Ä–∞—Ç—å –≤ –¥—É—Ä–∞–∫–∞, –∏ —Ç—ã –≤—ã–∏–≥—Ä–∞–ª —Ü–µ–ª—ã—Ö ' + str(cost) + ' –Ω–µ–∫–æ–≥—Ä–∏–≤–µ–Ω üí∞. –ü–æ–≤–µ–∑–ª–æ, –ø–æ–≤–µ–∑–ª–æ. –ï—Å–ª–∏ –Ω–µ –æ–±—Ä–∞—â–∞—Ç—å –Ω–∞ —ç—Ç–æ –≤–Ω–∏–º–∞–Ω–∏—è, ' + nam + ' –≤–µ—Å–µ–ª–æ –ø—Ä–æ–≤–µ–ª–∞ –≤—Ä–µ–º—è'
                            if gender == 1:
                                text = '–í–∑–æ—Ä –Ω–µ–∫–æ–º–∞–ª—å—á–∫–∞ —É–ø–∞–ª –Ω–∞ —Å—Ç–∞—Ä—É—é –∫–æ–ª–æ–¥—É –∫–∞—Ä—Ç. –ë—ã–ª–æ —Ä–µ—à–µ–Ω–æ —Å—ã–≥—Ä–∞—Ç—å –≤ –¥—É—Ä–∞–∫–∞, –∏ —Ç—ã –≤—ã–∏–≥—Ä–∞–ª —Ü–µ–ª—ã—Ö ' + str(cost) + ' –Ω–µ–∫–æ–≥—Ä–∏–≤–µ–Ω üí∞. –ü–æ–≤–µ–∑–ª–æ, –ø–æ–≤–µ–∑–ª–æ. –ï—Å–ª–∏ –Ω–µ –æ–±—Ä–∞—â–∞—Ç—å –Ω–∞ —ç—Ç–æ –≤–Ω–∏–º–∞–Ω–∏—è, ' + nam + ' –≤–µ—Å–µ–ª–æ –ø—Ä–æ–≤—ë–ª –≤—Ä–µ–º—è'
                            bot.send_photo(message.chat.id, photo = 'AgACAgIAAx0CZQN7rQACrPdi2TsB9fVbCZY53iP83RMkWyfu2wACUbsxG35h0UpbeK76av4qSgEAAwIAA3MAAykE',caption = text)
                            cursor.execute('UPDATE neko SET coins = '+ str(coins) +' WHERE id = ' + str(message.from_user.id))
                if d == 2:
                    k = random.randint(1,2)
                    if baza >= 4:
                        k = 2
                    if k == 1:
                        rep = rep - 1
                        cursor.execute('UPDATE neko SET rep = ' + str(rep) + ' WHERE id = ' + str(message.from_user.id))
                        text = '–¢—ã –ø—Ä–æ—Å–Ω—É–ª—Å—è –≤ –ª—É–∂–µ –±–ª–µ–≤–æ—Ç—ã —Å –¥–∏—á–∞–π—à–∏–º –ø–æ—Ö–º–µ–ª—å–µ–º. –ü–æ—Å–ª–µ–¥–Ω–µ–µ –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏–µ - –≤—ã –∑–∞—Ö–æ–¥–∏—Ç–µ –≤ –°–∏–ª—å–ø–æ –∏ –≤–∏–¥–∏—Ç–µ –ö–∞–ø–∏—Ç–∞–Ω–∞ –ú–æ—Ä–≥–∞–Ω–∞ –ø–æ —Å–∫–∏–¥–∫–µ. –í—á–µ—Ä–∞—à–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è, –∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é, –æ—Å—Ç–∞—é—Ç—Å—è —Ç–∞–π–Ω–æ–π. ' + nam + ' —Ç–µ–ø–µ—Ä—å —Ç–µ–±–µ –¥–æ–≤–µ—Ä—è–µ—Ç –º–µ–Ω—å—à–µ –∫–∞–∫ –∏—Ö —Å–ª–µ–¥—Å—Ç–≤–∏–µ üíî'
                        bot.send_photo(message.chat.id, photo = 'AgACAgIAAx0CZQN7rQACNE1imy-Ri_WnMfD3yi2ud0IAAToM38oAAuy7MRuYt9lIMfj5yYi-9gEBAAMCAANzAAMkBA',caption = text)
                    if k == 2:
                        rep = rep + 1
                        cursor.execute('UPDATE neko SET rep = ' + str(rep) + ' WHERE id = ' + str(message.from_user.id))
                        text = '–¢—ã –ø—Ä–æ—Å–Ω—É–ª—Å—è –≤ –ª—É–∂–µ –±–ª–µ–≤–æ—Ç—ã —Å –¥–∏—á–∞–π—à–∏–º –ø–æ—Ö–º–µ–ª—å–µ–º. –ü–æ—Å–ª–µ–¥–Ω–µ–µ –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏–µ - –≤—ã –∑–∞—Ö–æ–¥–∏—Ç–µ –≤ –°–∏–ª—å–ø–æ –∏ –≤–∏–¥–∏—Ç–µ –ö–∞–ø–∏—Ç–∞–Ω–∞ –ú–æ—Ä–≥–∞–Ω–∞ –ø–æ —Å–∫–∏–¥–∫–µ. –í—á–µ—Ä–∞—à–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è, –∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é, –æ—Å—Ç–∞—é—Ç—Å—è —Ç–∞–π–Ω–æ–π. ' + nam + ' —Ç–µ–ø–µ—Ä—å —Ç–µ–±–µ –¥–æ–≤–µ—Ä—è–µ—Ç –±–æ–ª—å—à–µ –∫–∞–∫ –∏—Ö —Å–ª–µ–¥—Å—Ç–≤–∏–µ ‚ù§Ô∏è'
                        bot.send_photo(message.chat.id, photo = 'AgACAgIAAx0CZQN7rQACNE1imy-Ri_WnMfD3yi2ud0IAAToM38oAAuy7MRuYt9lIMfj5yYi-9gEBAAMCAANzAAMkBA',caption = text)
                if d == 3:
                    k = random.randint(1,2)
                    if k == 1:
                        rep = rep + 2
                        cursor.execute('UPDATE neko SET rep = ' + str(rep) + ' WHERE id = ' + str(message.from_user.id))
                        cursor.execute('UPDATE neko SET event = 1 WHERE id = ' + str(message.from_user.id))
                        markup = types.InlineKeyboardMarkup()
                        switch_button1 = types.InlineKeyboardButton(text='–û—Ç–¥–∞—Ç—å üòî', switch_inline_query_current_chat = "–û—Ç–¥–∞—Ç—å")
                        switch_button2 = types.InlineKeyboardButton(text='–î—Ä–∞—Ç—å—Å—è üò°', switch_inline_query_current_chat = "–î—Ä–∞—Ç—å—Å—è")
                        markup.add(switch_button1,switch_button2)
                        text = '<b>"–≠–π, –ø–∞—Ü–∞–Ω, –Ω–æ—Ä–º —Ç—è–Ω–æ—á–∫–∞ —Ç–∞–∫–∞—è. –û–¥–æ–ª–∂–∏—à—å –Ω–∞ –ø–∞—Ä—É —á–∞—Å–∏–∫–æ–≤?"</b> - –ø–æ—Å–ª—ã—à–∞–ª–æ—Å—å —Å–∑–∞–¥–∏. –û–±–µ—Ä–Ω—É–≤—à–∏—Å—å, —Ç—ã —É–≤–∏–¥–µ–ª –º–µ–¥–ª–µ–Ω–Ω–æ –ø—Ä–∏–±–ª–∏–∂–∞—é—â–∏—Ö—Å—è –≥–æ–ø–Ω–∏–∫–æ–≤. –î—É–º–∞—Ç—å –Ω—É–∂–Ω–æ –±—ã—Å—Ç—Ä–æ\n\n<code>–û—Ç–¥–∞—Ç—å</code> - –æ—Ç–¥–∞—Ç—å –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫—É –±–µ–∑ –±–æ—è\n\n<code>–î—Ä–∞—Ç—å—Å—è</code> - –Ω–∞–Ω–µ—Å—Ç–∏ –ø—Ä–µ–≤–µ–Ω—Ç–∏–≤–Ω—ã–π —É–¥–∞—Ä'
                        ph = 'AgACAgIAAx0CZQN7rQACLENimg9vCvzViX185G4iP7oGl72XRQACIrwxG0Xf0Eg9-p59YMy7GwEAAwIAA3MAAyQE'
                        if gender == 1:
                            text = '<b>"–≠–π, –ø–∞—Ü–∞–Ω, –Ω–æ—Ä–º –∫—É–Ω—á–∏–∫ —Ç–∞–∫–æ–π. –û–¥–æ–ª–∂–∏—à—å –Ω–∞ –ø–∞—Ä—É —á–∞—Å–∏–∫–æ–≤?"</b> - –ø–æ—Å–ª—ã—à–∞–ª–æ—Å—å —Å–∑–∞–¥–∏. –û–±–µ—Ä–Ω—É–≤—à–∏—Å—å, —Ç—ã —É–≤–∏–¥–µ–ª –º–µ–¥–ª–µ–Ω–Ω–æ –ø—Ä–∏–±–ª–∏–∂–∞—é—â–∏—Ö—Å—è –≥–æ–ø–Ω–∏–∫–æ–≤. –î—É–º–∞—Ç—å –Ω—É–∂–Ω–æ –±—ã—Å—Ç—Ä–æ\n\n<code>–û—Ç–¥–∞—Ç—å</code> - –æ—Ç–¥–∞—Ç—å –Ω–µ–∫–æ–º–∞–ª—å—á–∏–∫–∞ –±–µ–∑ –±–æ—è\n\n<code>–î—Ä–∞—Ç—å—Å—è</code> - –Ω–∞–Ω–µ—Å—Ç–∏ –ø—Ä–µ–≤–µ–Ω—Ç–∏–≤–Ω—ã–π —É–¥–∞—Ä'
                            ph = 'AgACAgIAAx0CZQN7rQAC1MBjUuUNoGAz-fxdW7ZeYIfUMLbYQQACtNExG0AamErnC56G4DwJHwEAAwIAA3MAAyoE'
                        bot.send_photo(message.chat.id,photo = ph,caption = text,parse_mode='HTML',reply_markup=markup)
                    elif k == 2:
                        cursor.execute('UPDATE neko SET event = 7 WHERE id = ' + str(message.from_user.id))
                        markup = types.InlineKeyboardMarkup()
                        switch_button1 = types.InlineKeyboardButton(text='–û—Ç–∫—É–ø–∏—Ç—å—Å—è üí∏', switch_inline_query_current_chat = "–û—Ç–∫—É–ø–∏—Ç—å—Å—è")
                        switch_button2 = types.InlineKeyboardButton(text='–ü–æ–∫–∞–∑–∞—Ç—å üëÄ', switch_inline_query_current_chat = "–ü–æ–∫–∞–∑–∞—Ç—å")
                        markup.add(switch_button1,switch_button2)
                        text = '<b>"–ú–æ–ª–æ–¥–æ–π —á–µ–ª–æ–≤–µ–∫, –±—É–¥—å—Ç–µ –ª—é–±–µ–∑–Ω—ã, –ø–æ–∫–∞–∂–∏—Ç–µ –ª–∏—Ü–µ–Ω–∑–∏—é –Ω–∞ –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫—É"</b> - –æ–±—Ä–∞—Ç–∏–ª–∏—Å—å –∫ —Ç–µ–±–µ. –ù–∏—á–µ–≥–æ –Ω–µ–æ–±—ã—á–Ω–æ–≥–æ, –ø—Ä–æ—Å—Ç–æ –¥–æ —Ç–µ–±—è —Ä–µ—à–∏–ª–∏ –¥–æ–µ–±–∞—Ç—å—Å—è –º–µ–Ω—Ç—ã. –ö —Å—á–∞—Å—Ç—å—é, –ª–∏—Ü–µ–Ω–∑–∏—é üé´ —Ç—ã –Ω–µ –∑–∞–±—ã–ª. –ù–æ —Å—Ç–æ–∏—Ç –ª–∏ –µ—ë –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å?\n\n<code>–û—Ç–∫—É–ø–∏—Ç—å—Å—è</code> - –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å 20 –Ω–µ–∫–æ–≥—Ä–∏–≤–µ–Ω üí∞\n\n<code>–ü–æ–∫–∞–∑–∞—Ç—å</code> - –ø–æ–∫–∞–∑–∞—Ç—å —Å–≤–æ—é –ª–∏—Ü–µ–Ω–∑–∏—é'
                        if gender == 1:
                            text = '<b>"–ú–æ–ª–æ–¥–æ–π —á–µ–ª–æ–≤–µ–∫, –±—É–¥—å—Ç–µ –ª—é–±–µ–∑–Ω—ã, –ø–æ–∫–∞–∂–∏—Ç–µ –ª–∏—Ü–µ–Ω–∑–∏—é –Ω–∞ –Ω–µ–∫–æ–º–∞–ª—å—á–∏–∫–∞"</b> - –æ–±—Ä–∞—Ç–∏–ª–∏—Å—å –∫ —Ç–µ–±–µ. –ù–∏—á–µ–≥–æ –Ω–µ–æ–±—ã—á–Ω–æ–≥–æ, –ø—Ä–æ—Å—Ç–æ –¥–æ —Ç–µ–±—è —Ä–µ—à–∏–ª–∏ –¥–æ–µ–±–∞—Ç—å—Å—è –º–µ–Ω—Ç—ã. –ö —Å—á–∞—Å—Ç—å—é, –ª–∏—Ü–µ–Ω–∑–∏—é üé´ —Ç—ã –Ω–µ –∑–∞–±—ã–ª. –ù–æ —Å—Ç–æ–∏—Ç –ª–∏ –µ—ë –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å?\n\n<code>–û—Ç–∫—É–ø–∏—Ç—å—Å—è</code> - –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å 20 –Ω–µ–∫–æ–≥—Ä–∏–≤–µ–Ω üí∞\n\n<code>–ü–æ–∫–∞–∑–∞—Ç—å</code> - –ø–æ–∫–∞–∑–∞—Ç—å —Å–≤–æ—é –ª–∏—Ü–µ–Ω–∑–∏—é'
                        bot.send_photo(message.chat.id,photo = 'AgACAgIAAx0CZQN7rQACy85jH3o2r1Pxxh53bkPNRvxmMXG6TgACvb0xGzWj-UgBumfJ3Ov7wQEAAwIAA3MAAykE',caption = text,parse_mode='HTML',reply_markup=markup)
                if d == 4:
                    markup = types.InlineKeyboardMarkup()
                    switch_button1 = types.InlineKeyboardButton(text='–û—Ç–∫—Ä—ã—Ç—å ‚ùî', switch_inline_query_current_chat = "–û—Ç–∫—Ä—ã—Ç—å")
                    switch_button2 = types.InlineKeyboardButton(text='–£–π—Ç–∏ üö∂‚Äç‚ôÇÔ∏è', switch_inline_query_current_chat = "–£–π—Ç–∏")
                    markup.add(switch_button1,switch_button2)
                    text = '–ü—Ä–æ–≥—É–ª–∏–≤–∞—è—Å—å, –≤—ã –∑–∞–º–µ—Ç–∏–ª–∏ —Å—Ç—Ä–∞–Ω–Ω—É—é –∫–æ—Ä–æ–±–∫—É –ø–æ—Å—Ä–µ–¥–∏ –¥–æ—Ä–æ–≥–∏. ' + nam + ' —Å—Ä–∞–∑—É –∂–µ –ø—Ä–µ–¥–ª–æ–∂–∏–ª–∞ –æ—Ç–∫—Ä—ã—Ç—å –µ—ë. –ù–∞ —Å–∞–º–æ–º –¥–µ–ª–µ, —Ç–µ–±–µ –∏ —Å–∞–º–æ–º—É –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ —á—Ç–æ —Ç–∞–º –≤–Ω—É—Ç—Ä–∏\n\n<code>–û—Ç–∫—Ä—ã—Ç—å</code> - –æ—Ç–∫—Ä—ã—Ç—å –∫–æ—Ä–æ–±–∫—É\n\n<code>–£–π—Ç–∏</code> - –Ω–µ –æ—Ç–∫—Ä—ã–≤–∞—Ç—å'
                    if gender == 1:
                        text = '–ü—Ä–æ–≥—É–ª–∏–≤–∞—è—Å—å, –≤—ã –∑–∞–º–µ—Ç–∏–ª–∏ —Å—Ç—Ä–∞–Ω–Ω—É—é –∫–æ—Ä–æ–±–∫—É –ø–æ—Å—Ä–µ–¥–∏ –¥–æ—Ä–æ–≥–∏. ' + nam + ' —Å—Ä–∞–∑—É –∂–µ –ø—Ä–µ–¥–ª–æ–∂–∏–ª –æ—Ç–∫—Ä—ã—Ç—å –µ—ë. –ù–∞ —Å–∞–º–æ–º –¥–µ–ª–µ, —Ç–µ–±–µ –∏ —Å–∞–º–æ–º—É –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ —á—Ç–æ —Ç–∞–º –≤–Ω—É—Ç—Ä–∏\n\n<code>–û—Ç–∫—Ä—ã—Ç—å</code> - –æ—Ç–∫—Ä—ã—Ç—å –∫–æ—Ä–æ–±–∫—É\n\n<code>–£–π—Ç–∏</code> - –Ω–µ –æ—Ç–∫—Ä—ã–≤–∞—Ç—å'
                    bot.send_photo(message.chat.id, photo = 'AgACAgIAAx0CZQN7rQACoJpiwc-XmJW9JlazZ9GQkiyni6DQfgACVbsxGxyOEUozV-1wOZ04sAEAAwIAA3MAAykE',caption = text,parse_mode='HTML',reply_markup=markup)
                    cursor.execute('UPDATE neko SET event = 2 WHERE id = ' + str(message.from_user.id))
                if d == 5:
                    markup = types.InlineKeyboardMarkup()
                    switch_button1 = types.InlineKeyboardButton(text='–í–∏—Å–∫–∞—Å üç´', switch_inline_query_current_chat = "–í–∏—Å–∫–∞—Å")
                    switch_button2 = types.InlineKeyboardButton(text='–ú–æ–Ω—Å—Ç—Ä ‚ö°Ô∏è', switch_inline_query_current_chat = "–ú–æ–Ω—Å—Ç—Ä")
                    switch_button3 = types.InlineKeyboardButton(text='–ö–æ—Ä–æ–±–∫–∞ üì¶', switch_inline_query_current_chat = "–ö–æ—Ä–æ–±–∫–∞")
                    switch_button4 = types.InlineKeyboardButton(text='–£–π—Ç–∏ üö∂‚Äç‚ôÇÔ∏è', switch_inline_query_current_chat = "–£–π—Ç–∏")
                    markup.add(switch_button1,switch_button2,switch_button3,switch_button4)
                    cursor.execute('UPDATE neko SET event = 3 WHERE id = ' + str(message.from_user.id))
                    text = '<b>"Whiskas, monster, nekogirls ‚Äì you want it? Its yours, my friend, as long as you have enough nekogrivnas"</b> - —É—Å–ª—ã—à–∞–ª–∏ –≤—ã, –∑–∞—Ö–æ–¥—è –≤ –Ω–∏—á–µ–º –Ω–µ –ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω—ã–π –ª–∞—Ä—ë–∫. –¢—ã —Å –¥–µ—Ç—Å—Ç–≤–∞ –∑–Ω–∞–µ—à—å —ç—Ç–æ –º–µ—Å—Ç–æ, –≤–µ–¥—å –∑–¥–µ—Å—å –ø—Ä–æ–¥–∞—é—Ç –±—É—Ö–ª–æ –±–µ–∑ –ø–∞—Å–ø–æ—Ä—Ç–∞, –Ω–æ –Ω–∞ —ç—Ç–æ—Ç —Ä–∞–∑ –≤—ã –ø—Ä–∏—à–ª–∏ –Ω–µ –∑–∞ —ç—Ç–∏–º\n\n–°—Ç–æ–∏—Ç –≤–∑–≥–ª—è–Ω—É—Ç—å –Ω–∞ –æ—Å–æ–±—ã–µ —Ç–æ–≤–∞—Ä—ã:\n<code>–í–∏—Å–∫–∞—Å</code> - 25 –Ω–µ–∫–æ–≥—Ä–∏–≤–µ–Ω üí∞\n<code>–ú–æ–Ω—Å—Ç—Ä</code> - 30 –Ω–µ–∫–æ–≥—Ä–∏–≤–µ–Ω üí∞\n<code>–ö–æ—Ä–æ–±–∫–∞</code> - 50 –Ω–µ–∫–æ–≥—Ä–∏–≤–µ–Ω üí∞\n\n<code>–£–π—Ç–∏</code> - –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–∫—É–ø–∞—Ç—å'
                    bot.send_photo(message.chat.id,photo = 'AgACAgIAAx0CZQN7rQACoh9ixOhAIbV7nzzHybTYBoJOkG2hGAACgb4xGzBhKEomCoej8lEPzgEAAwIAA3MAAykE',caption = text,parse_mode='HTML',reply_markup=markup)
                if d == 6:
                    markup = types.InlineKeyboardMarkup()
                    switch_button1 = types.InlineKeyboardButton(text='–ê–¥—Ä–µ–Ω–∞–ª–∏–Ω üí™', switch_inline_query_current_chat = "–ê–¥—Ä–µ–Ω–∞–ª–∏–Ω")
                    switch_button2 = types.InlineKeyboardButton(text='Gender changer üè≥Ô∏è‚Äçüåà', switch_inline_query_current_chat = "Gender changer")
                    switch_button4 = types.InlineKeyboardButton(text='–£–π—Ç–∏ üö∂‚Äç‚ôÇÔ∏è', switch_inline_query_current_chat = "–£–π—Ç–∏")
                    markup.add(switch_button1,switch_button2)
                    markup.add(switch_button4)
                    cursor.execute('UPDATE neko SET event = 8 WHERE id = ' + str(message.from_user.id))
                    text = '–ó–∞–π–¥—è –≤ –ø–µ—Ä–µ—É–ª–æ–∫, –≤—ã —É–≤–∏–¥–µ–ª–∏ –±–µ–∑–¥–æ–º–Ω—É—é –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫—É, —Ä–æ—é—â—É—é—Å—è –≤ –º—É—Å–æ—Ä–Ω–æ–º –±–∞–∫–µ. –ó–∞–≤–∏–¥–µ–≤ –≤–∞—Å, –æ–Ω–∞ –ø–æ–¥–ø—Ä—ã–≥–Ω—É–ª–∞ –∏ –≤–∑–≤–æ–ª–Ω–æ–≤–∞–Ω–Ω–æ –∑–∞–≥–æ–≤–æ—Ä–∏–ª–∞: <b>"–ù—è, –¥–∞–π—Ç–µ –ø–æ–∫—É—à–∞—Ç—å, –∞ —è –≤–∞–º –±–ª–µ—Å—Ç—è—à–∫–∏, –Ω—è"</b>. –ü–æ—Ö–æ–∂–µ, –æ–Ω–∞ –ø–ª–æ—Ö–æ –∑–Ω–∞–µ—Ç —á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–π —è–∑—ã–∫\n\n–ù–µ–∫–æ–¥–µ–≤–æ—á–∫–∞ –¥–µ—Ä–∂–∞–ª–∞ —Å—Ç—Ä–∞–Ω–Ω—ã–µ –≤–µ—â–∏, –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –Ω–∞ —Å–≤–∞–ª–∫–µ:\n<code>–ê–¥—Ä–µ–Ω–∞–ª–∏–Ω</code> - 3 –≤–∏—Å–∫–∞—Å–∞ üç´\n<code>Gender changer</code> - 20 –≤–∏—Å–∫–∞—Å–∞ üç´\n\n<code>–£–π—Ç–∏</code> - –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–∫—É–ø–∞—Ç—å'
                    bot.send_photo(message.chat.id,photo = 'AgACAgIAAx0CZQN7rQAC00ljS2wxdGuJbyZKRPFIhwptU9xbIwACa8AxG7RRWUp-23IUrAnepQEAAwIAA3MAAyoE',caption = text,parse_mode='HTML',reply_markup=markup)
        elif '–∏–º—è' in message.text or '–ò–º—è' in message.text:
            args = message.text.split()
            if args[0] == '–ò–º—è' or args[0] == '–∏–º—è':
                data = cursor.execute('SELECT * FROM neko WHERE id = '+str(message.from_user.id))
                data = data.fetchone()
                if data is None:
                    bot.send_message(message.chat.id,'–¢—ã –Ω–µ –æ–¥–∏–Ω –∏–∑ –Ω–∞—Å, –Ω–∞–ø–∏—à–∏ /start —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –Ω–µ–∫–æ—Å–ª–∞–≤–æ–º')
                    return
                nam = str(data[1]).rstrip()
                rep = data[2]
                event = data[10]
                bolnitsa = int(data[6] - time.time())
                gender = data[33]
                if bolnitsa > 0:
                    bot.send_message(message.chat.id, '–¢—ã –≤ –±–æ–ª—å–Ω–∏—Ü–µ –¥–µ–±–∏–ª')
                    bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                    return
                if event > 0:
                    bot.send_message(message.chat.id, '–¢—ã –≥—É–ª—è–µ—à—å –µ–±–∞–Ω–∞—Ç')
                    bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                    return
                if len(args) >= 2 and len(message.text) < 54 and len(message.text) > 6:
                    if rep > 0:
                        nam = str(args[1])
                        i = 2
                        while i < len(args):
                            nam = nam + ' ' + str(args[i])
                            i = i + 1
                        nam = nam.capitalize()
                        if emoji.emoji_count(nam) > 0 or '[' in nam or ']' in nam or '<' in nam or '>' in nam:
                            bot.send_message(message.chat.id, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏–º—è –ø–∞—à–æ–ª –Ω–∞—Ö—É–π')
                            bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                            return
                        cursor.execute("UPDATE neko SET name = '"+ nam +"' WHERE id = "+str(message.from_user.id))
                        text = '–¢—ã –¥–∞–ª –∏–º—è –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫–µ. –ë–µ–∑ —Å–æ–º–Ω–µ–Ω–∏–π, –æ–Ω–∞ –±—ã—Å—Ç—Ä–æ –∫ –Ω–µ–º—É –ø—Ä–∏–≤—ã–∫–Ω–µ—Ç'
                        if gender == 1:
                            text = '–¢—ã –¥–∞–ª –∏–º—è –Ω–µ–∫–æ–º–∞–ª—å—á–∏–∫—É. –ë–µ–∑ —Å–æ–º–Ω–µ–Ω–∏–π, –æ–Ω –±—ã—Å—Ç—Ä–æ –∫ –Ω–µ–º—É –ø—Ä–∏–≤—ã–∫–Ω–µ—Ç'
                        bot.send_message(message.chat.id, text)
                        bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLaRiwIk4DRbw0Lap34MSyMpU-1-3KQACSQ8AAt46WUgVZwAB2AjTbT8pBA')
                    else:
                        text = nam + ' —Ç–µ–±—è –Ω–µ –∑–Ω–∞–µ—Ç, –º–æ–∂–µ—Ç –ª—É—á—à–µ —Å–Ω–∞—á–∞–ª–∞ –ø–æ–∫–æ—Ä–º–∏—à—å –µ—ë?'
                        if gender == 1:
                            text = nam + ' —Ç–µ–±—è –Ω–µ –∑–Ω–∞–µ—Ç, –º–æ–∂–µ—Ç –ª—É—á—à–µ —Å–Ω–∞—á–∞–ª–∞ –ø–æ–∫–æ—Ä–º–∏—à—å –µ–≥–æ?'
                        bot.send_message(message.chat.id, text)
                        bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLY5iwIflAaGLlpw7vXvQvEvJcWilzgACjxEAAqg6WEjqQFCw4uPiwikE')
                else:
                    bot.send_message(message.chat.id, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏–º—è –ø–∞—à–æ–ª –Ω–∞—Ö—É–π')
                    bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
        elif message.text == '–∫–ª–∞–¥–±–∏—â–µ' or message.text == '–ö–ª–∞–¥–±–∏—â–µ' or message.text == '@NekoslaviaBot –ö–ª–∞–¥–±–∏—â–µ' or message.text == '@NekoslaviaBot –∫–ª–∞–¥–±–∏—â–µ':
            data = cursor.execute('SELECT * FROM neko WHERE id = '+str(message.from_user.id))
            data = data.fetchone()
            if data is None:
                bot.send_message(message.chat.id,'–¢—ã –Ω–µ –æ–¥–∏–Ω –∏–∑ –Ω–∞—Å, –Ω–∞–ø–∏—à–∏ /start —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –Ω–µ–∫–æ—Å–ª–∞–≤–æ–º')
                return
            rep = data[2]
            event = data[10]
            bolnitsa = int(data[6] - time.time())
            if bolnitsa > 0:
                bot.send_message(message.chat.id, '–¢—ã –≤ –±–æ–ª—å–Ω–∏—Ü–µ –¥–µ–±–∏–ª')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            if event > 0:
                bot.send_message(message.chat.id, '–¢—ã –≥—É–ª—è–µ—à—å –µ–±–∞–Ω–∞—Ç')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            text = '–¢—ã —Ä–µ—à–∏–ª –ø–æ—Å–µ—Ç–∏—Ç—å –∫–ª–∞–¥–±–∏—â–µ –Ω–µ–∫–æ–¥–µ–≤–æ—á–µ–∫. –ó–¥–µ—Å—å –ø–æ–∫–æ—è—Ç—Å—è –≤—Å–µ –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫–∏, –∑–∞ –∫–æ—Ç–æ—Ä—ã–º–∏, –∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é, –º—ã –Ω–µ –¥–æ–≥–ª—è–¥–µ–ª–∏\n'
            data = cursor.execute('SELECT * FROM dead ORDER BY time DESC')
            data = data.fetchall()
            text = text + '–ü–æ—Å–ª–µ–¥–Ω–∏–µ —É–º–µ—Ä—à–∏–µ –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫–∏ –∏ –Ω–µ–∫–æ–º–∞–ª—å—á–∏–∫–∏:\n\n'
            i = 0
            if data is not None:
             for dat in data:
                if i == 10:
                    break
                cur = datetime.fromtimestamp(dat[1])
                d = int(cur.day)
                if d < 10:
                    d = '0'+str(d)
                else:
                    d = str(d)
                md = int(cur.month)
                if md < 10:
                    md = '0'+str(md)
                else:
                    md = str(md)
                y = str(cur.year)
                death_date = d+'.'+md+'.'+y

                text = text + str(i+1) + '.  ' + str(dat[0]).rstrip() + ' ‚ò†Ô∏è   ' + death_date + ' üóì\n'
                i = i + 1
            bot.send_photo(message.chat.id, photo = 'AgACAgIAAx0CZQN7rQACn-JiwJJAUjK0Czuxv3RBKiKJJ61u_wACjrwxG0oRCEoxH0CUJepbQQEAAwIAA3MAAykE',caption = text)
        elif '–æ—Ç–¥–∞—Ç—å' == message.text or '–û—Ç–¥–∞—Ç—å' == message.text or message.text == '@NekoslaviaBot –û—Ç–¥–∞—Ç—å' or message.text == '@NekoslaviaBot –æ—Ç–¥–∞—Ç—å':
            data = cursor.execute('SELECT * FROM neko WHERE id = '+str(message.from_user.id))
            data = data.fetchone()
            if data is None:
                bot.send_message(message.chat.id,'–¢—ã –Ω–µ –æ–¥–∏–Ω –∏–∑ –Ω–∞—Å, –Ω–∞–ø–∏—à–∏ /start —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –Ω–µ–∫–æ—Å–ª–∞–≤–æ–º')
                return
            nam = str(data[1]).rstrip()
            rep = data[2]
            event = data[10]
            bolnitsa = int(data[6] - time.time())
            baza = data[8]
            gender = data[33]
            photo = str(data[5]).rstrip()
            if event != 1:
                bot.send_message(message.chat.id, '–•—É–π–Ω—é —Å–º–æ—Ä–æ–∑–∏–ª')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            else:
                if gender == 0:
                    text = '<b>"–ï–±–∞, –≤—Å–µ –± —Ç–∞–∫–∏–µ —É–º–Ω—ã–µ –±—ã–ª–∏"</b> - —Å–∫–∞–∑–∞–ª–∏ –≥–æ–ø–Ω–∏–∫–∏, —É–≤–æ–¥—è —Ç–≤–æ—é –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫—É –≤ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ ‚ò†Ô∏è. –ì—Ä—É—Å—Ç–Ω–æ, –∫–æ–Ω–µ—á–Ω–æ, –Ω–æ –º–æ–∂–µ—Ç –æ–Ω–æ –∏ –∫ –ª—É—á—à–µ–º—É?'
                    bot.send_message(message.chat.id, text,parse_mode='HTML')
                    bot.send_message(message.chat.id, '–í–∏–¥–∏–º–æ, –ø—Ä–∏–¥—ë—Ç—Å—è –≤—ã–¥–∞—Ç—å —Ç–µ–±–µ –Ω–æ–≤—É—é –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫—É')
                    photka = random.choice(photos)
                    while photo == photka:
                        photka = random.choice(photos)
                    newnam = '–ù–µ–∫–æ–¥–µ–≤–æ—á–∫–∞'
                else:
                    text = '<b>"–ï–±–∞, –≤—Å–µ –± —Ç–∞–∫–∏–µ —É–º–Ω—ã–µ –±—ã–ª–∏"</b> - —Å–∫–∞–∑–∞–ª–∏ –≥–æ–ø–Ω–∏–∫–∏, —É–≤–æ–¥—è —Ç–≤–æ–µ–≥–æ –Ω–µ–∫–æ–º–∞–ª—å—á–∏–∫–∞ –≤ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ ‚ò†Ô∏è. –ì—Ä—É—Å—Ç–Ω–æ, –∫–æ–Ω–µ—á–Ω–æ, –Ω–æ –º–æ–∂–µ—Ç –æ–Ω–æ –∏ –∫ –ª—É—á—à–µ–º—É?'
                    bot.send_message(message.chat.id, text,parse_mode='HTML')
                    bot.send_message(message.chat.id, '–í–∏–¥–∏–º–æ, –ø—Ä–∏–¥—ë—Ç—Å—è –≤—ã–¥–∞—Ç—å —Ç–µ–±–µ –Ω–æ–≤–æ–≥–æ –Ω–µ–∫–æ–º–∞–ª—å—á–∏–∫–∞')
                    photka = random.choice(trap_photos)
                    while photo == photka:
                        photka = random.choice(trap_photos)
                    newnam = '–ù–µ–∫–æ–º–∞–ª—å—á–∏–∫'
                if nam == '–ù–µ–∫–æ–¥–µ–≤–æ—á–∫–∞' or nam == '–ù–µ–∫–æ–º–∞–ª—å—á–∏–∫':
                    cursor.execute("INSERT INTO dead (name,time) VALUES ('–ë–µ–∑—ã–º—è–Ω–Ω–∞—è –º–æ–≥–∏–ª–∞',"+str(int(time.time())) +")")
                else:
                    cursor.execute("INSERT INTO dead (name,time) VALUES ('"+nam+"',"+str(int(time.time())) +")")
                kormit = time.time()
                gulat = time.time()
                cursor.execute("UPDATE neko SET new_phot = 'None', kormit = " + str(kormit) + ", gulat = " + str(gulat) + ", name = '" + newnam + "', gifka = 'Nothing', licension = 0, gladit = 0,photo = '" + photka + "',event = 0 WHERE id = "+str(message.from_user.id))
                if baza >= 2:
                    if gender == 0:
                        bot.send_message(message.chat.id, '–ù–æ–≤–æ–π –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫–µ, c—É–¥—è –ø–æ –≤—Å–µ–º—É, –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å —Ç–≤–æ—è –±–∞–∑–∞')
                    else:
                        bot.send_message(message.chat.id, '–ù–æ–≤–æ–º—É –Ω–µ–∫–æ–º–∞–ª—å—á–∏–∫—É, c—É–¥—è –ø–æ –≤—Å–µ–º—É, –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å —Ç–≤–æ—è –±–∞–∑–∞')
                    bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFM5VixNUnaSAzda2fwcrxHsDUdA-caAACJw8AAmVYWEj9O0ji0K4xiikE')
                else:
                    cursor.execute("UPDATE neko SET rep = 0 WHERE id = "+ str(message.from_user.id))
        elif '–¥—Ä–∞—Ç—å—Å—è' == message.text or '–î—Ä–∞—Ç—å—Å—è' == message.text or message.text == '@NekoslaviaBot –î—Ä–∞—Ç—å—Å—è' or message.text == '@NekoslaviaBot –¥—Ä–∞—Ç—å—Å—è':
            data = cursor.execute('SELECT * FROM neko WHERE id = '+str(message.from_user.id))
            data = data.fetchone()
            if data is None:
                bot.send_message(message.chat.id,'–¢—ã –Ω–µ –æ–¥–∏–Ω –∏–∑ –Ω–∞—Å, –Ω–∞–ø–∏—à–∏ /start —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –Ω–µ–∫–æ—Å–ª–∞–≤–æ–º')
                return
            nam = str(data[1]).rstrip()
            rep = data[2]
            event = data[10]
            bolnitsa = int(data[6] - time.time())
            gender = data[33]
            if event != 1:
                bot.send_message(message.chat.id, '–•—É–π–Ω—é —Å–º–æ—Ä–æ–∑–∏–ª')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            else:
                biba = random.randint(28800,43200)
                b = int(time.time() + biba)
                biba = math.ceil(biba/3600)
                text =  "–¢–≤–æ—è –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫–∞ –ø—Ä–∏–±–µ–∂–∞–ª–∞ –∏, –∑–∞–ª–∏–≤–∞—è—Å—å —Å–ª–µ–∑–∞–º–∏, —Ä–∞—Å—Å–∫–∞–∑–∞–ª–∞ –º–Ω–µ —á—Ç–æ —Å–ª—É—á–∏–ª–æ—Å—å. –•–æ—Ç—å —Ç—ã –∏ –Ω–∞–ø–∞–ª –ø–µ—Ä–≤—ã–º, –Ω–æ —á–∏—Å–ª–µ–Ω–Ω–æ–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ –æ–∫–∞–∑–∞–ª–æ—Å—å –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ –≥–æ–ø–Ω–∏–∫–æ–≤. –°–æ–∂–∞–ª–µ—é, –Ω–æ –±–ª–∏–∂–∞–π—à–∏–µ " + str(biba) + " —á–∞—Å–æ–≤ –ø—Ä–∏–π–¥—ë—Ç—Å—è –ø—Ä–æ–≤–µ—Å—Ç–∏ –≤ –±–æ–ª—å–Ω–∏—Ü–µ üíä. –í–æ –≤—Å—è–∫–æ–º —Å–ª—É—á–∞–µ, "+ nam  + " —Å—Ç–∞–ª–∞ –¥–æ–≤–µ—Ä—è—Ç—å —Ç–µ–±–µ –≥–∞—Ä–∞–∑–¥–æ –±–æ–ª—å—à–µ ‚ù§Ô∏è"
                if gender == 1:
                    text =  "–¢–≤–æ–π –Ω–µ–∫–æ–º–∞–ª—å—á–∏–∫ –ø—Ä–∏–±–µ–∂–∞–ª –∏, –∑–∞–ª–∏–≤–∞—è—Å—å —Å–ª–µ–∑–∞–º–∏, —Ä–∞—Å—Å–∫–∞–∑–∞–ª –º–Ω–µ —á—Ç–æ —Å–ª—É—á–∏–ª–æ—Å—å. –•–æ—Ç—å —Ç—ã –∏ –Ω–∞–ø–∞–ª –ø–µ—Ä–≤—ã–º, –Ω–æ —á–∏—Å–ª–µ–Ω–Ω–æ–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ –æ–∫–∞–∑–∞–ª–æ—Å—å –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ –≥–æ–ø–Ω–∏–∫–æ–≤. –°–æ–∂–∞–ª–µ—é, –Ω–æ –±–ª–∏–∂–∞–π—à–∏–µ " + str(biba) + " —á–∞—Å–æ–≤ –ø—Ä–∏–π–¥—ë—Ç—Å—è –ø—Ä–æ–≤–µ—Å—Ç–∏ –≤ –±–æ–ª—å–Ω–∏—Ü–µ üíä. –í–æ –≤—Å—è–∫–æ–º —Å–ª—É—á–∞–µ, "+ nam  + " —Å—Ç–∞–ª –¥–æ–≤–µ—Ä—è—Ç—å —Ç–µ–±–µ –≥–∞—Ä–∞–∑–¥–æ –±–æ–ª—å—à–µ ‚ù§Ô∏è"
                bot.send_message(message.chat.id, text)
                cursor.execute('UPDATE neko SET bolnitsa  = '+str(b)+',event = 0 WHERE id = ' + str(message.from_user.id))
        elif '–ø–æ–∫–∞–∑–∞—Ç—å' == message.text or '–ü–æ–∫–∞–∑–∞—Ç—å' == message.text or message.text == '@NekoslaviaBot –ü–æ–∫–∞–∑–∞—Ç—å' or message.text == '@NekoslaviaBot –ø–æ–∫–∞–∑–∞—Ç—å':
            data = cursor.execute('SELECT * FROM neko WHERE id = '+str(message.from_user.id))
            data = data.fetchone()
            if data is None:
                bot.send_message(message.chat.id,'–¢—ã –Ω–µ –æ–¥–∏–Ω –∏–∑ –Ω–∞—Å, –Ω–∞–ø–∏—à–∏ /start —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –Ω–µ–∫–æ—Å–ª–∞–≤–æ–º')
                return
            nam = str(data[1]).rstrip()
            event = data[10]
            licension = data[26]
            gender = data[33]
            if event != 7:
                bot.send_message(message.chat.id, '–•—É–π–Ω—é —Å–º–æ—Ä–æ–∑–∏–ª')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            if time.time() > licension:
                biba = random.randint(28800,43200)
                b = int(time.time() + biba)
                biba = math.ceil(biba/3600)
                text = '–ú–µ–Ω—Ç –ø—Ä–∏—Å—Ç–∞–ª—å–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ–ª —Å–Ω–∞—á–∞–ª–∞ –Ω–∞ –ª–∏—Ü–µ–Ω–∑–∏—é, –∞ –ø–æ—Ç–æ–º –Ω–∞ –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫—É. <b>"–ê –ª–∏—Ü–µ–Ω–∑–∏—è-—Ç–æ –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞. –ë—É–¥—å—Ç–µ –¥–æ–±—Ä—ã –ø—Ä–æ–π—Ç–∏ —Å –Ω–∞–º–∏ –≤ –æ—Ç–¥–µ–ª–µ–Ω–∏–µ"</b> - –±—ã–ª–æ —Å–∫–∞–∑–∞–Ω–æ –∫–∞–∫ –∏—Ç–æ–≥. –ü–∞—Ä—É —á–∞—Å–æ–≤ —Ç–µ–±—è –∏–∑–±–∏–≤–∞–ª–∏ –¥—É–±–∏–Ω–∫–∞–º–∏ –≤ –æ—Ç–¥–µ–ª–µ–Ω–∏–∏, —Ç—Ä–µ–±—É—è –ø—Ä–∏–∑–Ω–∞–Ω–∏—è –≤ –∫—Ä–∞–∂–µ –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫–∏. –í –∫–æ–Ω—Ü–µ-–∫–æ–Ω—Ü–æ–≤, –≤–∞—Å –æ—Ç–ø—É—Å—Ç–∏–ª–∏, –∏ ' + nam + ' –ø–æ–º–æ–≥–ª–∞ –¥–æ–∫–æ–≤—ã–ª—è—Ç—å —Ç–µ–±–µ –¥–æ –±–ª–∏–∂–∞–π—à–µ–π –±–æ–ª—å–Ω–∏—Ü—ã, –≥–¥–µ —Ç—ã –ø—Ä–æ–≤–µ–¥—ë—à—å ' + str(biba) + ' —á–∞—Å–æ–≤ üíä'
                if gender == 1:
                    text = '–ú–µ–Ω—Ç –ø—Ä–∏—Å—Ç–∞–ª—å–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ–ª —Å–Ω–∞—á–∞–ª–∞ –Ω–∞ –ª–∏—Ü–µ–Ω–∑–∏—é, –∞ –ø–æ—Ç–æ–º –Ω–∞ –Ω–µ–∫–æ–º–∞–ª—å—á–∏–∫–∞. <b>"–ê –ª–∏—Ü–µ–Ω–∑–∏—è-—Ç–æ –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞. –ë—É–¥—å—Ç–µ –¥–æ–±—Ä—ã –ø—Ä–æ–π—Ç–∏ —Å –Ω–∞–º–∏ –≤ –æ—Ç–¥–µ–ª–µ–Ω–∏–µ"</b> - –±—ã–ª–æ —Å–∫–∞–∑–∞–Ω–æ –∫–∞–∫ –∏—Ç–æ–≥. –ü–∞—Ä—É —á–∞—Å–æ–≤ —Ç–µ–±—è –∏–∑–±–∏–≤–∞–ª–∏ –¥—É–±–∏–Ω–∫–∞–º–∏ –≤ –æ—Ç–¥–µ–ª–µ–Ω–∏–∏, —Ç—Ä–µ–±—É—è –ø—Ä–∏–∑–Ω–∞–Ω–∏—è –≤ –∫—Ä–∞–∂–µ –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫–∏. –í –∫–æ–Ω—Ü–µ-–∫–æ–Ω—Ü–æ–≤, –≤–∞—Å –æ—Ç–ø—É—Å—Ç–∏–ª–∏, –∏ ' + nam + ' –ø–æ–º–æ–≥ –¥–æ–∫–æ–≤—ã–ª—è—Ç—å —Ç–µ–±–µ –¥–æ –±–ª–∏–∂–∞–π—à–µ–π –±–æ–ª—å–Ω–∏—Ü—ã, –≥–¥–µ —Ç—ã –ø—Ä–æ–≤–µ–¥—ë—à—å ' + str(biba) + ' —á–∞—Å–æ–≤ üíä'
                bot.send_message(message.chat.id, text,parse_mode='HTML')
                cursor.execute('UPDATE neko SET bolnitsa  = '+str(b)+',event = 0 WHERE id = ' + str(message.from_user.id))
            else:
                text = '–ú–µ–Ω—Ç –ø—Ä–∏—Å—Ç–∞–ª—å–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ–ª —Å–Ω–∞—á–∞–ª–∞ –Ω–∞ –ª–∏—Ü–µ–Ω–∑–∏—é, –∞ –ø–æ—Ç–æ–º –Ω–∞ –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫—É. <b>"–õ–∞–¥–Ω–æ, –≤—Å—ë –≤ –ø–æ–ª–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ. –ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –±–µ—Å–ø–æ–∫–æ–π—Å—Ç–≤–æ"</b> - –±—ã–ª–æ —Å–∫–∞–∑–∞–Ω–æ —Å –Ω–µ–∫–æ—Ç–æ—Ä—ã–º —Ä–∞–∑–æ—á–∞—Ä–æ–≤–∞–Ω–∏–µ–º. ' + nam + ' –≤–µ—Å—å –æ—Å—Ç–∞–≤—à–∏–π—Å—è –¥–µ–Ω—å —Ä–∞—Å—Å–ø—Ä–∞—à–∏–≤–∞–ª–∞ —Ç–µ–±—è —á—Ç–æ —Ç–∞–∫–æ–µ –ª–∏—Ü–µ–Ω–∑–∏—è –∏ –∑–∞—á–µ–º –æ–Ω–∞ –Ω—É–∂–Ω–∞, –∞ —Ç—ã —Å —Ä–∞–¥–æ—Å—Ç—å—é –æ—Ç–≤–µ—á–∞–ª –Ω–∞ —ë—ë –≤–æ–ø—Ä–æ—Å—ã'
                if gender == 1:
                    text = '–ú–µ–Ω—Ç –ø—Ä–∏—Å—Ç–∞–ª—å–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ–ª —Å–Ω–∞—á–∞–ª–∞ –Ω–∞ –ª–∏—Ü–µ–Ω–∑–∏—é, –∞ –ø–æ—Ç–æ–º –Ω–∞ –Ω–µ–∫–æ–º–∞–ª—å—á–∏–∫–∞. <b>"–õ–∞–¥–Ω–æ, –≤—Å—ë –≤ –ø–æ–ª–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ. –ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –±–µ—Å–ø–æ–∫–æ–π—Å—Ç–≤–æ"</b> - –±—ã–ª–æ —Å–∫–∞–∑–∞–Ω–æ —Å –Ω–µ–∫–æ—Ç–æ—Ä—ã–º —Ä–∞–∑–æ—á–∞—Ä–æ–≤–∞–Ω–∏–µ–º. ' + nam + ' –≤–µ—Å—å –æ—Å—Ç–∞–≤—à–∏–π—Å—è –¥–µ–Ω—å —Ä–∞—Å—Å–ø—Ä–∞—à–∏–≤–∞–ª —Ç–µ–±—è —á—Ç–æ —Ç–∞–∫–æ–µ –ª–∏—Ü–µ–Ω–∑–∏—è –∏ –∑–∞—á–µ–º –æ–Ω–∞ –Ω—É–∂–Ω–∞, –∞ —Ç—ã —Å —Ä–∞–¥–æ—Å—Ç—å—é –æ—Ç–≤–µ—á–∞–ª –Ω–∞ –µ–≥–æ –≤–æ–ø—Ä–æ—Å—ã'
                bot.send_message(message.chat.id, text,parse_mode='HTML')
                cursor.execute('UPDATE neko SET event = 0 WHERE id = ' + str(message.from_user.id))
        elif '–æ—Ç–∫—É–ø–∏—Ç—å—Å—è' == message.text or '–û—Ç–∫—É–ø–∏—Ç—å—Å—è' == message.text or message.text == '@NekoslaviaBot –û—Ç–∫—É–ø–∏—Ç—å—Å—è' or message.text == '@NekoslaviaBot –æ—Ç–∫—É–ø–∏—Ç—å—Å—è':
            data = cursor.execute('SELECT * FROM neko WHERE id = '+str(message.from_user.id))
            data = data.fetchone()
            if data is None:
                bot.send_message(message.chat.id,'–¢—ã –Ω–µ –æ–¥–∏–Ω –∏–∑ –Ω–∞—Å, –Ω–∞–ø–∏—à–∏ /start —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –Ω–µ–∫–æ—Å–ª–∞–≤–æ–º')
                return
            nam = str(data[1]).rstrip()
            event = data[10]
            coins = data[11]
            gender = data[33]
            cost = 20
            if event != 7:
                bot.send_message(message.chat.id, '–•—É–π–Ω—é —Å–º–æ—Ä–æ–∑–∏–ª')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            if coins < cost:
                bot.send_message(message.chat.id, '–ê –¥–µ–Ω—å–≥–∏ –≥–¥–µ')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            coins = coins - cost
            text = '<b>"–•–æ—Ä–æ—à–µ–≥–æ –≤–∞–º –¥–Ω—è, –º–æ–ª–æ–¥–æ–π —á–µ–ª–æ–≤–µ–∫"</b> - –æ—Ç–≤–µ—Ç–∏–ª–∏ —Ç–µ–±–µ –º–µ–Ω—Ç—ã —Å –Ω–∞—Å–º–µ—à–ª–∏–≤—ã–º–∏ —É–ª—ã–±–∫–∞–º–∏ –Ω–∞ –∏—Ö –ª–∏—Ü–∞—Ö. –ö–∞–∫ –º–æ–∂–Ω–æ –±—ã–ª–æ –¥–æ–≥–∞–¥–∞—Ç—å—Å—è, —ç—Ç–æ—Ç –¥–µ–Ω—å —Ö–æ—Ä–æ—à–∏–º —É–∂–µ –Ω–µ –±—É–¥–µ—Ç'
            bot.send_message(message.chat.id, text,parse_mode='HTML')
            cursor.execute('UPDATE neko SET coins  = '+str(coins)+',event = 0 WHERE id = ' + str(message.from_user.id))
        elif '–∑–∞–≤–æ–¥' == message.text or '–ó–∞–≤–æ–¥' == message.text or message.text == '@NekoslaviaBot –ó–∞–≤–æ–¥' or message.text == '@NekoslaviaBot –∑–∞–≤–æ–¥':
            data = cursor.execute('SELECT * FROM neko WHERE id = '+str(message.from_user.id))
            data = data.fetchone()
            if data is None:
                bot.send_message(message.chat.id,'–¢—ã –Ω–µ –æ–¥–∏–Ω –∏–∑ –Ω–∞—Å, –Ω–∞–ø–∏—à–∏ /start —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –Ω–µ–∫–æ—Å–ª–∞–≤–æ–º')
                return
            zavod = data[7]
            event = data[10]
            coins = data[11]
            bolnitsa = int(data[6] - time.time())
            version = data[29]
            boxes = data[34]
            reward = data[35]
            rep = data[2]
            gender = data[33]
            days = data[42]
            box = int(rep/100) - reward
            nam = str(data[1]).rstrip()
            if bolnitsa > 0:
                bot.send_message(message.chat.id, '–¢—ã –≤ –±–æ–ª—å–Ω–∏—Ü–µ –¥–µ–±–∏–ª')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            if event > 0:
                bot.send_message(message.chat.id, '–¢—ã –≥—É–ª—è–µ—à—å –µ–±–∞–Ω–∞—Ç')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            cur = datetime.now()
            d = int(cur.day)
            h = int(cur.hour) + 3
            if h > 17 or h < 7:
                bot.send_message(message.chat.id, '–†–∞–±–æ—Ç–∞—Ç—å –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ —Å 7 –¥–æ 6')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            if h < 8:
                pic = 'AgACAgIAAx0CZQN7rQAC1cRjWHHPqKY27zwSInf6YS46TjgN3wAC3r4xG2_iyEpm4U7RaB2iRQEAAwIAA3MAAyoE'
            else:
                pic = 'AgACAgIAAx0CZQN7rQACn_1iwNZlro5zQzmVqnbvJMQSzhuaCQACLr0xG0oRCEphls-j33z4fQEAAwIAA3MAAykE'
            if zavod == d:
                bot.send_message(message.chat.id, '–°–µ–≥–æ–¥–Ω—è —Ç—ã —É–∂–µ —Ä–∞–±–æ—Ç–∞–ª')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            days = days + 1
            cursor.execute("UPDATE neko SET zavod = "+ str(d) +" WHERE id = "+str(message.from_user.id))
            cursor.execute("UPDATE neko SET days = "+ str(days) +" WHERE id = "+str(message.from_user.id))
            if days <= 3:
                c = 15
                coins = coins + c
                cursor.execute("UPDATE neko SET coins = "+ str(coins) +" WHERE id = "+str(message.from_user.id))
                if days != 3:
                    bot.send_photo(message.chat.id, photo = pic,caption = '–ß—Ç–æ –∂, —Å–∞–º–æ–µ –≤—Ä–µ–º—è –∏–¥—Ç–∏ –Ω–∞ –∑–∞–≤–æ–¥ –µ–±–∞—à–∏—Ç—å –∑–∞ –∫–æ–ø–µ–π–∫–∏.\n\n–ó–∞ —ç—Ç—É —Å–º–µ–Ω—É —Ç–µ–±–µ —É–¥–∞–ª–æ—Å—å –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å ' + str(c) + ' –Ω–µ–∫–æ–≥—Ä–∏–≤–µ–Ω üí∞. –£–≤–µ—Ä–µ–Ω, —É —Ç–µ–±—è –ø–æ–ª—É—á–∏—Ç—Å—è –≤—Å—ë –Ω–µ –ø—Ä–æ–ø–∏—Ç—å')
                else:
                    bot.send_photo(message.chat.id, photo = pic,caption = '–ß—Ç–æ –∂, —Å–∞–º–æ–µ –≤—Ä–µ–º—è –∏–¥—Ç–∏ –Ω–∞ –∑–∞–≤–æ–¥ –µ–±–∞—à–∏—Ç—å –∑–∞ –∫–æ–ø–µ–π–∫–∏.\n\n–ó–∞ —ç—Ç—É —Å–º–µ–Ω—É —Ç–µ–±–µ —É–¥–∞–ª–æ—Å—å –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å ' + str(c) + ' –Ω–µ–∫–æ–≥—Ä–∏–≤–µ–Ω üí∞. –£–≤–µ—Ä–µ–Ω, —É —Ç–µ–±—è –ø–æ–ª—É—á–∏—Ç—Å—è –≤—Å—ë –Ω–µ –ø—Ä–æ–ø–∏—Ç—å\n\n–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Å—Ç–∞–Ω–∫–æ–º —Ç–µ–±–µ –æ—Ç—Ö–µ—Ä–∞—á–∏–ª–æ –ø–æ—Å–ª–µ–¥–Ω–∏–π –ø–∞–ª–µ—Ü, –ø–æ—ç—Ç–æ–º—É —Ç–µ–±—è –ø–µ—Ä–µ–≤–æ–¥—è—Ç –Ω–∞ –Ω–æ–≤—É—é –¥–æ–ª–∂–Ω–æ—Å—Ç—å. –° –∑–∞–≤—Ç—Ä–∞—à–Ω–µ–≥–æ –¥–Ω—è —Ç—ã –±—É–¥–µ—à—å —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞ –æ–¥–Ω–æ–º –∏–∑ –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ-–ø—Ä–æ–ø—É—Å–∫–Ω—ã—Ö –ø—É–Ω–∫—Ç–æ–≤ –∑–∞–≤–æ–¥–∞. –ú–æ–∂–µ—à—å —Å—á–∏—Ç–∞—Ç—å —ç—Ç–æ –ø–æ–≤—ã—à–µ–Ω–∏–µ–º')
                if version != patch_version:
                    cursor.execute("UPDATE neko SET version = "+ str(patch_version) +" WHERE id = "+str(message.from_user.id))
                    keyboard = types.InlineKeyboardMarkup()
                    callback_button1 = types.InlineKeyboardButton(text = '–ß–∏—Ç–∞—Ç—å üëÄ',callback_data = 'read ' + str(message.from_user.id))
                    keyboard.add(callback_button1)
                    callback_button2 = types.InlineKeyboardButton(text = '–ù–µ —á–∏—Ç–∞—Ç—å ‚ùå',callback_data = 'dont ' + str(message.from_user.id))
                    keyboard.add(callback_button2)
                    bot.send_photo(message.chat.id, photo = 'AgACAgIAAx0CZQN7rQACznBjQgABiPsE5FE7am8mfAOKiXsSOEsAAju9MRuS1hFKlyErHhjWQfcBAAMCAANzAAMqBA',caption = '–í–æ–∑–≤—Ä–∞—â–∞—è—Å—å —Å —Ä–∞–±–æ—Ç—ã, —Ç—ã –∑–∞–º–µ—Ç–∏–ª —Å–≤–µ–∂—É—é –≥–∞–∑–µ—Ç—É, —Ç–æ—Ä—á–∞—â—É—é –∏–∑ —Ç–≤–æ–µ–≥–æ –ø–æ—á—Ç–æ–≤–æ–≥–æ —è—â–∏–∫–∞. –ü—Ä–æ—á–∏—Ç–∞—Ç—å –µ—ë?',reply_markup=keyboard)
               #elif box > 0:
               #  boxes = boxes + box
               # reward = reward + box
               #cursor.execute("UPDATE neko SET reward = "+ str(reward) +" WHERE id = "+str(message.from_user.id))
               #     cursor.execute("UPDATE neko SET boxes = "+ str(boxes) +" WHERE id = "+str(message.from_user.id))
               #    keyboard = types.InlineKeyboardMarkup()
               #   callback_button1 = types.InlineKeyboardButton(text = '–ß–∏—Ç–∞—Ç—å üëÄ',callback_data = 'letter ' + str(message.from_user.id))
               #  keyboard.add(callback_button1)
               # callback_button2 = types.InlineKeyboardButton(text = '–ù–µ —á–∏—Ç–∞—Ç—å ‚ùå',callback_data = 'dont ' + str(message.from_user.id))
               # keyboard.add(callback_button2)
               # txt = '–ü–µ—Ä–µ–±–∏—Ä–∞—è –ø–æ—á—Ç—É, —Ç—ã –∑–∞–º–µ—Ç–∏–ª –ø–∏—Å—å–º–æ, –≤—ã–¥–µ–ª—è—é—â–µ–µ—Å—è —Å—Ä–µ–¥–∏ –∫—É—á–∏ –±–µ—Å–ø–æ–ª–µ–∑–Ω—ã—Ö —Å—á–µ—Ç–æ–≤ –∏ –ø–æ–≤–µ—Å—Ç–æ–∫. –ü—Ä–æ—á–∏—Ç–∞—Ç—å –µ–≥–æ?'
               # bot.send_photo(message.chat.id, photo = 'AgACAgIAAx0CZQN7rQAC1PhjVwdShxawIYgm_OAkJPMXuOBWiQAClsgxG1hTuEqsn8YQrmq_egEAAwIAA3MAAyoE',caption = txt,reply_markup=keyboard)
               # txt = '–ö —Ç–æ–º—É –∂–µ, —É —Ç–µ–±—è –ø–æ–¥ –≤—Ö–æ–¥–Ω–æ–π –¥–≤–µ—Ä—å—é –ª–µ–∂–∞–ª–∞ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–∞—è –∫–æ—Ä–æ–±–∫–∞ üì¶. –¢—ã –ø—Ä–µ–¥–ª–æ–∂–∏–ª –µ—ë –ø—Ä–æ—Å—Ç–æ –≤—ã–∫–∏–Ω—É—Ç—å, –Ω–æ ' + nam + ', –æ–∂–∏–¥–∞–µ–º–æ, –Ω–µ —Å–æ–≥–ª–∞—Å–∏–ª–∞—Å—å —Å —Ç–∞–∫–∏–º —Ä–µ—à–µ–Ω–∏–µ–º\n\n–ü–æ—Å—ã–ª–∫–∞ üì¶ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å\n\n<code>–î–æ–Ω–∞—Ç –ø–æ—Å—ã–ª–∫–∞ [N]</code> - –ø–µ—Ä–µ–¥–∞—Ç—å –ø–æ—Å—ã–ª–∫—É, –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ\n\n<code>–û—Ç–∫—Ä—ã—Ç—å –ø–æ—Å—ã–ª–∫—É</code> - –æ—Ç–∫—Ä—ã—Ç—å –∑–∞–≥–∞–¥–æ—á–Ω—É—é –ø–æ—Å—ã–ª–∫—É\n'
               # if gender == 1:
               #     txt = '–ö —Ç–æ–º—É –∂–µ, —É —Ç–µ–±—è –ø–æ–¥ –≤—Ö–æ–¥–Ω–æ–π –¥–≤–µ—Ä—å—é –ª–µ–∂–∞–ª–∞ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–∞—è –∫–æ—Ä–æ–±–∫–∞ üì¶. –¢—ã –ø—Ä–µ–¥–ª–æ–∂–∏–ª –µ—ë –ø—Ä–æ—Å—Ç–æ –≤—ã–∫–∏–Ω—É—Ç—å, –Ω–æ ' + nam + ', –æ–∂–∏–¥–∞–µ–º–æ, –Ω–µ —Å–æ–≥–ª–∞—Å–∏–ª—Å—è —Å —Ç–∞–∫–∏–º —Ä–µ—à–µ–Ω–∏–µ–º\n\n–ü–æ—Å—ã–ª–∫–∞ üì¶ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å\n\n<code>–î–æ–Ω–∞—Ç –ø–æ—Å—ã–ª–∫–∞ [N]</code> - –ø–µ—Ä–µ–¥–∞—Ç—å –ø–æ—Å—ã–ª–∫—É, –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ\n\n<code>–û—Ç–∫—Ä—ã—Ç—å –ø–æ—Å—ã–ª–∫—É</code> - –æ—Ç–∫—Ä—ã—Ç—å –∑–∞–≥–∞–¥–æ—á–Ω—É—é –ø–æ—Å—ã–ª–∫—É\n'
               # bot.send_message(message.chat.id, txt,parse_mode='HTML')
            else:
                p1 = random.choice(papers_images)
                p2 = random.choice(papers_images)
                p3 = random.choice(papers_images)
                while p1 == p2 or p1 == p3 or p2 == p3:
                    p1 = random.choice(papers_images)
                    p2 = random.choice(papers_images)
                    p3 = random.choice(papers_images)
                images = [p1,p2,p3]
                images = pack(images)
                txt = '–¢—ã –ø—Ä–∏—à–µ–ª –Ω–∞ —Ä–∞–±–æ—á–µ–µ –º–µ—Å—Ç–æ –∏ –≥–æ—Ç–æ–≤ –ø—Ä–∏–Ω—è—Ç—å –ø–µ—Ä–≤—ã—Ö –Ω–µ–∫–æ—á–∞–Ω–æ–≤. –í —Ç–≤–æ–∏ –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏ –≤—Ö–æ–¥–∏—Ç –ø—Ä–æ–≤–µ—Ä—è—Ç—å –∏—Ö –¥–æ–∫—É–º–µ–Ω—Ç—ã –Ω–∞ –ø–æ–¥–ª–∏–Ω–Ω–æ—Å—Ç—å –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –ø—Ä–∞–≤–∏–ª–∞–º, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –≤ —Å–ø—Ä–∞–≤–∫–µ'
                keyboard = types.InlineKeyboardMarkup(row_width=2)
                callback_button1 = types.InlineKeyboardButton(text = '–ù–∞—á–∞—Ç—å ‚ñ∂Ô∏è',callback_data = 'paper ' + str(message.from_user.id) + ' ' + str(True) + ' '  + str(True) + ' 1')
                keyboard.add(callback_button1)
                m = bot.send_photo(message.chat.id,photo=pic,caption = txt, reply_markup=keyboard)
                wait = int(time.time() + 3600)
                cursor.execute("INSERT INTO papers (id,images,wait,chat,message) VALUES ("+str(message.from_user.id)+",'"+str(images)+"',"+str(wait)+","+str(m.chat.id)+","+str(m.id)+")")


        elif '–æ—Ç—Ä–∞–±–æ—Ç–∞—Ç—å' == message.text or '–û—Ç—Ä–∞–±–æ—Ç–∞—Ç—å' == message.text or message.text == '@NekoslaviaBot –û—Ç—Ä–∞–±–æ—Ç–∞—Ç—å' or message.text == '@NekoslaviaBot –æ—Ç—Ä–∞–±–æ—Ç–∞—Ç—å8':
            data = cursor.execute('SELECT * FROM neko WHERE id = '+str(message.from_user.id))
            data = data.fetchone()
            if data is None:
                bot.send_message(message.chat.id,'–¢—ã –Ω–µ –æ–¥–∏–Ω –∏–∑ –Ω–∞—Å, –Ω–∞–ø–∏—à–∏ /start —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –Ω–µ–∫–æ—Å–ª–∞–≤–æ–º')
                return
            event = data[10]
            coins = data[11]
            bolnitsa = int(data[6] - time.time())
            zavod = data[7]
            if bolnitsa > 0:
                bot.send_message(message.chat.id, '–¢—ã –≤ –±–æ–ª—å–Ω–∏—Ü–µ –¥–µ–±–∏–ª')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            if event > 0:
                bot.send_message(message.chat.id, '–¢—ã –≥—É–ª—è–µ—à—å –µ–±–∞–Ω–∞—Ç')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            if coins >= 0:
                bot.send_message(message.chat.id, '–£ —Ç–µ–±—è –Ω–µ—Ç –¥–æ–ª–≥–æ–≤')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            cur = datetime.now()
            d = int(cur.day)
            if zavod == d:
                bot.send_message(message.chat.id, '–°–µ–≥–æ–¥–Ω—è —Ç—ã —É–∂–µ —Ä–∞–±–æ—Ç–∞–ª')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            cursor.execute("UPDATE neko SET coins = 0 WHERE id = "+str(message.from_user.id))
            cursor.execute("UPDATE neko SET zavod = "+ str(d) +" WHERE id = "+str(message.from_user.id))
            cap = '–¢–µ–±—è –≤–∑—è–ª–∏ –æ—Ö—Ä–∞–Ω–Ω–∏–∫–æ–º –≤ –∫–∞–∑–∏–Ω–æ. –ù–∏—á–µ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–≥–æ –Ω–µ –ø—Ä–æ–∏–∑–æ—à–ª–æ, —Ä–∞–∑–≤–µ —á—Ç–æ –ø–æ–¥ –∫–æ–Ω–µ—Ü —Å–º–µ–Ω—ã —Ç—ã –ø–æ–º–æ–≥–∞–ª —Å–∞–Ω–∏—Ç–∞—Ä–∞–º —É–≤–µ–∑—Ç–∏ —Å—Ç—Ä–∞–Ω–Ω–æ–≥–æ –º—É–∂–∏–∫–∞, –∫—Ä–∏—á–∞—â–µ–≥–æ —á—Ç–æ-—Ç–æ –ø—Ä–æ –¥—Ä—É–≥–æ–π –ø–æ—Ä—è–¥–æ–∫ –∏ –∑–∞–ø–µ—á–∞—Ç–∞–Ω–Ω—É—é –∫–æ–ª–æ–¥—É. –ö–∞–∫ –±—ã —Ç–æ –Ω–∏ –±—ã–ª–æ, –¥–æ–ª–≥–æ–≤ —É —Ç–µ–±—è –±–æ–ª—å—à–µ –Ω–µ—Ç'
            bot.send_photo(message.chat.id, photo = 'AgACAgIAAx0CZQN7rQACyrNjGc35xHSmb1gR4r9IgIkFXObqRgAC5r0xG0V90EgpsZ5EAAGzE7UBAAMCAANzAAMpBA',caption = cap)

        elif message.text == '–≤—ã–≥–Ω–∞—Ç—å –¥–µ–±–∏–ª–æ–≤' or message.text == '–í—ã–≥–Ω–∞—Ç—å –¥–µ–±–∏–ª–æ–≤' or message.text == '@NekoslaviaBot –í—ã–≥–Ω–∞—Ç—å –¥–µ–±–∏–ª–æ–≤' or message.text == '@NekoslaviaBot –≤—ã–≥–Ω–∞—Ç—å –¥–µ–±–∏–ª–æ–≤':
            data = cursor.execute('SELECT * FROM neko WHERE id = '+str(message.from_user.id))
            data = data.fetchone()
            if data is None:
                bot.send_message(message.chat.id,'–¢—ã –Ω–µ –æ–¥–∏–Ω –∏–∑ –Ω–∞—Å, –Ω–∞–ø–∏—à–∏ /start —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –Ω–µ–∫–æ—Å–ª–∞–≤–æ–º')
                return
            debil = data[23]
            if debil != 0:
                bot.send_message(message.chat.id, '–î–µ–±–∏–ª—ã —É–∂–µ —É—à–ª–∏')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            cursor.execute('UPDATE neko SET debil = 1 WHERE id = ' + str(message.from_user.id))
            bot.send_message(message.chat.id, '–î–µ–±–∏–ª—ã —É—à–ª–∏ –æ—Ç —Ç–µ–±—è, –Ω–æ –±—É–¥—É—Ç —Ä–∞–¥—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç')
            bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFi19i9rLE0Zk7bicpKmus0JujKOHZGwACDxEAAoIqUUg7LMMbW4WU6SkE')
            return
        elif message.text == '–≤–µ—Ä–Ω—É—Ç—å –¥–µ–±–∏–ª–æ–≤' or message.text == '–í–µ—Ä–Ω—É—Ç—å –¥–µ–±–∏–ª–æ–≤' or message.text == '@NekoslaviaBot –í–µ—Ä–Ω—É—Ç—å –¥–µ–±–∏–ª–æ–≤' or message.text == '@NekoslaviaBot –≤–µ—Ä–Ω—É—Ç—å –¥–µ–±–∏–ª–æ–≤':
            data = cursor.execute('SELECT * FROM neko WHERE id = '+str(message.from_user.id))
            data = data.fetchone()
            if data is None:
                bot.send_message(message.chat.id,'–¢—ã –Ω–µ –æ–¥–∏–Ω –∏–∑ –Ω–∞—Å, –Ω–∞–ø–∏—à–∏ /start —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –Ω–µ–∫–æ—Å–ª–∞–≤–æ–º')
                return
            debil = data[23]
            if debil != 1:
                bot.send_message(message.chat.id, '–î–µ–±–∏–ª—ã –Ω–∏–∫—É–¥–∞ –Ω–µ —É—Ö–æ–¥–∏–ª–∏')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            cursor.execute('UPDATE neko SET debil = 0 WHERE id = ' + str(message.from_user.id))
            bot.send_message(message.chat.id, '–î–µ–±–∏–ª—ã –Ω–∞–∫–æ–Ω–µ—Ü-—Ç–æ –≤–µ—Ä–Ω—É–ª–∏—Å—å –∫ —Ç–µ–±–µ')
            bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFi19i9rLE0Zk7bicpKmus0JujKOHZGwACDxEAAoIqUUg7LMMbW4WU6SkE')
            return
        elif message.text == '–±–∞–∑–∞' or message.text == '–ë–∞–∑–∞' or message.text == '@NekoslaviaBot –ë–∞–∑–∞' or message.text == '@NekoslaviaBot –±–∞–∑–∞':
            data = cursor.execute('SELECT * FROM neko WHERE id = '+str(message.from_user.id))
            data = data.fetchone()
            if data is None:
                bot.send_message(message.chat.id,'–¢—ã –Ω–µ –æ–¥–∏–Ω –∏–∑ –Ω–∞—Å, –Ω–∞–ø–∏—à–∏ /start —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –Ω–µ–∫–æ—Å–ª–∞–≤–æ–º')
                return
            baza = data[8]
            event = data[10]
            coins = data[11]
            bolnitsa = int(data[6] - time.time())
            debil = data[23]
            gender = data[33]
            gtxt = ' —Å–æ —Å–≤–æ–µ–π –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫–æ–π '
            if gender == 1:
                gtxt = ' —Å–æ —Å–≤–æ–∏–º –Ω–µ–∫–æ–º–∞–ª—å—á–∏–∫–æ–º '
            photo_debil = str(data[24]).rstrip()
            photo_base = str(data[18]).rstrip()
            markup = types.InlineKeyboardMarkup()
            switch_button1 = types.InlineKeyboardButton(text='–£–ª—É—á—à–∏—Ç—å ‚è´', switch_inline_query_current_chat = "–£–ª—É—á—à–∏—Ç—å")
            markup.add(switch_button1)
            switch_button101 = types.InlineKeyboardButton(text='–í—ã–≥–Ω–∞—Ç—å –¥–µ–±–∏–ª–æ–≤ üôÅ', switch_inline_query_current_chat = "–í—ã–≥–Ω–∞—Ç—å –¥–µ–±–∏–ª–æ–≤")
            switch_button102 = types.InlineKeyboardButton(text='–í–µ—Ä–Ω—É—Ç—å –¥–µ–±–∏–ª–æ–≤ üôÇ', switch_inline_query_current_chat = "–í–µ—Ä–Ω—É—Ç—å –¥–µ–±–∏–ª–æ–≤")
            if bolnitsa > 0:
                bot.send_message(message.chat.id, '–¢—ã –≤ –±–æ–ª—å–Ω–∏—Ü–µ –¥–µ–±–∏–ª')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            if event > 0:
                bot.send_message(message.chat.id, '–¢—ã –≥—É–ª—è–µ—à—å –µ–±–∞–Ω–∞—Ç')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            if baza == 0:
                text = '–í–∞—É, –¥–∞ —ç—Ç–æ –∂–µ —Ç–≤–æ—è –±–∞–∑–∞. –í —ç—Ç–æ–º –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ–º –º–µ—Å—Ç–µ —Ç—ã –∂–∏–≤—ë—à—å –≤–º–µ—Å—Ç–µ' + gtxt + '\n\n–ù–∞–∑–≤–∞–Ω–∏–µ:  –ù–µ–º–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä—å–µ—Ä–∞ üè†\n–£–ª—É—á—à–µ–Ω–∏–µ:  +2 üíû\nC—Ç–æ–∏–º–æ—Å—Ç—å:  10 –Ω–µ–∫–æ–≥—Ä–∏–≤–µ–Ω üí∞\n\n<code>–£–ª—É—á—à–∏—Ç—å</code> - —É–ª—É—á—à–∏—Ç—å –Ω–µ–∫–æ–±–∞–∑—É'
                bot.send_photo(message.chat.id,photo = 'AgACAgIAAx0CZQN7rQACw35i9oRbhYo6RYn6QAnFSkmZVFkbwgAC27sxG81SuUtfLMdu2vIYnQEAAwIAA3MAAykE',caption = text,parse_mode='HTML',reply_markup=markup)
                return
            if baza == 1:
                text = '–í–∞—É, –¥–∞ —ç—Ç–æ –∂–µ —Ç–≤–æ—è –±–∞–∑–∞. –í —ç—Ç–æ–º –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ–º –º–µ—Å—Ç–µ —Ç—ã –∂–∏–≤—ë—à—å –≤–º–µ—Å—Ç–µ' + gtxt + '\n\n–ù–∞–∑–≤–∞–Ω–∏–µ:  –ù–µ–º–Ω–æ–≥–æ –∏—Å–∫—É—Å—Å—Ç–≤–∞ üè†\n–£–ª—É—á—à–µ–Ω–∏–µ:  –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç üíû –ø—Ä–∏ —Å–º–µ–Ω–µ –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫–∏\nC—Ç–æ–∏–º–æ—Å—Ç—å:  30 –Ω–µ–∫–æ–≥—Ä–∏–≤–µ–Ω üí∞\n\n<code>–£–ª—É—á—à–∏—Ç—å</code> - —É–ª—É—á—à–∏—Ç—å –Ω–µ–∫–æ–±–∞–∑—É'
                bot.send_photo(message.chat.id,photo = 'AgACAgIAAx0CZQN7rQACw4Bi9oRf18y-g2J1C7J4XNJH1z5oPQAC3LsxG81SuUuJeWcaJ79QMQEAAwIAA3MAAykE',caption = text,parse_mode='HTML',reply_markup=markup)
                return
            if baza == 2:
                text = '–í–∞—É, –¥–∞ —ç—Ç–æ –∂–µ —Ç–≤–æ—è –±–∞–∑–∞. –í —ç—Ç–æ–º –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ–º –º–µ—Å—Ç–µ —Ç—ã –∂–∏–≤—ë—à—å –≤–º–µ—Å—Ç–µ' + gtxt + '\n\n–ù–∞–∑–≤–∞–Ω–∏–µ:  –¢–µ–ª–µ–≤–∏–∑–æ—Ä —Å–æ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–º —Ñ–ª–µ–∫—Å–∞–∏—Ä–æ–º üè†\n–£–ª—É—á—à–µ–Ω–∏–µ:  +4 üíû\nC—Ç–æ–∏–º–æ—Å—Ç—å:  50 –Ω–µ–∫–æ–≥—Ä–∏–≤–µ–Ω üí∞\n\n<code>–£–ª—É—á—à–∏—Ç—å</code> - —É–ª—É—á—à–∏—Ç—å –Ω–µ–∫–æ–±–∞–∑—É'
                bot.send_photo(message.chat.id,photo = 'AgACAgIAAx0CZQN7rQACw4Ji9oRk24AR2_u0GfMgyJULde2OdwAC3bsxG81SuUv25H8Ql-DLeQEAAwIAA3MAAykE',caption = text,parse_mode='HTML',reply_markup=markup)
                return
            if baza == 3:
                if debil == 0:
                    p = 'AgACAgIAAx0CZQN7rQACw4Ri9oRpE899uYr2kOPZZo7UShnJrAAC3rsxG81SuUupIFHivmnf4gEAAwIAA3MAAykE'
                    markup.add(switch_button101)
                else:
                    p = 'AgACAgIAAx0CZQN7rQACw7xi9q3o6HZ5SRsY0COlOZBKM4MeeAAC37sxG81SuUujfptgGa8ytAEAAwIAA3MAAykE'
                    markup.add(switch_button102)
                text = '–í–∞—É, –¥–∞ —ç—Ç–æ –∂–µ —Ç–≤–æ—è –±–∞–∑–∞. –í —ç—Ç–æ–º –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ–º –º–µ—Å—Ç–µ —Ç—ã –∂–∏–≤—ë—à—å –≤–º–µ—Å—Ç–µ' + gtxt + '\n\n–ù–∞–∑–≤–∞–Ω–∏–µ:  –°—Ç–æ–ª —Å –±—É—Ö–ª–æ–º üè†\n–£–ª—É—á—à–µ–Ω–∏–µ:  –°–æ–±—ã—Ç–∏–µ —Å –ö–∞–ø–∏—Ç–∞–Ω–æ–º –ú–æ—Ä–≥–∞–Ω–æ–º –≤—Å–µ–≥–¥–∞ –¥–∞—ë—Ç ‚ô•Ô∏è\nC—Ç–æ–∏–º–æ—Å—Ç—å:  70 –Ω–µ–∫–æ–≥—Ä–∏–≤–µ–Ω üí∞\n\n<code>–£–ª—É—á—à–∏—Ç—å</code> - —É–ª—É—á—à–∏—Ç—å –Ω–µ–∫–æ–±–∞–∑—É'
                bot.send_photo(message.chat.id,photo = p,caption = text,parse_mode='HTML',reply_markup=markup)
                return
            if baza == 4:
                if debil == 0:
                    p = 'AgACAgIAAx0CZQN7rQACw4hi9oR_awKmG_JB2hPf9UiwDqGabAAC4LsxG81SuUvAsNx2DcKWAgEAAwIAA3MAAykE'
                    markup.add(switch_button101)
                else:
                    p = 'AgACAgIAAx0CZQN7rQACw75i9q3viIx8HSPpBs9hC1w3VcZ1ewACfLwxG81SuUupdL90K43F7wEAAwIAA3MAAykE'
                    markup.add(switch_button102)
                text = '–í–∞—É, –¥–∞ —ç—Ç–æ –∂–µ —Ç–≤–æ—è –±–∞–∑–∞. –í —ç—Ç–æ–º –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ–º –º–µ—Å—Ç–µ —Ç—ã –∂–∏–≤—ë—à—å –≤–º–µ—Å—Ç–µ' + gtxt + '\n\n–ù–∞–∑–≤–∞–Ω–∏–µ:  –í—Å—Ä–∞—Ç—ã–π —Ç—É–∞–ª–µ—Ç üè†\n–£–ª—É—á—à–µ–Ω–∏–µ:  +6 üíû \nC—Ç–æ–∏–º–æ—Å—Ç—å:  90 –Ω–µ–∫–æ–≥—Ä–∏–≤–µ–Ω üí∞\n\n<code>–£–ª—É—á—à–∏—Ç—å</code> - —É–ª—É—á—à–∏—Ç—å –Ω–µ–∫–æ–±–∞–∑—É'
                bot.send_photo(message.chat.id,photo = p,caption = text,parse_mode='HTML',reply_markup=markup)
                return
            if baza == 5:
                if debil == 0:
                    p = 'AgACAgIAAx0CZQN7rQACw4pi9oSLHbFGO7zGYnu85rvB4A1JRwAC4bsxG81SuUuML50JHeB4SwEAAwIAA3MAAykE'
                    markup.add(switch_button101)
                else:
                    p = 'AgACAgIAAx0CZQN7rQACw8Bi9q4Vk-OxDDm1FgTcCiHJnGysBwACfbwxG81SuUtb30KJ0lXEhwEAAwIAA3MAAykE'
                    markup.add(switch_button102)
                text = '–í–∞—É, –¥–∞ —ç—Ç–æ –∂–µ —Ç–≤–æ—è –±–∞–∑–∞. –í —ç—Ç–æ–º –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ–º –º–µ—Å—Ç–µ —Ç—ã –∂–∏–≤—ë—à—å –≤–º–µ—Å—Ç–µ' + gtxt + '\n\n–ù–∞–∑–≤–∞–Ω–∏–µ:  –ù–µ –º–µ–Ω–µ–µ –≤—Å—Ä–∞—Ç–∞—è –∫—É—Ö–Ω—è üè†\n–£–ª—É—á—à–µ–Ω–∏–µ:  +1 –∫ –ø–æ–ª—É—á–∞–µ–º–æ–º—É üç´\nC—Ç–æ–∏–º–æ—Å—Ç—å:  120 –Ω–µ–∫–æ–≥—Ä–∏–≤–µ–Ω üí∞\n\n<code>–£–ª—É—á—à–∏—Ç—å</code> - —É–ª—É—á—à–∏—Ç—å –Ω–µ–∫–æ–±–∞–∑—É'
                bot.send_photo(message.chat.id,photo = p,caption = text,parse_mode='HTML',reply_markup=markup)
                return
            if baza == 6:
                text = '–í–∞—É, –¥–∞ —ç—Ç–æ –∂–µ —Ç–≤–æ—è –±–∞–∑–∞. –í —ç—Ç–æ–º –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ–º –º–µ—Å—Ç–µ —Ç—ã –∂–∏–≤—ë—à—å –≤–º–µ—Å—Ç–µ' + gtxt + '\n\nC—Ç–æ–∏–º–æ—Å—Ç—å:  20 –Ω–µ–∫–æ–≥—Ä–∏–≤–µ–Ω üí∞\n<code>–ü–æ–∫—Ä–∞—Å–∏—Ç—å –±–∞–∑—É</code> - –∏–∑–º–µ–Ω–∏—Ç—å —Ü–≤–µ—Ç —Å—Ç–µ–Ω, –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–∏–ª–æ–∂–∏—Ç—å —Ñ–æ—Ç–æ'
                mark = types.InlineKeyboardMarkup()
                switch_button2 = types.InlineKeyboardButton(text='–ü–æ–∫—Ä–∞—Å–∏—Ç—å üåà', switch_inline_query_current_chat = "–ü–æ–∫—Ä–∞—Å–∏—Ç—å –±–∞–∑—É")
                mark.add(switch_button2)
                if debil == 0:
                    p = photo_base
                    mark.add(switch_button101)
                else:
                    p = photo_debil
                    mark.add(switch_button102)
                bot.send_photo(message.chat.id,photo = p,caption = text,parse_mode='HTML',reply_markup=mark)
                return
        elif message.text == '—É–ª—É—á—à–∏—Ç—å' or message.text == '–£–ª—É—á—à–∏—Ç—å' or message.text == '@NekoslaviaBot –£–ª—É—á—à–∏—Ç—å' or message.text == '@NekoslaviaBot —É–ª—É—á—à–∏—Ç—å':
            data = cursor.execute('SELECT * FROM neko WHERE id = '+str(message.from_user.id))
            data = data.fetchone()
            if data is None:
                bot.send_message(message.chat.id,'–¢—ã –Ω–µ –æ–¥–∏–Ω –∏–∑ –Ω–∞—Å, –Ω–∞–ø–∏—à–∏ /start —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –Ω–µ–∫–æ—Å–ª–∞–≤–æ–º')
                return
            baza = data[8]
            event = data[10]
            rep = data[2]
            coins = data[11]
            bolnitsa = int(data[6] - time.time())
            gender = data[33]
            nam = str(data[1]).rstrip()
            if bolnitsa > 0:
                bot.send_message(message.chat.id, '–¢—ã –≤ –±–æ–ª—å–Ω–∏—Ü–µ –¥–µ–±–∏–ª')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            if event > 0:
                bot.send_message(message.chat.id, '–¢—ã –≥—É–ª—è–µ—à—å –µ–±–∞–Ω–∞—Ç')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            if baza == 0:
                cost = 10
            if baza == 1:
                cost = 30
            if baza == 2:
                cost = 50
            if baza == 3:
                cost = 70
            if baza == 4:
                cost = 90
            if baza == 5:
                cost = 120
            if baza == 6:
                bot.send_message(message.chat.id, '–£ —Ç–µ–±—è –±–∞–∑–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è –µ–±–∞–Ω–∞—Ç')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            if coins < cost:
                bot.send_message(message.chat.id, '–ê –¥–µ–Ω—å–≥–∏ –≥–¥–µ')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            text = nam + ' –Ω–µ –æ—á–µ–Ω—å –ø–æ–Ω–∏–º–∞–µ—Ç —á—Ç–æ —ç—Ç–æ –∏ –∑–∞—á–µ–º –æ–Ω–æ –Ω—É–∂–Ω–æ, –Ω–æ –µ–π –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å'
            if gender == 1:
                text = nam + ' –Ω–µ –æ—á–µ–Ω—å –ø–æ–Ω–∏–º–∞–µ—Ç —á—Ç–æ —ç—Ç–æ –∏ –∑–∞—á–µ–º –æ–Ω–æ –Ω—É–∂–Ω–æ, –Ω–æ –µ–º—É –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å'
            bot.send_message(message.chat.id, text)
            bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLYxiwIeP83zV6whMtLqyTygKqGALagAChBAAAh_9WEh3vpYnO2kD1ikE')
            coins = coins - cost
            baza = baza + 1
            if baza == 1:
                rep = rep + 2
            if baza == 3:
                rep = rep + 4
            if baza == 5:
                rep = rep + 6
            cursor.execute("UPDATE neko SET coins = "+ str(coins) +" WHERE id = "+str(message.from_user.id))
            cursor.execute("UPDATE neko SET base = "+ str(baza) +" WHERE id = "+str(message.from_user.id))
            cursor.execute("UPDATE neko SET rep = "+ str(rep) +" WHERE id = "+str(message.from_user.id))
        elif '—É–π—Ç–∏' == message.text or '–£–π—Ç–∏' == message.text or message.text == '@NekoslaviaBot –£–π—Ç–∏' or message.text == '@NekoslaviaBot —É–π—Ç–∏':
            data = cursor.execute('SELECT * FROM neko WHERE id = '+str(message.from_user.id))
            data = data.fetchone()
            if data is None:
                bot.send_message(message.chat.id,'–¢—ã –Ω–µ –æ–¥–∏–Ω –∏–∑ –Ω–∞—Å, –Ω–∞–ø–∏—à–∏ /start —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –Ω–µ–∫–æ—Å–ª–∞–≤–æ–º')
                return
            nam = str(data[1]).rstrip()
            rep = data[2]
            event = data[10]
            bolnitsa = int(data[6] - time.time())

            if event != 2 and event != 3 and event != 8:
                bot.send_message(message.chat.id, '–•—É–π–Ω—é —Å–º–æ—Ä–æ–∑–∏–ª')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            if event == 2:
                text = "–í—ã —É—à–ª–∏, —Ç–∞–∫ –∏ –Ω–µ —É–∑–Ω–∞–≤ —á—Ç–æ –Ω–∞—Ö–æ–¥–∏–ª–æ—Å—å –≤–Ω—É—Ç—Ä–∏ –∑–∞–≥–∞–¥–æ—á–Ω–æ–π –∫–æ—Ä–æ–±–∫–∏. –ú–æ–≥—É —Å–∫–∞–∑–∞—Ç—å —á—Ç–æ —ç—Ç–æ –±—ã–ª–æ —Ä–∞–∑—É–º–Ω—ã–º —Ä–µ—à–µ–Ω–∏–µ–º"
                bot.send_message(message.chat.id, text)
                cursor.execute('UPDATE neko SET event = 0 WHERE id = ' + str(message.from_user.id))
            if event == 3:
                text = '<b>"Sorry, nekoslav, I cant give credit! Come back when youre a little...mmmm...richer"</b> - –ø–æ—Å–ª–µ —ç—Ç–∏—Ö —Å–ª–æ–≤ –æ–∫–æ—à–∫–æ –ª–∞—Ä—å–∫–∞ –∑–∞–∫—Ä—ã–ª–æ—Å—å. –ú–¥–∞ —É–∂, –≤–∏–¥–∏–º–æ, —Ç—ã —Å–∏–ª—å–Ω–æ —Ä–∞–∑–æ—á–∞—Ä–æ–≤–∞–ª –ø—Ä–æ–¥–∞–≤—â–∏—Ü—É'
                bot.send_message(message.chat.id,text,parse_mode='HTML')
                cursor.execute('UPDATE neko SET event = 0 WHERE id = ' + str(message.from_user.id))
            if event == 8:
                text = '–í—ã –≤–µ–∂–ª–∏–≤–æ –æ—Ç–∫–∞–∑–∞–ª–∏—Å—å, –∏ –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫–∞ —Å –Ω–µ–∫–æ—Ç–æ—Ä–æ–π –≥—Ä—É—Å—Ç—å—é –º–æ–ª—á–∞ –≤–µ—Ä–Ω—É–ª–∞—Å—å –∫ —Å–≤–æ–µ–º—É –∑–∞–Ω—è—Ç–∏—é. –í–∏–¥–∏–º–æ, –µ–π –Ω–µ –≤–ø–µ—Ä–≤–æ–π —Å–ª—ã—à–∞—Ç—å –ø–æ–¥–æ–±–Ω—ã–µ —Å–ª–æ–≤–∞'
                bot.send_message(message.chat.id,text,parse_mode='HTML')
                cursor.execute('UPDATE neko SET event = 0 WHERE id = ' + str(message.from_user.id))
        elif '–∫—É–ø–∏—Ç—å' == message.text or '–ö—É–ø–∏—Ç—å' == message.text or message.text == '@NekoslaviaBot –ö—É–ø–∏—Ç—å' or message.text == '@NekoslaviaBot –∫—É–ø–∏—Ç—å':
            data = cursor.execute('SELECT * FROM neko WHERE id = '+str(message.from_user.id))
            data = data.fetchone()
            if data is None:
                bot.send_message(message.chat.id,'–¢—ã –Ω–µ –æ–¥–∏–Ω –∏–∑ –Ω–∞—Å, –Ω–∞–ø–∏—à–∏ /start —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –Ω–µ–∫–æ—Å–ª–∞–≤–æ–º')
                return
            nam = str(data[1]).rstrip()
            rep = data[2]
            event = data[10]
            bolnitsa = int(data[6] - time.time())
            coins = data[11]
            buff = data[12]
            photo = str(data[5]).rstrip()
            baza = data[8]
            monsters = data[20]
            skill1 = data[30]
            skill2 = data[31]
            gender = data[33]
            if event != 4 and event != 5 and event != 6 and event != 9 and event != 10:
                bot.send_message(message.chat.id, '–•—É–π–Ω—é —Å–º–æ—Ä–æ–∑–∏–ª')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            if event == 4:
                cost = 25
                if coins < cost:
                    bot.send_message(message.chat.id, '–ê –¥–µ–Ω—å–≥–∏ –≥–¥–µ')
                    bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                    return
                coins = coins - cost
                buff = buff + 4
                if baza >= 6:
                    buff = buff + 1
                text = '–ü–æ—Ç—Ä–∞—á–µ–Ω–Ω—ã—Ö –¥–µ–Ω–µ–≥ –Ω–µ–º–Ω–æ–≥–æ –∂–∞–ª—å, –Ω–æ ' + nam + ' –≤—ã–≥–ª—è–¥–∏—Ç —Å—á–∞—Å—Ç–ª–∏–≤–æ–π, –∞ —ç—Ç–æ –≥–ª–∞–≤–Ω–æ–µ, –Ω–µ —Ç–∞–∫ –ª–∏?'
                if gender == 1:
                    text = '–ü–æ—Ç—Ä–∞—á–µ–Ω–Ω—ã—Ö –¥–µ–Ω–µ–≥ –Ω–µ–º–Ω–æ–≥–æ –∂–∞–ª—å, –Ω–æ ' + nam + ' –≤—ã–≥–ª—è–¥–∏—Ç —Å—á–∞—Å—Ç–ª–∏–≤—ã–º, –∞ —ç—Ç–æ –≥–ª–∞–≤–Ω–æ–µ, –Ω–µ —Ç–∞–∫ –ª–∏?'
                bot.send_message(message.chat.id, text)
                cursor.execute('UPDATE neko SET event = 0 WHERE id = ' + str(message.from_user.id))
                cursor.execute('UPDATE neko SET buff = ' + str(buff) + ' WHERE id = ' + str(message.from_user.id))
                cursor.execute('UPDATE neko SET coins = ' + str(coins) + ' WHERE id = ' + str(message.from_user.id))
            if event == 5:
                cost = 30
                if coins < cost:
                    bot.send_message(message.chat.id, '–ê –¥–µ–Ω—å–≥–∏ –≥–¥–µ')
                    bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                    return
                coins = coins - cost
                text = '–í–∞–º –∫–æ–Ω–µ—á–Ω–æ —Ö–æ—Ç–µ–ª–æ—Å—å –≤—ã–ø–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –±–∞–Ω–æ–∫, –Ω–æ –∑–∞–ø—Ä–∞–≤–∏—Ç—å –Ω–µ–∫–æ–º–æ–±–∏–ª—å –≤–∞–∂–Ω–µ–µ. –ù–∞–¥–µ—é—Å—å, —Ç—ã –Ω–µ –∂–∞–ª–µ–µ—à—å –æ –ø–æ—Ç—Ä–∞—á–µ–Ω–Ω—ã—Ö –¥–µ–Ω—å–≥–∞—Ö'
                monsters = monsters + 1
                bot.send_message(message.chat.id, text)
                cursor.execute('UPDATE neko SET event = 0 WHERE id = ' + str(message.from_user.id))
                cursor.execute('UPDATE neko SET monsters = ' + str(monsters) + ' WHERE id = ' + str(message.from_user.id))
                cursor.execute('UPDATE neko SET coins = ' + str(coins) + ' WHERE id = ' + str(message.from_user.id))
            if event == 6:
                cost = 50
                if coins < cost:
                    bot.send_message(message.chat.id, '–ê –¥–µ–Ω—å–≥–∏ –≥–¥–µ')
                    bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                    return
                coins = coins - cost
                if gender == 0:
                    photka = random.choice(elite_photos)
                    while True:
                        if photo != photka:
                            break
                        else:
                            photka = random.choice(elite_photos)
                else:
                    photka = random.choice(trap_photos)
                    while True:
                        if photo != photka:
                            break
                        else:
                            photka = random.choice(trap_photos)
                keyboard = types.InlineKeyboardMarkup(row_width=3)
                callback_button1 = types.InlineKeyboardButton(text = '–í–∑—è—Ç—å ‚úÖ',callback_data = 'get ' + str(message.from_user.id) + ' ' + str(gender) + ' 0')
                keyboard.add(callback_button1)
                callback_button2 = types.InlineKeyboardButton(text = '–ù–µ –±—Ä–∞—Ç—å ‚ùå',callback_data = 'dont ' + str(message.from_user.id))
                keyboard.add(callback_button2)
                bot.send_photo(message.chat.id, photo=photka,reply_markup=keyboard)
                cursor.execute('UPDATE neko SET event = 0 WHERE id = ' + str(message.from_user.id))
                cursor.execute('UPDATE neko SET coins = ' + str(coins) + ' WHERE id = ' + str(message.from_user.id))
            if event == 9:
                cost = 3
                if buff < cost:
                    bot.send_message(message.chat.id, '–ê –≤–∏—Å–∫–∞—Å –≥–¥–µ')
                    bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                    return
                buff = buff - cost
                text = '<b>"–ù—è, —Å–ø–∞—Å–∏–±–æ"</b> - –ø–æ–±–ª–∞–≥–æ–¥–∞—Ä–∏–ª–∞ –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫–∞ –∏ –ø–æ—Å–ø–µ—à–∏–ª–∞ —Å–∫—Ä—ã—Ç—å—Å—è, –±—É–¥—Ç–æ –±–æ—è—Å—å, —á—Ç–æ —Ç—ã –ø–µ—Ä–µ–¥—É–º–∞–µ—à—å'
                bot.send_message(message.chat.id,text,parse_mode='HTML')

                a = random.choice([True,False])
                if a:
                    skill = random.randint(1,10)
                else:
                    skill = random.randint(101,110)

                while skill == skill1 or skill == skill2:
                    a = random.choice([True,False])
                    if a:
                        skill = random.randint(1,10)
                    else:
                        skill = random.randint(101,110)

                if skill1 > 100:
                    sktxt1 = active_skill_list[skill1-100]
                else:
                    sktxt1 = passive_skill_list[skill1]
                if skill2 > 100:
                    sktxt2 = active_skill_list[skill2-100]
                else:
                    sktxt2 = passive_skill_list[skill2]

                keyboard = types.InlineKeyboardMarkup(row_width=3)
                callback_button1 = types.InlineKeyboardButton(text = '–ó–∞–º–µ–Ω–∏—Ç—å –Ω–∞–≤—ã–∫ 1Ô∏è‚É£',callback_data = 'skill ' + str(message.from_user.id) + ' 1 ' + str(skill))
                callback_button2 = types.InlineKeyboardButton(text = '–ó–∞–º–µ–Ω–∏—Ç—å –Ω–∞–≤—ã–∫ 2Ô∏è‚É£',callback_data = 'skill ' + str(message.from_user.id) + ' 2 ' + str(skill))
                keyboard.add(callback_button1)
                keyboard.add(callback_button2)
                callback_button3 = types.InlineKeyboardButton(text = '–ù–µ –º–µ–Ω—è—Ç—å ‚ùå',callback_data = 'dont ' + str(message.from_user.id))
                keyboard.add(callback_button3)
                text = nam + ', –≤—ã–ø–∏–≤ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –±–∞–Ω–∫–∏, –ø–æ—á—É—Å—Ç–≤–æ–≤–∞–ª–∞ –≤ —Å–µ–±–µ —Å–∏–ª—É, —Å–ø–æ—Å–æ–±–Ω—É—é —Å–≤–µ—Ä–Ω—É—Ç—å –≥–æ—Ä—ã. –£ –Ω–µ—ë –ø–æ—è–≤–∏–ª–æ—Å—å –Ω–æ–≤–æ–µ —É–º–µ–Ω–∏–µ, –≤—ã–±–µ—Ä–∏ –∫–∞–∫–æ–π –Ω–∞–≤—ã–∫ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Å–ª—É—á–∞–π–Ω—ã–π:\n\n' + sktxt1 + '\n' + sktxt2
                if gender == 1:
                    text = nam + ', –≤—ã–ø–∏–≤ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –±–∞–Ω–∫–∏, –ø–æ—á—É—Å—Ç–≤–æ–≤–∞–ª –≤ —Å–µ–±–µ —Å–∏–ª—É, —Å–ø–æ—Å–æ–±–Ω—É—é —Å–≤–µ—Ä–Ω—É—Ç—å –≥–æ—Ä—ã. –£ –Ω–µ–≥–æ –ø–æ—è–≤–∏–ª–æ—Å—å –Ω–æ–≤–æ–µ —É–º–µ–Ω–∏–µ, –≤—ã–±–µ—Ä–∏ –∫–∞–∫–æ–π –Ω–∞–≤—ã–∫ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Å–ª—É—á–∞–π–Ω—ã–π:\n\n' + sktxt1 + '\n' + sktxt2
                bot.send_message(message.chat.id,text,parse_mode='HTML',reply_markup=keyboard)

                cursor.execute('UPDATE neko SET event = 0, buff = ' + str(buff) + ' WHERE id = ' + str(message.from_user.id))
            if event == 10:
                cost = 20
                if buff < cost:
                    bot.send_message(message.chat.id, '–ê –≤–∏—Å–∫–∞—Å –≥–¥–µ')
                    bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                    return
                buff = buff - cost
                text = '<b>"–ù—è, —Å–ø–∞—Å–∏–±–æ"</b> - –ø–æ–±–ª–∞–≥–æ–¥–∞—Ä–∏–ª–∞ –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫–∞ –∏ –ø–æ—Å–ø–µ—à–∏–ª–∞ —Å–∫—Ä—ã—Ç—å—Å—è, –±—É–¥—Ç–æ –±–æ—è—Å—å, —á—Ç–æ —Ç—ã –ø–µ—Ä–µ–¥—É–º–∞–µ—à—å'
                bot.send_message(message.chat.id,text,parse_mode='HTML')
                text = nam + '—á—É–≤—Å—Ç–≤—É–µ—Ç —Å–µ–±—è —Å—Ç—Ä–∞–Ω–Ω–æ...'
                bot.send_message(message.chat.id,text,parse_mode='HTML')
                if gender == 0:
                    photka = random.choice(trap_photos)
                    while True:
                        if photo != photka:
                            break
                        else:
                            photka = random.choice(trap_photos)
                    gender = 1
                else:
                    photka = random.choice(photos)
                    while True:
                        if photo != photka:
                            break
                        else:
                            photka = random.choice(photos)
                    gender = 0
                cursor.execute("UPDATE neko SET new_phot = 'None', gender = " + str(gender) + ", gifka = 'Nothing', licension = 0, photo = '"+photka+"' WHERE id = "+ str(message.from_user.id))
                cursor.execute('UPDATE neko SET event = 0, buff = ' + str(buff) + ' WHERE id = ' + str(message.from_user.id))
        #elif '–û—Ç–∫—Ä—ã—Ç—å –ø–æ—Å—ã–ª–∫—É' == message.text or '–æ—Ç–∫—Ä—ã—Ç—å –ø–æ—Å—ã–ª–∫—É' == message.text or message.text == '@NekoslaviaBot –û—Ç–∫—Ä—ã—Ç—å –ø–æ—Å—ã–ª–∫—É' or message.text == '@NekoslaviaBot –æ—Ç–∫—Ä—ã—Ç—å –ø–æ—Å—ã–ª–∫—É':
        #    data = cursor.execute('SELECT * FROM neko WHERE id = '+str(message.from_user.id))
        #    data = data.fetchone()
        #    if data is None:
        #        bot.send_message(message.chat.id,'–¢—ã –Ω–µ –æ–¥–∏–Ω –∏–∑ –Ω–∞—Å, –Ω–∞–ø–∏—à–∏ /start —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –Ω–µ–∫–æ—Å–ª–∞–≤–æ–º')
        #        return
        #    nam = str(data[1]).rstrip()
        #    rep = data[2]
        #    event = data[10]
        #    bolnitsa = int(data[6] - time.time())
         #   boxes = data[34]
        #    gender = data[33]
        #    photo = str(data[5]).rstrip()
       #     item1 = data[36]
        #    item2 = data[37]
         #   if event > 0:
        #        bot.send_message(message.chat.id, '–¢—ã –≥—É–ª—è–µ—à—å –¥–µ–±–∏–ª')
        #        bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
        #        return
        #    if bolnitsa > 0:
        #        bot.send_message(message.chat.id, '–¢—ã –≤ –±–æ–ª—å–Ω–∏—Ü–µ –¥–µ–±–∏–ª')
        #        bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
        #        return
        #    if boxes < 1:
        #        bot.send_message(message.chat.id, '–û—Ç–∫—Ä—ã–≤–∞—Ç—å –Ω–µ—á–µ–≥–æ')
        #        bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
        #        return
        #    a = random.randint(1,2)
        #    if a == 1:
         #       photka = random.choice(arc_photos)
        #        while True:
        #            if photo != photka:
        #                break
        #            else:
         #               photka = random.choice(arc_photos)
        #        keyboard = types.InlineKeyboardMarkup(row_width=3)
        #       callback_button1 = types.InlineKeyboardButton(text = '–í–∑—è—Ç—å ‚úÖ',callback_data = 'get ' + str(message.from_user.id) + ' 0 ')
         #       keyboard.add(callback_button1)
        #        callback_button2 = types.InlineKeyboardButton(text = '–ù–µ –±—Ä–∞—Ç—å ‚ùå',callback_data = 'dont ' + str(message.from_user.id))
        #        keyboard.add(callback_button2)
        #        bot.send_photo(message.chat.id, photo=photka,reply_markup=keyboard)
         #   else:
        #        item = random.randint(1,18)
        #        while item == item1 or item == item2:
        #            item = random.randint(1,18)
        #        keyboard = types.InlineKeyboardMarkup(row_width=3)
         #       callback_button1 = types.InlineKeyboardButton(text = '–ó–∞–º–µ–Ω–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç 1Ô∏è‚É£',callback_data = 'item ' + str(message.from_user.id) + ' 1 ' + str(item))
         #       callback_button2 = types.InlineKeyboardButton(text = '–ó–∞–º–µ–Ω–∏—Ç—å –ø—Ä–µ–¥–º–µ—Ç 2Ô∏è‚É£',callback_data = 'item ' + str(message.from_user.id) + ' 2 ' + str(item))
        #        keyboard.add(callback_button1)
        #        keyboard.add(callback_button2)
        #        callback_button3 = types.InlineKeyboardButton(text = '–î–∞ –Ω—É –Ω–∞—Ö—É–π ‚ùå',callback_data = 'dont ' + str(message.from_user.id))
        #        keyboard.add(callback_button3)
        #        f = open("bot/items/" + str(item) + ".png","rb")
        #        bot.send_photo(message.chat.id,photo = f,reply_markup=keyboard)
        #    boxes = boxes - 1
        #    cursor.execute('UPDATE neko SET boxes = ' + str(boxes) + ' WHERE id = ' + str(message.from_user.id))



        elif '–æ—Ç–∫—Ä—ã—Ç—å' == message.text or '–û—Ç–∫—Ä—ã—Ç—å' == message.text or message.text == '@NekoslaviaBot –û—Ç–∫—Ä—ã—Ç—å' or message.text == '@NekoslaviaBot –æ—Ç–∫—Ä—ã—Ç—å':
            data = cursor.execute('SELECT * FROM neko WHERE id = '+str(message.from_user.id))
            data = data.fetchone()
            if data is None:
                bot.send_message(message.chat.id,'–¢—ã –Ω–µ –æ–¥–∏–Ω –∏–∑ –Ω–∞—Å, –Ω–∞–ø–∏—à–∏ /start —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –Ω–µ–∫–æ—Å–ª–∞–≤–æ–º')
                return
            nam = str(data[1]).rstrip()
            rep = data[2]
            event = data[10]
            bolnitsa = int(data[6] - time.time())
            buff = data[12]
            baza = data[8]
            gender = data[33]
            if event != 2:
                bot.send_message(message.chat.id, '–•—É–π–Ω—é —Å–º–æ—Ä–æ–∑–∏–ª')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            d = random.randint(1,2)
            if d == 1:
                text = '–í–Ω—É—Ç—Ä–∏ –æ–∫–∞–∑–∞–ª–∞—Å—å –±–µ–∑–¥–æ–º–Ω–∞—è –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫–∞. –ö–∞–∫ —Ç–æ–ª—å–∫–æ —Ç—ã –æ—Ç–∫—Ä—ã–ª –∫–æ—Ä–æ–±–∫—É, –æ–Ω–∞ –º–æ–º–µ–Ω—Ç–∞–ª—å–Ω–æ –Ω–∞–±—Ä–æ—Å–∏–ª–∞—Å—å –Ω–∞ —Ç–≤–æ—é, –∏–∑–¥–∞–≤–∞—è —à–∏–ø—è—â–∏–µ –∑–≤—É–∫–∏. –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —É—à–ª–æ –≤—Ä–µ–º—è —á—Ç–æ–±—ã –∏—Ö —Ä–∞–∑–Ω—è—Ç—å. ' + nam + ' –æ–±–∏–¥–µ–ª–∞—Å—å –Ω–∞ —Ç–µ–±—è –∑–∞ —ç—Ç–æ üíî'
                if gender == 1:
                    text = '–í–Ω—É—Ç—Ä–∏ –æ–∫–∞–∑–∞–ª–∞—Å—å –±–µ–∑–¥–æ–º–Ω–∞—è –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫–∞. –ö–∞–∫ —Ç–æ–ª—å–∫–æ —Ç—ã –æ—Ç–∫—Ä—ã–ª –∫–æ—Ä–æ–±–∫—É, –æ–Ω–∞ –º–æ–º–µ–Ω—Ç–∞–ª—å–Ω–æ –Ω–∞–±—Ä–æ—Å–∏–ª–∞—Å—å –Ω–∞ —Ç–≤–æ–µ–≥–æ –Ω–µ–∫–æ–º–∞–ª—å—á–∏–∫–∞, –∏–∑–¥–∞–≤–∞—è —à–∏–ø—è—â–∏–µ –∑–≤—É–∫–∏. –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —É—à–ª–æ –≤—Ä–µ–º—è —á—Ç–æ–±—ã –∏—Ö —Ä–∞–∑–Ω—è—Ç—å. ' + nam + ' –æ–±–∏–¥–µ–ª—Å—è –Ω–∞ —Ç–µ–±—è –∑–∞ —ç—Ç–æ üíî'
                rep = rep - 2
                cursor.execute("UPDATE neko SET rep = " + str(rep) + " WHERE id = "+str(message.from_user.id))
                bot.send_photo(message.chat.id, photo = 'AgACAgIAAx0CZQN7rQACohNixNKGV5unSWPowKZ7Go5lj9An_wACfr4xGzBhKEochCEOh_LDpwEAAwIAA3MAAykE',caption = text)
            if d == 2:
                text = '–í–∞–º –ø–æ–≤–µ–∑–ª–æ, –∫–æ—Ä–æ–±–∫–∞ –æ–∫–∞–∑–∞–ª–∞—Å—å –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ –≤–∏—Å–∫–∞—Å–æ–º üç´! –≠—Ç–æ–≥–æ –¥–æ–ª–∂–Ω–æ —Ö–≤–∞—Ç–∏—Ç—å –Ω–∞ —Ç—Ä–∏ —Ä–∞–∑–∞, –µ—Å–ª–∏ –Ω–µ –±–æ–ª—å—à–µ'
                buff = buff + 3
                if baza >= 6:
                    buff = buff + 1
                    text = '–í–∞–º –ø–æ–≤–µ–∑–ª–æ, –∫–æ—Ä–æ–±–∫–∞ –æ–∫–∞–∑–∞–ª–∞—Å—å –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ –≤–∏—Å–∫–∞—Å–æ–º üç´! –≠—Ç–æ–≥–æ –¥–æ–ª–∂–Ω–æ —Ö–≤–∞—Ç–∏—Ç—å –Ω–∞ —á–µ—Ç—ã—Ä–µ —Ä–∞–∑–∞, –µ—Å–ª–∏ –Ω–µ –±–æ–ª—å—à–µ'
                cursor.execute("UPDATE neko SET buff = " + str(buff) + " WHERE id = "+str(message.from_user.id))
                bot.send_photo(message.chat.id, photo = 'AgACAgIAAx0CZQN7rQACoKJiweU_aU7g1olT0b065v9A9dDVXwACqLsxGxyOEUodvpN4YkjBswEAAwIAA3MAAykE',caption = text)
            cursor.execute("UPDATE neko SET event = 0 WHERE id = "+str(message.from_user.id))
        elif '–≤–∏—Å–∫–∞—Å' == message.text or '–í–∏—Å–∫–∞—Å' == message.text or message.text == '@NekoslaviaBot –≤–∏—Å–∫–∞—Å' or message.text == '@NekoslaviaBot –í–∏—Å–∫–∞—Å':
            data = cursor.execute('SELECT * FROM neko WHERE id = '+str(message.from_user.id))
            data = data.fetchone()
            if data is None:
                bot.send_message(message.chat.id,'–¢—ã –Ω–µ –æ–¥–∏–Ω –∏–∑ –Ω–∞—Å, –Ω–∞–ø–∏—à–∏ /start —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –Ω–µ–∫–æ—Å–ª–∞–≤–æ–º')
                return
            nam = str(data[1]).rstrip()
            rep = data[2]
            event = data[10]
            bolnitsa = int(data[6] - time.time())
            buff = data[12]
            baza = data[8]
            automate = data[25]
            gender = data[33]
            if event != 3:
                if automate == 1:
                    automate = 0
                    text = '–¢—ã –±–æ–ª—å—à–µ –Ω–µ –∫–æ—Ä–º–∏—à—å —Å–≤–æ—é –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫—É –≤–∏—Å–∫–∞—Å–æ–º üç´, –∂–µ—Å—Ç–æ–∫–æ'
                    if gender == 1:
                        text = '–¢—ã –±–æ–ª—å—à–µ –Ω–µ –∫–æ—Ä–º–∏—à—å —Å–≤–æ–µ–≥–æ –Ω–µ–∫–æ–º–∞–ª—å—á–∏–∫–∞ –≤–∏—Å–∫–∞—Å–æ–º üç´, –∂–µ—Å—Ç–æ–∫–æ'
                    bot.send_message(message.chat.id, text)
                    bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEGHaljTQMPtoJuC9PyYV2e5g0lGX77-wACIA8AAg7tWEjVrCd9QwTr1ioE')
                else:
                    automate = 1
                    bot.send_message(message.chat.id, '–£—Ä–∞, ' + nam + ' —Å–Ω–æ–≤–∞ –º–æ–∂–µ—Ç –µ—Å—Ç—å —Å–≤–æ–π –ª—é–±–∏–º—ã–π –≤–∏—Å–∫–∞—Å üç´')
                    bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEGHbFjTQM_ocljKc2-O9GAUVL7Nb60TgACSQ8AAt46WUgVZwAB2AjTbT8qBA')
                cursor.execute("UPDATE neko SET automate = " + str(automate) + " WHERE id = "+str(message.from_user.id))
                return
            d = 1
            markup = types.InlineKeyboardMarkup()
            switch_button1 = types.InlineKeyboardButton(text='–ö—É–ø–∏—Ç—å üí∏', switch_inline_query_current_chat = "–ö—É–ø–∏—Ç—å")
            switch_button2 = types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥ ‚ùå', switch_inline_query_current_chat = "–ù–∞–∑–∞–¥")
            markup.add(switch_button1,switch_button2)
            if d == 1:
                cursor.execute('UPDATE neko SET event = 4 WHERE id = ' + str(message.from_user.id))
                text = '–î–∞ —ç—Ç–æ –∂–µ —Ü–µ–ª—ã–π –º–µ—à–æ–∫ –≤–∏—Å–∫–∞—Å–∞ üç´! ' + nam + ' –æ–±–ª–∏–∑—ã–≤–∞–µ—Ç—Å—è —Å–º–æ—Ç—Ä—è –Ω–∞ –Ω–µ–≥–æ. –≠—Ç–æ–≥–æ —Ö–≤–∞—Ç–∏—Ç —Ä–∞–∑–∞ –Ω–∞ —á–µ—Ç—ã—Ä–µ —Ç–æ—á–Ω–æ\n\n–°—Ç–æ–∏–º–æ—Å—Ç—å:  25 –Ω–µ–∫–æ–≥—Ä–∏–≤–µ–Ω üí∞\n\n<code>–ö—É–ø–∏—Ç—å</code> - –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å –¥–µ–Ω—å–≥–∏\n\n<code>–ù–∞–∑–∞–¥</code> - –ø—Ä–∏—Å–º–æ—Ç—Ä–µ—Ç—å—Å—è –∫ –¥—Ä—É–≥–∏–º —Ç–æ–≤–∞—Ä–∞–º'
                if baza >= 6:
                    text = '–î–∞ —ç—Ç–æ –∂–µ —Ü–µ–ª—ã–π –º–µ—à–æ–∫ –≤–∏—Å–∫–∞—Å–∞ üç´! ' + nam + ' –æ–±–ª–∏–∑—ã–≤–∞–µ—Ç—Å—è —Å–º–æ—Ç—Ä—è –Ω–∞ –Ω–µ–≥–æ. –≠—Ç–æ–≥–æ —Ö–≤–∞—Ç–∏—Ç —Ä–∞–∑ –Ω–∞ –ø—è—Ç—å —Ç–æ—á–Ω–æ\n\n–°—Ç–æ–∏–º–æ—Å—Ç—å:  25 –Ω–µ–∫–æ–≥—Ä–∏–≤–µ–Ω üí∞\n\n<code>–ö—É–ø–∏—Ç—å</code> - –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å –¥–µ–Ω—å–≥–∏\n\n<code>–ù–∞–∑–∞–¥</code> - –ø—Ä–∏—Å–º–æ—Ç—Ä–µ—Ç—å—Å—è –∫ –¥—Ä—É–≥–∏–º —Ç–æ–≤–∞—Ä–∞–º'
                bot.send_photo(message.chat.id,photo = 'AgACAgIAAx0CZQN7rQACoiNixPAzHZnqNOrRhTGCLWbDzhdI8QAChr4xGzBhKErbwYUmB-YY7gEAAwIAA3MAAykE',caption = text,parse_mode='HTML',reply_markup=markup)
        elif '–º–æ–Ω—Å—Ç—Ä' == message.text or '–ú–æ–Ω—Å—Ç—Ä' == message.text or message.text == '@NekoslaviaBot –ú–æ–Ω—Å—Ç—Ä' or message.text == '@NekoslaviaBot –º–æ–Ω—Å—Ç—Ä':
            data = cursor.execute('SELECT * FROM neko WHERE id = '+str(message.from_user.id))
            data = data.fetchone()
            if data is None:
                bot.send_message(message.chat.id,'–¢—ã –Ω–µ –æ–¥–∏–Ω –∏–∑ –Ω–∞—Å, –Ω–∞–ø–∏—à–∏ /start —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –Ω–µ–∫–æ—Å–ª–∞–≤–æ–º')
                return
            nam = str(data[1]).rstrip()
            rep = data[2]
            event = data[10]
            bolnitsa = int(data[6] - time.time())
            buff = data[12]
            gender = data[33]
            if event != 3:
                bot.send_message(message.chat.id, '–•—É–π–Ω—é —Å–º–æ—Ä–æ–∑–∏–ª')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            d = 2
            markup = types.InlineKeyboardMarkup()
            switch_button1 = types.InlineKeyboardButton(text='–ö—É–ø–∏—Ç—å üí∏', switch_inline_query_current_chat = "–ö—É–ø–∏—Ç—å")
            switch_button2 = types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥ ‚ùå', switch_inline_query_current_chat = "–ù–∞–∑–∞–¥")
            markup.add(switch_button1,switch_button2)
            if d == 2:
                cursor.execute('UPDATE neko SET event = 5 WHERE id = ' + str(message.from_user.id))
                text = '–†–æ–∑–æ–≤—ã–µ –º–æ–Ω—Å—Ç—Ä—ã ‚ö°Ô∏è - –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–µ —Ç–æ–ø–ª–∏–≤–æ, –ø–æ–¥—Ö–æ–¥—è—â–µ–µ —Ç–≤–æ–µ–º—É –Ω–µ–∫–æ–º–æ–±–∏–ª—é üöò. –ù–∏—á–µ–≥–æ –Ω–µ –ø–æ–¥—É–º–∞–π, –ø–∏—Ç—å –∏—Ö —Ç–æ–∂–µ –Ω–∏–∫—Ç–æ –Ω–µ –∑–∞–ø—Ä–µ—â–∞–ª\n\n–°—Ç–æ–∏–º–æ—Å—Ç—å:  30 –Ω–µ–∫–æ–≥—Ä–∏–≤–µ–Ω üí∞\n\n<code>–ö—É–ø–∏—Ç—å</code> - –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å –¥–µ–Ω—å–≥–∏\n\n<code>–ù–∞–∑–∞–¥</code> - –ø—Ä–∏—Å–º–æ—Ç—Ä–µ—Ç—å—Å—è –∫ –¥—Ä—É–≥–∏–º —Ç–æ–≤–∞—Ä–∞–º'
                bot.send_photo(message.chat.id,photo = 'AgACAgIAAx0CZQN7rQACoiVixPeSb0E1O4DOFDnx_KZt2KHongACjr4xGzBhKEr2G-QRjbdbnQEAAwIAA3MAAykE',caption = text,parse_mode='HTML',reply_markup=markup)
        elif '–∞–¥—Ä–µ–Ω–∞–ª–∏–Ω' == message.text or '–ê–¥—Ä–µ–Ω–∞–ª–∏–Ω' == message.text or '–ê–î–†–ï–ù–ê–õ–ò–ù' == message.text or message.text == '@NekoslaviaBot –ê–¥—Ä–µ–Ω–∞–ª–∏–Ω' or message.text == '@NekoslaviaBot –∞–¥—Ä–µ–Ω–∞–ª–∏–Ω':
            data = cursor.execute('SELECT * FROM neko WHERE id = '+str(message.from_user.id))
            data = data.fetchone()
            if data is None:
                bot.send_message(message.chat.id,'–¢—ã –Ω–µ –æ–¥–∏–Ω –∏–∑ –Ω–∞—Å, –Ω–∞–ø–∏—à–∏ /start —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –Ω–µ–∫–æ—Å–ª–∞–≤–æ–º')
                return
            nam = str(data[1]).rstrip()
            rep = data[2]
            event = data[10]
            bolnitsa = int(data[6] - time.time())
            buff = data[12]
            gender = data[33]
            if event != 8:
                bot.send_message(message.chat.id, '–•—É–π–Ω—é —Å–º–æ—Ä–æ–∑–∏–ª')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            markup = types.InlineKeyboardMarkup()
            switch_button1 = types.InlineKeyboardButton(text='–ö—É–ø–∏—Ç—å üí∏', switch_inline_query_current_chat = "–ö—É–ø–∏—Ç—å")
            switch_button2 = types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥ ‚ùå', switch_inline_query_current_chat = "–ù–∞–∑–∞–¥")
            markup.add(switch_button1,switch_button2)
            cursor.execute('UPDATE neko SET event = 9 WHERE id = ' + str(message.from_user.id))
            text = '–ù–µ –º–æ–∂–µ—Ç –±—ã—Ç—å, —ç—Ç–æ —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ –Ω–æ–≤–∞—è –±–∞–Ω–∫–∞ –ê–î–†–ï–ù–ê–õ–ò–ù–ê! –í—ã–ø–∏–≤ –µ–≥–æ, ' + nam + ' –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ —Å–º–æ–∂–µ—Ç —Å—Ç–∞—Ç—å —Å–∏–ª—å–Ω–µ–µ\n\n–°—Ç–æ–∏–º–æ—Å—Ç—å:  3 –≤–∏—Å–∫–∞—Å–∞ üç´\n\n<code>–ö—É–ø–∏—Ç—å</code> - –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å –≤–∏—Å–∫–∞—Å\n\n<code>–ù–∞–∑–∞–¥</code> - –ø—Ä–∏—Å–º–æ—Ç—Ä–µ—Ç—å—Å—è –∫ –¥—Ä—É–≥–∏–º –≤–µ—â–∞–º'
            bot.send_photo(message.chat.id,photo = 'AgACAgIAAx0CZQN7rQAC00djS1wDLAyjAAESNb1iCMbnFm82jQIAAhHAMRu0UVlKwksUd0cuhScBAAMCAANzAAMqBA',caption = text,parse_mode='HTML',reply_markup=markup)
        elif 'gender changer' == message.text or 'Gender changer' == message.text or 'Gender changer' == message.text or message.text == '@NekoslaviaBot Gender changer' or message.text == '@NekoslaviaBot gender changer':
            data = cursor.execute('SELECT * FROM neko WHERE id = '+str(message.from_user.id))
            data = data.fetchone()
            if data is None:
                bot.send_message(message.chat.id,'–¢—ã –Ω–µ –æ–¥–∏–Ω –∏–∑ –Ω–∞—Å, –Ω–∞–ø–∏—à–∏ /start —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –Ω–µ–∫–æ—Å–ª–∞–≤–æ–º')
                return
            nam = str(data[1]).rstrip()
            rep = data[2]
            event = data[10]
            bolnitsa = int(data[6] - time.time())
            buff = data[12]

            if event != 8:
                bot.send_message(message.chat.id, '–•—É–π–Ω—é —Å–º–æ—Ä–æ–∑–∏–ª')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            markup = types.InlineKeyboardMarkup()
            switch_button1 = types.InlineKeyboardButton(text='–ö—É–ø–∏—Ç—å üí∏', switch_inline_query_current_chat = "–ö—É–ø–∏—Ç—å")
            switch_button2 = types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥ ‚ùå', switch_inline_query_current_chat = "–ù–∞–∑–∞–¥")
            markup.add(switch_button1,switch_button2)
            cursor.execute('UPDATE neko SET event = 10 WHERE id = ' + str(message.from_user.id))
            text = '–ö—Ç–æ –≤–æ–æ–±—â–µ —ç—Ç–æ –≤—ã–∫–∏–Ω—É–ª? –ù–µ –≤–¥–∞–≤–∞—è—Å—å –≤ –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç—ã —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞, c–∫–∞–∂—É –ª–∏—à—å, —á—Ç–æ –æ–Ω–æ –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç –Ω–µ–∫–æ–¥–µ–≤–æ—á–µ–∫ –≤ –Ω–µ–∫–æ–º–∞–ª—å—á–∏–∫–æ–≤ –∏ –Ω–∞–æ–±–æ—Ä–æ—Ç. –î–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ, —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω–∞—è –≤–µ—â—å\n\n–°—Ç–æ–∏–º–æ—Å—Ç—å:  20 –≤–∏—Å–∫–∞—Å–∞ üç´\n\n<code>–ö—É–ø–∏—Ç—å</code> - –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å –≤–∏—Å–∫–∞—Å\n\n<code>–ù–∞–∑–∞–¥</code> - –ø—Ä–∏—Å–º–æ—Ç—Ä–µ—Ç—å—Å—è –∫ –¥—Ä—É–≥–∏–º –≤–µ—â–∞–º'
            bot.send_photo(message.chat.id,photo = 'AgACAgIAAx0CZQN7rQAC00VjS1vzWZ5Yu_jq-nrUCUZwdZlMZAACEMAxG7RRWUqecoNnqMqp6QEAAwIAA3MAAyoE',caption = text,parse_mode='HTML',reply_markup=markup)
        elif '–∫–æ—Ä–æ–±–∫–∞' == message.text or '–ö–æ—Ä–æ–±–∫–∞' == message.text or message.text == '@NekoslaviaBot –ö–æ—Ä–æ–±–∫–∞' or message.text == '@NekoslaviaBot –∫–æ—Ä–æ–±–∫–∞':
            data = cursor.execute('SELECT * FROM neko WHERE id = '+str(message.from_user.id))
            data = data.fetchone()
            if data is None:
                bot.send_message(message.chat.id,'–¢—ã –Ω–µ –æ–¥–∏–Ω –∏–∑ –Ω–∞—Å, –Ω–∞–ø–∏—à–∏ /start —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –Ω–µ–∫–æ—Å–ª–∞–≤–æ–º')
                return
            nam = str(data[1]).rstrip()
            rep = data[2]
            event = data[10]
            bolnitsa = int(data[6] - time.time())
            buff = data[12]
            gender = data[33]
            if event != 3:
                bot.send_message(message.chat.id, '–•—É–π–Ω—é —Å–º–æ—Ä–æ–∑–∏–ª')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            d = 3
            markup = types.InlineKeyboardMarkup()
            switch_button1 = types.InlineKeyboardButton(text='–ö—É–ø–∏—Ç—å üí∏', switch_inline_query_current_chat = "–ö—É–ø–∏—Ç—å")
            switch_button2 = types.InlineKeyboardButton(text='–ù–∞–∑–∞–¥ ‚ùå', switch_inline_query_current_chat = "–ù–∞–∑–∞–¥")
            markup.add(switch_button1,switch_button2)
            if d == 3:
                cursor.execute('UPDATE neko SET event = 6 WHERE id = ' + str(message.from_user.id))
                if gender == 0:
                    text = '–£–Ω–∏–∫–∞–ª—å–Ω—ã–π –≤ —Å–≤–æ—ë–º —Ä–æ–¥–µ —Ç–æ–≤–∞—Ä, –∫–æ—Ä–æ–±–∫–∞ —Å –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫–æ–π üê±. –í –Ω–µ–π –º–æ–∂–µ—Ç –æ–∫–∞–∑–∞—Ç—å—Å—è –∫—Ç–æ —É–≥–æ–¥–Ω–æ, –Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ç–æ—á–Ω–æ —Ç–µ–±—è –Ω–µ —Ä–∞–∑–æ—á–∞—Ä—É–µ—Ç\n\n–°—Ç–æ–∏–º–æ—Å—Ç—å:  50 –Ω–µ–∫–æ–≥—Ä–∏–≤–µ–Ω üí∞\n\n<code>–ö—É–ø–∏—Ç—å</code> - –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å –¥–µ–Ω—å–≥–∏\n\n<code>–ù–∞–∑–∞–¥</code> - –ø—Ä–∏—Å–º–æ—Ç—Ä–µ—Ç—å—Å—è –∫ –¥—Ä—É–≥–∏–º —Ç–æ–≤–∞—Ä–∞–º'
                else:
                    text = '–£–Ω–∏–∫–∞–ª—å–Ω—ã–π –≤ —Å–≤–æ—ë–º —Ä–æ–¥–µ —Ç–æ–≤–∞—Ä, –∫–æ—Ä–æ–±–∫–∞ —Å –Ω–µ–∫–æ–º–∞–ª—å—á–∏–∫–æ–º üê±. –í –Ω–µ–π –º–æ–∂–µ—Ç –æ–∫–∞–∑–∞—Ç—å—Å—è –∫—Ç–æ —É–≥–æ–¥–Ω–æ, –Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ç–æ—á–Ω–æ —Ç–µ–±—è –Ω–µ —Ä–∞–∑–æ—á–∞—Ä—É–µ—Ç\n\n–°—Ç–æ–∏–º–æ—Å—Ç—å:  50 –Ω–µ–∫–æ–≥—Ä–∏–≤–µ–Ω üí∞\n\n<code>–ö—É–ø–∏—Ç—å</code> - –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å –¥–µ–Ω—å–≥–∏\n\n<code>–ù–∞–∑–∞–¥</code> - –ø—Ä–∏—Å–º–æ—Ç—Ä–µ—Ç—å—Å—è –∫ –¥—Ä—É–≥–∏–º —Ç–æ–≤–∞—Ä–∞–º'
                bot.send_photo(message.chat.id,photo = 'AgACAgIAAx0CZQN7rQACoidixPqDuXC6Re6KtTl1Ma87jDMoPgACkL4xGzBhKEremTk6cCni0AEAAwIAA3MAAykE',caption = text,parse_mode='HTML',reply_markup=markup)
        elif '–Ω–∞–∑–∞–¥' == message.text or '–ù–∞–∑–∞–¥' == message.text or message.text == '@NekoslaviaBot –ù–∞–∑–∞–¥' or message.text == '@NekoslaviaBot –Ω–∞–∑–∞–¥':
            data = cursor.execute('SELECT * FROM neko WHERE id = '+str(message.from_user.id))
            data = data.fetchone()
            if data is None:
                bot.send_message(message.chat.id,'–¢—ã –Ω–µ –æ–¥–∏–Ω –∏–∑ –Ω–∞—Å, –Ω–∞–ø–∏—à–∏ /start —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –Ω–µ–∫–æ—Å–ª–∞–≤–æ–º')
                return
            nam = str(data[1]).rstrip()
            rep = data[2]
            event = data[10]
            bolnitsa = int(data[6] - time.time())
            buff = data[12]

            if event != 4 and event != 5 and event != 6 and event != 9 and event != 10:
                bot.send_message(message.chat.id, '–•—É–π–Ω—é —Å–º–æ—Ä–æ–∑–∏–ª')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            if event == 4 or event == 5 or event == 6:
                markup = types.InlineKeyboardMarkup()
                switch_button1 = types.InlineKeyboardButton(text='–í–∏—Å–∫–∞—Å üç´', switch_inline_query_current_chat = "–í–∏—Å–∫–∞—Å")
                switch_button2 = types.InlineKeyboardButton(text='–ú–æ–Ω—Å—Ç—Ä ‚ö°Ô∏è', switch_inline_query_current_chat = "–ú–æ–Ω—Å—Ç—Ä")
                switch_button3 = types.InlineKeyboardButton(text='–ö–æ—Ä–æ–±–∫–∞ üì¶', switch_inline_query_current_chat = "–ö–æ—Ä–æ–±–∫–∞")
                switch_button4 = types.InlineKeyboardButton(text='–£–π—Ç–∏ üö∂‚Äç‚ôÇÔ∏è', switch_inline_query_current_chat = "–£–π—Ç–∏")
                markup.add(switch_button1,switch_button2,switch_button3,switch_button4)
                cursor.execute('UPDATE neko SET event = 3 WHERE id = ' + str(message.from_user.id))
                text = '<b>"Whiskas, monster, nekogirls ‚Äì you want it? Its yours, my friend, as long as you have enough nekogrivnas"</b> - —É—Å–ª—ã—à–∞–ª–∏ –≤—ã, –∑–∞—Ö–æ–¥—è –≤ –Ω–∏—á–µ–º –Ω–µ –ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω—ã–π –ª–∞—Ä—ë–∫. –¢—ã —Å –¥–µ—Ç—Å—Ç–≤–∞ –∑–Ω–∞–µ—à—å —ç—Ç–æ –º–µ—Å—Ç–æ, –≤–µ–¥—å –∑–¥–µ—Å—å –ø—Ä–æ–¥–∞—é—Ç –±—É—Ö–ª–æ –±–µ–∑ –ø–∞—Å–ø–æ—Ä—Ç–∞, –Ω–æ –Ω–∞ —ç—Ç–æ—Ç —Ä–∞–∑ –≤—ã –ø—Ä–∏—à–ª–∏ –Ω–µ –∑–∞ —ç—Ç–∏–º\n\n–°—Ç–æ–∏—Ç –≤–∑–≥–ª—è–Ω—É—Ç—å –Ω–∞ –æ—Å–æ–±—ã–µ —Ç–æ–≤–∞—Ä—ã:\n<code>–í–∏—Å–∫–∞—Å</code> - 25 –Ω–µ–∫–æ–≥—Ä–∏–≤–µ–Ω üí∞\n<code>–ú–æ–Ω—Å—Ç—Ä</code> - 30 –Ω–µ–∫–æ–≥—Ä–∏–≤–µ–Ω üí∞\n<code>–ö–æ—Ä–æ–±–∫–∞</code> - 50 –Ω–µ–∫–æ–≥—Ä–∏–≤–µ–Ω üí∞\n\n<code>–£–π—Ç–∏</code> - –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–∫—É–ø–∞—Ç—å'
                bot.send_photo(message.chat.id,photo = 'AgACAgIAAx0CZQN7rQACoh9ixOhAIbV7nzzHybTYBoJOkG2hGAACgb4xGzBhKEomCoej8lEPzgEAAwIAA3MAAykE',caption = text,parse_mode='HTML',reply_markup=markup)
            else:
                markup = types.InlineKeyboardMarkup()
                switch_button1 = types.InlineKeyboardButton(text='–ê–¥—Ä–µ–Ω–∞–ª–∏–Ω üí™', switch_inline_query_current_chat = "–ê–¥—Ä–µ–Ω–∞–ª–∏–Ω")
                switch_button2 = types.InlineKeyboardButton(text='Gender changer üè≥Ô∏è‚Äçüåà', switch_inline_query_current_chat = "Gender changer")
                switch_button4 = types.InlineKeyboardButton(text='–£–π—Ç–∏ üö∂‚Äç‚ôÇÔ∏è', switch_inline_query_current_chat = "–£–π—Ç–∏")
                markup.add(switch_button1,switch_button2)
                markup.add(switch_button4)
                cursor.execute('UPDATE neko SET event = 8 WHERE id = ' + str(message.from_user.id))
                text = '–ó–∞–π–¥—è –≤ –ø–µ—Ä–µ—É–ª–æ–∫, –≤—ã —É–≤–∏–¥–µ–ª–∏ –±–µ–∑–¥–æ–º–Ω—É—é –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫—É, —Ä–æ—é—â—É—é—Å—è –≤ –º—É—Å–æ—Ä–Ω–æ–º –±–∞–∫–µ. –ó–∞–≤–∏–¥–µ–≤ –≤–∞—Å, –æ–Ω–∞ –ø–æ–¥–ø—Ä—ã–≥–Ω—É–ª–∞ –∏ –≤–∑–≤–æ–ª–Ω–æ–≤–∞–Ω–Ω–æ –∑–∞–≥–æ–≤–æ—Ä–∏–ª–∞: <b>"–ù—è, –¥–∞–π—Ç–µ –ø–æ–∫—É—à–∞—Ç—å, –∞ —è –≤–∞–º –±–ª–µ—Å—Ç—è—à–∫–∏, –Ω—è"</b>. –ü–æ—Ö–æ–∂–µ, –æ–Ω–∞ –ø–ª–æ—Ö–æ –∑–Ω–∞–µ—Ç —á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–π —è–∑—ã–∫\n\n–ù–µ–∫–æ–¥–µ–≤–æ—á–∫–∞ –¥–µ—Ä–∂–∞–ª–∞ —Å—Ç—Ä–∞–Ω–Ω—ã–µ –≤–µ—â–∏, –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –Ω–∞ —Å–≤–∞–ª–∫–µ:\n<code>–ê–¥—Ä–µ–Ω–∞–ª–∏–Ω</code> - 3 –≤–∏—Å–∫–∞—Å–∞ üç´\n<code>Gender changer</code> - 20 –≤–∏—Å–∫–∞—Å–∞ üç´\n\n<code>–£–π—Ç–∏</code> - –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–∫—É–ø–∞—Ç—å'
                bot.send_photo(message.chat.id,photo = 'AgACAgIAAx0CZQN7rQAC00ljS2wxdGuJbyZKRPFIhwptU9xbIwACa8AxG7RRWUp-23IUrAnepQEAAwIAA3MAAyoE',caption = text,parse_mode='HTML',reply_markup=markup)
        elif message.text == '–≥–∞—Ä–∞–∂' or message.text == '–ì–∞—Ä–∞–∂' or message.text == '@NekoslaviaBot –ì–∞—Ä–∞–∂' or message.text == '@NekoslaviaBot –≥–∞—Ä–∞–∂':
            data = cursor.execute('SELECT * FROM neko WHERE id = '+str(message.from_user.id))
            data = data.fetchone()
            if data is None:
                bot.send_message(message.chat.id,'–¢—ã –Ω–µ –æ–¥–∏–Ω –∏–∑ –Ω–∞—Å, –Ω–∞–ø–∏—à–∏ /start —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –Ω–µ–∫–æ—Å–ª–∞–≤–æ–º')
                return
            car = data[9]
            event = data[10]
            coins = data[11]
            bolnitsa = int(data[6] - time.time())
            photo_mobile = str(data[19]).rstrip()
            monsters = data[20]
            if bolnitsa > 0:
                bot.send_message(message.chat.id, '–¢—ã –≤ –±–æ–ª—å–Ω–∏—Ü–µ –¥–µ–±–∏–ª')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            if event > 0:
                bot.send_message(message.chat.id, '–¢—ã –≥—É–ª—è–µ—à—å –µ–±–∞–Ω–∞—Ç')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            if car == 0:
                markup = types.InlineKeyboardMarkup()
                switch_button1 = types.InlineKeyboardButton(text='–ö—É–ø–∏—Ç—å üí∏', switch_inline_query_current_chat = "–ö—É–ø–∏—Ç—å –º–∞—à–∏–Ω—É")
                markup.add(switch_button1)
                text = '–≠—Ç–æ —Ç–≤–æ–π –≥–∞—Ä–∞–∂, –Ω–æ –∫–∞–∫-—Ç–æ –∑–¥–µ—Å—å –ø—É—Å—Ç–æ–≤–∞—Ç–æ, —Ç—ã —Ç–∞–∫ –Ω–µ –¥—É–º–∞–µ—à—å?\n\nC—Ç–æ–∏–º–æ—Å—Ç—å:  100 –Ω–µ–∫–æ–≥—Ä–∏–≤–µ–Ω üí∞\n<code>–ö—É–ø–∏—Ç—å –º–∞—à–∏–Ω—É</code> - –∫—É–ø–∏—Ç—å —Å–≤–æ–π –Ω–µ–∫–æ–º–æ–±–∏–ª—å'
                bot.send_photo(message.chat.id,photo = 'AgACAgIAAx0CZQN7rQACoV5iw21fDMZ4Yb_e1BZ3uIL-IT1xVwACFrwxG-RaGEpQPC9bR_1lwQEAAwIAA3MAAykE',caption = text,parse_mode='HTML',reply_markup=markup)
            if car > 0:
                markup = types.InlineKeyboardMarkup()
                switch_button1 = types.InlineKeyboardButton(text='–û—Ç–ø–∏–∑–¥–∏—Ç—å üòà', switch_inline_query_current_chat = "–û—Ç–ø–∏–∑–¥–∏—Ç—å")
                switch_button3 = types.InlineKeyboardButton(text='–°–ø–∞—Å—Ç–∏ üòá', switch_inline_query_current_chat = "–°–ø–∞—Å—Ç–∏")
                switch_button4 = types.InlineKeyboardButton(text='–ü–æ—Ä—Ç–∞–ª üè≥Ô∏è‚Äçüåà', switch_inline_query_current_chat = "–ü–æ—Ä—Ç–∞–ª")
                switch_button2 = types.InlineKeyboardButton(text='–ü–æ–∫—Ä–∞—Å–∏—Ç—å üåà', switch_inline_query_current_chat = "–ü–æ–∫—Ä–∞—Å–∏—Ç—å –º–∞—à–∏–Ω—É")
                markup.add(switch_button1)
                markup.add(switch_button3)
                markup.add(switch_button4)
                markup.add(switch_button2)
                text = '–≠—Ç–æ —Ç–≤–æ–π —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–π –Ω–µ–∫–æ–º–æ–±–∏–ª—å, —Ä–∞–∑–≤–µ –æ–Ω –Ω–µ –ø—Ä–µ–∫—Ä–∞—Å–µ–Ω? –ß—Ç–æ –∂, –≤—ã–±–∏—Ä–∞–π –∫—É–¥–∞ –µ—Ö–∞—Ç—å\n–ú–æ–Ω—Å—Ç—Ä–æ–≤ ‚ö°Ô∏è:  ' + str(monsters) + '\n\n<code>–û—Ç–ø–∏–∑–¥–∏—Ç—å</code> - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ–µ–≥–æ –≤—Ä–∞–≥–∞ –≤ –±–æ–ª—å–Ω–∏—Ü—É, –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ\n\n<code>–°–ø–∞—Å—Ç–∏</code> - –ø–æ–∫–æ—Ä–º–∏—Ç—å —á—É–∂—É—é –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫—É, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ –µ–ª–∞ —á–µ—Ç—ã—Ä–µ –¥–Ω—è, –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ\n\n<code>–ü–æ—Ä—Ç–∞–ª</code> - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –∫ –∑–∞–≥–∞–¥–æ—á–Ω–æ–º—É –ø–æ—Ä—Ç–∞–ª—É –≤ LGBT –º–∏—Ä\n\nC—Ç–æ–∏–º–æ—Å—Ç—å:  20 –Ω–µ–∫–æ–≥—Ä–∏–≤–µ–Ω üí∞\n<code>–ü–æ–∫—Ä–∞—Å–∏—Ç—å –º–∞—à–∏–Ω—É</code> - –∏–∑–º–µ–Ω–∏—Ç—å —Ü–≤–µ—Ç –Ω–µ–∫–æ–º–æ–±–∏–ª—è, –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–∏–ª–æ–∂–∏—Ç—å —Ñ–æ—Ç–æ'
                bot.send_photo(message.chat.id,photo = photo_mobile,caption = text,parse_mode='HTML',reply_markup=markup)
        elif message.text == '–ö—É–ø–∏—Ç—å –º–∞—à–∏–Ω—É' or message.text == '–∫—É–ø–∏—Ç—å –º–∞—à–∏–Ω—É' or message.text == '@NekoslaviaBot –ö—É–ø–∏—Ç—å –º–∞—à–∏–Ω—É' or message.text == '@NekoslaviaBot –∫—É–ø–∏—Ç—å –º–∞—à–∏–Ω—É':
            data = cursor.execute('SELECT * FROM neko WHERE id = '+str(message.from_user.id))
            data = data.fetchone()
            if data is None:
                bot.send_message(message.chat.id,'–¢—ã –Ω–µ –æ–¥–∏–Ω –∏–∑ –Ω–∞—Å, –Ω–∞–ø–∏—à–∏ /start —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –Ω–µ–∫–æ—Å–ª–∞–≤–æ–º')
                return
            car = data[9]
            event = data[10]
            coins = data[11]
            bolnitsa = int(data[6] - time.time())

            if bolnitsa > 0:
                bot.send_message(message.chat.id, '–¢—ã –≤ –±–æ–ª—å–Ω–∏—Ü–µ –¥–µ–±–∏–ª')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            if event > 0:
                bot.send_message(message.chat.id, '–¢—ã –≥—É–ª—è–µ—à—å –µ–±–∞–Ω–∞—Ç')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            if car > 0:
                bot.send_message(message.chat.id, '–£ —Ç–µ–±—è —É–∂–µ –µ—Å—Ç—å –Ω–µ–∫–æ–º–æ–±–∏–ª—å –µ–±–∞–Ω—å–∫–æ')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            cost = 100
            if coins < cost:
                bot.send_message(message.chat.id, '–ê –¥–µ–Ω—å–≥–∏ –≥–¥–µ')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            bot.send_message(message.chat.id, '–ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Å –ø–æ–∫—É–ø–∫–æ–π! –ï—Å–ª–∏ –º–∞—à–∏–Ω–∞ —Å–ª–æ–º–∞–µ—Ç—Å—è –≤ —Ç–µ—á–µ–Ω–∏–∏ –≥–æ–¥–∞, –º—ã –≤–µ—Ä–Ω—ë–º 1 –Ω–µ–∫–æ–≥—Ä–∏–≤–Ω—É –Ω–∞ –∫—ç—à–±–µ–∫ —Å—á—ë—Ç')
            bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLYxiwIeP83zV6whMtLqyTygKqGALagAChBAAAh_9WEh3vpYnO2kD1ikE')
            coins = coins - cost
            car = car + 1
            cursor.execute("UPDATE neko SET coins = "+ str(coins) +" WHERE id = "+str(message.from_user.id))
            cursor.execute("UPDATE neko SET car = "+ str(car) +" WHERE id = "+str(message.from_user.id))

        elif message.text == '—Å–ø–∞—Å—Ç–∏' or message.text == '–°–ø–∞—Å—Ç–∏' or message.text == '@NekoslaviaBot –°–ø–∞—Å—Ç–∏' or message.text == '@NekoslaviaBot —Å–ø–∞—Å—Ç–∏':
            data = cursor.execute('SELECT * FROM neko WHERE id = '+str(message.from_user.id))
            data = data.fetchone()
            if data is None:
                bot.send_message(message.chat.id,'–¢—ã –Ω–µ –æ–¥–∏–Ω –∏–∑ –Ω–∞—Å, –Ω–∞–ø–∏—à–∏ /start —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –Ω–µ–∫–æ—Å–ª–∞–≤–æ–º')
                return
            car = data[9]
            monsters = data[20]
            event = data[10]
            coins = data[11]
            bolnitsa = int(data[6] - time.time())
            nam  = str(data[1]).rstrip()

            if bolnitsa > 0:
                bot.send_message(message.chat.id, '–¢—ã –≤ –±–æ–ª—å–Ω–∏—Ü–µ –¥–µ–±–∏–ª')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            if event > 0:
                bot.send_message(message.chat.id, '–¢—ã –≥—É–ª—è–µ—à—å –µ–±–∞–Ω–∞—Ç')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            if car == 0:
                bot.send_message(message.chat.id, '–õ–æ—Ö —É —Ç–µ–±—è –Ω–µ—Ç –Ω–µ–∫–æ–º–æ–±–∏–ª—è')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            if monsters < 1:
                bot.send_message(message.chat.id, '–°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—Ä–∞–≤—å –Ω–µ–∫–æ–º–æ–±–∏–ª—å –¥–µ–≥–µ–Ω–µ—Ä–∞—Ç')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            if message.reply_to_message is None:
                bot.send_message(message.chat.id, '–Ø –∂–µ —Å–∫–∞–∑–∞–ª –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–∞—É–Ω')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            idk = message.reply_to_message.from_user.id
            if idk == message.from_user.id:
                bot.send_message(message.chat.id, '–¢—ã —Å–∞–º —Å–µ–±–µ –æ—Ç–≤–µ—Ç–∏–ª –µ–±–∞–Ω')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            data = cursor.execute('SELECT * FROM neko WHERE id = '+str(idk))
            data = data.fetchone()
            if data is None:
                bot.send_message(message.chat.id,'–£ —ç—Ç–æ–≥–æ –ª–æ—Ö–∞ –Ω–µ—Ç –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫–∏')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            k2 = int(time.time() - data[4])
            chel = str(data[16]).rstrip()
            n2 = str(data[1]).rstrip()
            gender = data[33]
            if k2 < 4*24*3600:
                text = '–ï–≥–æ –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫–∞ –ø–æ–∫–∞ –Ω–µ –Ω–∞—Å—Ç–æ–ª—å–∫–æ –≥–æ–ª–æ–¥–Ω–∞'
                if gender == 1:
                    text = '–ï–≥–æ –Ω–µ–∫–æ–º–∞–ª—å—á–∏–∫ –ø–æ–∫–∞ –Ω–µ –Ω–∞—Å—Ç–æ–ª—å–∫–æ –≥–æ–ª–æ–¥–µ–Ω'
                bot.send_message(message.chat.id,text)
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            text = n2 + ', –∫–æ–Ω–µ—á–Ω–æ, –∏—Å–ø—É–≥–∞–ª–∞—Å—å —Ç–µ–±—è, –Ω–æ –æ—Ç –µ–¥—ã –Ω–µ –æ—Ç–∫–∞–∑–∞–ª–∞—Å—å. –ú–æ–∂–µ—à—å –Ω–µ —Å–æ–º–Ω–µ–≤–∞—Ç—å—Å—è, —Ç—ã —Å–¥–µ–ª–∞–ª –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –¥–æ–±—Ä–æ–µ –¥–µ–ª–æ. <a href="tg://user?id='+str(idk)+'">'+str(chel)+'</a>, —Ç–µ–±–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Å—Ç—ã–¥–Ω–æ'
            if gender == 1:
                text = n2 + ', –∫–æ–Ω–µ—á–Ω–æ, –∏—Å–ø—É–≥–∞–ª—Å—è —Ç–µ–±—è, –Ω–æ –æ—Ç –µ–¥—ã –Ω–µ –æ—Ç–∫–∞–∑–∞–ª—Å—è. –ú–æ–∂–µ—à—å –Ω–µ —Å–æ–º–Ω–µ–≤–∞—Ç—å—Å—è, —Ç—ã —Å–¥–µ–ª–∞–ª –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –¥–æ–±—Ä–æ–µ –¥–µ–ª–æ. <a href="tg://user?id='+str(idk)+'">'+str(chel)+'</a>, —Ç–µ–±–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Å—Ç—ã–¥–Ω–æ'
            bot.send_message(message.chat.id,text,parse_mode='HTML')
            bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFVF5i2QceOMOx4OUJLMf60d1yFdEnHgACChIAAoCLWUi4Fv-mtr7ecikE')
            monsters = monsters - 1
            k2 = time.time()
            cursor.execute('UPDATE neko SET monsters = '+ str(monsters) +' WHERE id = ' + str(message.from_user.id))
            cursor.execute('UPDATE neko SET notifed = 0, kormit = '+ str(k2) +' WHERE id = ' + str(idk))
        elif '–¥–æ–Ω–∞—Ç' in message.text or '–î–æ–Ω–∞—Ç' in message.text:
            args = message.text.split()
            if args[0] == '–¥–æ–Ω–∞—Ç' or args[0] == '–î–æ–Ω–∞—Ç':
              try:
                data = cursor.execute('SELECT * FROM neko WHERE id = '+str(message.from_user.id))
                data = data.fetchone()
                if message.from_user.id == 1087968824:
                    bot.send_message(message.chat.id,'–ü–∞—à–æ–ª –Ω–∞—Ö—É–π')
                    return
                if data is None:
                    bot.send_message(message.chat.id,'–¢—ã –Ω–µ –æ–¥–∏–Ω –∏–∑ –Ω–∞—Å, –Ω–∞–ø–∏—à–∏ /start —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –Ω–µ–∫–æ—Å–ª–∞–≤–æ–º')
                    return
                bolnitsa = int(data[6] - time.time())
                coins = data[11]
                buff = data[12]
                monsters = data[20]
                boxes = data[34]
                heal = data[21]
                if bolnitsa > 0:
                    bot.send_message(message.chat.id, '–¢—ã –≤ –±–æ–ª—å–Ω–∏—Ü–µ –¥–µ–±–∏–ª')
                    bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                    return
                if message.reply_to_message is None:
                    bot.send_message(message.chat.id, '–û—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–∞—É–Ω')
                    bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                    return
                idk = message.reply_to_message.from_user.id
                if idk == message.from_user.id:
                    bot.send_message(message.chat.id, '–¢—ã –∫–∞–∫ —Å–µ–±–µ —Å–æ–±—Ä–∞–ª—Å—è –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –¥–µ–≥–µ–Ω–µ—Ä–∞—Ç')
                    bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                    return
                data = cursor.execute('SELECT * FROM neko WHERE id = '+str(idk))
                data = data.fetchone()
                if data is None:
                    bot.send_message(message.chat.id,'–£ —ç—Ç–æ–≥–æ –ª–æ—Ö–∞ –Ω–µ—Ç –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫–∏')
                    bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                    return
                b2 = int(data[6] - time.time())
                c2 = data[11]
                wh2 = data[12]
                m2 = data[20]
                boxes2 = data[34]
                heal2 = data[21]
                if b2 > 0:
                    bot.send_message(message.chat.id,'–≠—Ç–æ—Ç –ª–æ—Ö –≤ –±–æ–ª—å–Ω–∏—Ü–µ')
                    bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                    return
                if len(args) == 2:
                    cost = int(args[1])
                    if coins < cost:
                        bot.send_message(message.chat.id, '–ê –¥–µ–Ω—å–≥–∏ –≥–¥–µ')
                        bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                        return
                    if cost <= 0:
                        bot.send_message(message.chat.id, '–ê –ª–æ–≤–∫–æ —Ç—ã —ç—Ç–æ –ø—Ä–∏–¥—É–º–∞–ª')
                        bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                        return
                    c2 = c2 + cost
                    coins = coins - cost
                    cursor.execute('UPDATE neko SET coins = '+ str(coins) +' WHERE id = ' + str(message.from_user.id))
                    cursor.execute('UPDATE neko SET coins = '+ str(c2) +' WHERE id = ' + str(idk))
                    bot.send_message(message.chat.id,'–î–µ–Ω—å–≥–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã, –∫–æ–º–∏—Å—Å–∏—è –∑–∞ —É—Å–ª—É–≥–∏ –±–∞–Ω–∫–∞ —Å–æ—Å—Ç–∞–≤–∏–ª–∞ ' + str(cost) + ' –Ω–µ–∫–æ–≥—Ä–∏–≤–µ–Ω üí∞')
                    bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFOCFix4kIdkWwblTRCUvuw5oM3e3UQwACQRoAAvMOqEi2-xyG-vtxfCkE')
                elif len(args) == 3:
                    if args[1] == '–º–æ–Ω—Å—Ç—Ä—ã' or args[1] == '–ú–æ–Ω—Å—Ç—Ä—ã' or args[1] == '–º–æ–Ω—Å—Ç—Ä' or args[1] == '–ú–æ–Ω—Å—Ç—Ä':
                        cost = int(args[2])
                        if monsters < cost:
                            bot.send_message(message.chat.id, '–ê –º–æ–Ω—Å—Ç—Ä—ã –≥–¥–µ')
                            bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                            return
                        if cost <= 0:
                            bot.send_message(message.chat.id, '–ê –ª–æ–≤–∫–æ —Ç—ã —ç—Ç–æ –ø—Ä–∏–¥—É–º–∞–ª')
                            bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                            return
                        m2 = m2 + cost
                        monsters = monsters - cost
                        cursor.execute('UPDATE neko SET monsters = '+ str(monsters) +' WHERE id = ' + str(message.from_user.id))
                        cursor.execute('UPDATE neko SET monsters = '+ str(m2) +' WHERE id = ' + str(idk))
                        bot.send_message(message.chat.id,'–ú–æ–Ω—Å—Ç—Ä—ã ‚ö°Ô∏è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–æ–≤–æ–π –ø–æ—á—Ç–æ–π')
                        bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFOCFix4kIdkWwblTRCUvuw5oM3e3UQwACQRoAAvMOqEi2-xyG-vtxfCkE')
                    elif args[1] == '–≤–∏—Å–∫–∞—Å—ã' or args[1] == '–í–∏—Å–∫–∞—Å—ã' or args[1] == '–≤–∏—Å–∫–∞—Å' or args[1] == '–í–∏—Å–∫–∞—Å':
                        cost = int(args[2])
                        if buff < cost:
                            bot.send_message(message.chat.id, '–ê –≤–∏—Å–∫–∞—Å –≥–¥–µ')
                            bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                            return
                        if cost <= 0:
                            bot.send_message(message.chat.id, '–ê –ª–æ–≤–∫–æ —Ç—ã —ç—Ç–æ –ø—Ä–∏–¥—É–º–∞–ª')
                            bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                            return
                        wh2 = wh2 + cost
                        buff = buff - cost
                        cursor.execute('UPDATE neko SET buff = '+ str(buff) +' WHERE id = ' + str(message.from_user.id))
                        cursor.execute('UPDATE neko SET buff = '+ str(wh2) +' WHERE id = ' + str(idk))
                        bot.send_message(message.chat.id,'–íÔ∏è–∏—Å–∫–∞—Å üç´ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–æ–≤–æ–π –ø–æ—á—Ç–æ–π')
                        bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFOCFix4kIdkWwblTRCUvuw5oM3e3UQwACQRoAAvMOqEi2-xyG-vtxfCkE')
                    elif args[1] == '–ø–æ—Å—ã–ª–∫–∞' or args[1] == '–ü–æ—Å—ã–ª–∫–∞' or args[1] == '–ø–æ—Å—ã–ª–∫–∏' or args[1] == '–ü–æ—Å—ã–ª–∫–∏':
                        cost = int(args[2])
                        if boxes < cost:
                            bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤–ª—è—Ç—å –Ω–µ—á–µ–≥–æ')
                            bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                            return
                        if cost <= 0:
                            bot.send_message(message.chat.id, '–ê –ª–æ–≤–∫–æ —Ç—ã —ç—Ç–æ –ø—Ä–∏–¥—É–º–∞–ª')
                            bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                            return
                        boxes2 = boxes2 + cost
                        boxes = boxes - cost
                        cursor.execute('UPDATE neko SET boxes = '+ str(boxes) +' WHERE id = ' + str(message.from_user.id))
                        cursor.execute('UPDATE neko SET boxes = '+ str(boxes2) +' WHERE id = ' + str(idk))
                        bot.send_message(message.chat.id,'–ö–æ—Ä–æ–±–∫–∞ üì¶ —Å –Ω–µ–≤–µ–¥–æ–º–æ–π —Ö—É–π–Ω–µ–π –≤–Ω—É—Ç—Ä–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–æ–≤–æ–π –ø–æ—á—Ç–æ–π')
                        bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFOCFix4kIdkWwblTRCUvuw5oM3e3UQwACQRoAAvMOqEi2-xyG-vtxfCkE')
                    elif args[1] == '–∞–Ω—Ç–∏–ø–æ—Ö–º–µ–ª–∏–Ω' or args[1] == '–ê–Ω—Ç–∏–ø–æ—Ö–º–µ–ª–∏–Ω' or args[1] == '–∞–Ω—Ç–∏–ø–æ—Ö–º–µ–ª' or args[1] == '–ê–Ω—Ç–∏–ø–æ—Ö–º–µ–ª':
                        cost = int(args[2])
                        if heal < cost:
                            bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤–ª—è—Ç—å –Ω–µ—á–µ–≥–æ')
                            bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                            return
                        if cost <= 0:
                            bot.send_message(message.chat.id, '–ê –ª–æ–≤–∫–æ —Ç—ã —ç—Ç–æ –ø—Ä–∏–¥—É–º–∞–ª')
                            bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                            return
                        heal2 = heal2 + cost
                        heal = heal - cost
                        cursor.execute('UPDATE neko SET heal = '+ str(heal) +' WHERE id = ' + str(message.from_user.id))
                        cursor.execute('UPDATE neko SET heal = '+ str(heal2) +' WHERE id = ' + str(idk))
                        bot.send_message(message.chat.id,'–ë—É—Ç—ã–ª—å –∞–Ω—Ç–∏–ø–æ—Ö–º–µ–ª–∏–Ω–∞ üçº –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–æ–≤–æ–π –ø–æ—á—Ç–æ–π')
                        bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFOCFix4kIdkWwblTRCUvuw5oM3e3UQwACQRoAAvMOqEi2-xyG-vtxfCkE')
                    else:
                        bot.send_message(message.chat.id,'–ß–µ—Ç —Ç—ã —Ö—É–π–Ω—é –Ω–∞–ø–∏—Å–∞–ª')
                        bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')

                else:
                    bot.send_message(message.chat.id,'–ß–µ—Ç —Ç—ã —Ö—É–π–Ω—é –Ω–∞–ø–∏—Å–∞–ª')
                    bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
              except:
                    bot.send_message(message.chat.id,'–ß–µ—Ç —Ç—ã —Ö—É–π–Ω—é –Ω–∞–ø–∏—Å–∞–ª')
                    bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
        elif '–±–æ–π' in message.text or '–ë–æ–π' in message.text:
            args = message.text.split()
            wait = int(time.time() + 360)
            if args[0] == '–±–æ–π' or args[0] == '–ë–æ–π':
              if len(args) == 2:
                data = cursor.execute('SELECT * FROM neko WHERE id = '+str(message.from_user.id))
                data = data.fetchone()
                if data is None:
                    bot.send_message(message.chat.id,'–¢—ã –Ω–µ –æ–¥–∏–Ω –∏–∑ –Ω–∞—Å, –Ω–∞–ø–∏—à–∏ /start —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –Ω–µ–∫–æ—Å–ª–∞–≤–æ–º')
                    return
                bolnitsa = int(data[6] - time.time())
                coins = data[11]
                rep = data[2]
                arena = int(data[17] - time.time())
                chel1 = str(data[16]).rstrip()
                skill1 = data[30]
                skill2 = data[31]
                skills1 = [skill1,skill2]
                sk = pack(skills1)
                gender = data[33]
                if bolnitsa > 0:
                    bot.send_message(message.chat.id, '–¢—ã –≤ –±–æ–ª—å–Ω–∏—Ü–µ –¥–µ–±–∏–ª')
                    bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                    return
                if rep < 20:
                    text = '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —É —Ç–µ–±—è –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å —É–±–µ–¥–∏—Ç—å –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫—É –ø–æ–π—Ç–∏ —Å —Ç–æ–±–æ–π –Ω–∞ –∞—Ä–µ–Ω—É'
                    if gender == 1:
                        text = '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —É —Ç–µ–±—è –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å —É–±–µ–¥–∏—Ç—å –Ω–µ–∫–æ–º–∞–ª—å—á–∏–∫–∞ –ø–æ–π—Ç–∏ —Å —Ç–æ–±–æ–π –Ω–∞ –∞—Ä–µ–Ω—É'
                    bot.send_message(message.chat.id, text)
                    bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFP2VizLFlogiFH1n3Rpg9Hki7DC1y_wACjxEAAqg6WEjqQFCw4uPiwikE')
                    return
                if arena > 0:
                    text = '–ú–æ–∂–µ—Ç –±—ã—Ç—å —Å—Ç–æ–∏—Ç –¥–∞—Ç—å –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫–µ –æ—Ç–¥–æ—Ö–Ω—É—Ç—å?'
                    if gender == 1:
                        text = '–ú–æ–∂–µ—Ç –±—ã—Ç—å —Å—Ç–æ–∏—Ç –¥–∞—Ç—å –Ω–µ–∫–æ–º–∞–ª—å—á–∏–∫—É –æ—Ç–¥–æ—Ö–Ω—É—Ç—å?'
                    bot.send_message(message.chat.id, text)
                    bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFP2VizLFlogiFH1n3Rpg9Hki7DC1y_wACjxEAAqg6WEjqQFCw4uPiwikE')
                    return
                try:
                    c = args[1]
                    cost = int(c)
                except:
                    bot.send_message(message.chat.id,'–ß–µ—Ç —Ç—ã —Ö—É–π–Ω—é –Ω–∞–ø–∏—Å–∞–ª')
                    bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                    return
                if coins < cost:
                    bot.send_message(message.chat.id, '–ê –¥–µ–Ω—å–≥–∏ –≥–¥–µ')
                    bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                    return
                if cost < 10:
                    bot.send_message(message.chat.id, '–°—Ç–∞–≤–∫–∞ –Ω–∞ –∞—Ä–µ–Ω–µ –æ—Ç 10 –Ω–µ–∫–æ–≥—Ä–∏–≤–µ–Ω')
                    bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                    return
                data = cursor.execute('SELECT * FROM battles WHERE one = '+str(message.from_user.id))
                data = data.fetchone()
                if data is not None:
                    event = data[2]
                    ch = data[5]
                    msg = data[6]
                    if event != 0:
                        bot.send_message(message.chat.id,'–ö—É–¥–∞ —Å—Ç–æ–ª—å–∫–æ, c–ø–∞–º–µ—Ä –µ–±–∞–Ω—ã–π')
                        bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                        return
                    try:
                        bot.delete_message(chat_id=ch, message_id=msg)
                        cursor.execute('DELETE FROM battles WHERE one = '+str(message.from_user.id))
                    except:
                        pass
                if message.reply_to_message is None:
                    idk = 0
                    keyboard = types.InlineKeyboardMarkup(row_width=2)
                    callback_button1 = types.InlineKeyboardButton(text = '–ü—Ä–∏–Ω—è—Ç—å ‚úÖ',callback_data = 'accept ' + str(message.from_user.id) + ' ' + str(idk) + ' ' + str(cost))
                    callback_button3 = types.InlineKeyboardButton(text = '–û—Ç–æ–∑–≤–∞—Ç—å üö´',callback_data = 'aremove ' + str(message.from_user.id) + ' ' + str(idk))
                    keyboard.add(callback_button1)
                    keyboard.add(callback_button3)
                    text = '<a href="tg://user?id='+str(message.from_user.id)+'">'+str(chel1)+'</a> –∏—â–µ—Ç –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞ –¥–ª—è —Å–≤–æ–µ–π –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫–∏! –ü—Ä–∏–π–º–µ—à—å –≤—ã–∑–æ–≤ –∏–ª–∏ –∑–∞—Å—Å–∞–ª?\n–°—Ç–∞–≤–∫–∞: ' + str(cost) + ' üí∞'
                    if gender == 1:
                        text = '<a href="tg://user?id='+str(message.from_user.id)+'">'+str(chel1)+'</a> –∏—â–µ—Ç –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞ –¥–ª—è —Å–≤–æ–µ–≥–æ –Ω–µ–∫–æ–º–∞–ª—å—á–∏–∫–∞! –ü—Ä–∏–π–º–µ—à—å –≤—ã–∑–æ–≤ –∏–ª–∏ –∑–∞—Å—Å–∞–ª?\n–°—Ç–∞–≤–∫–∞: ' + str(cost) + ' üí∞'
                    m = bot.send_message(message.chat.id, text,reply_markup=keyboard,parse_mode='HTML')
                    cursor.execute("INSERT INTO battles (one,two,event,wait,cost,chat,message,skillone) VALUES ("+str(message.from_user.id)+","+str(idk)+",0,"+str(wait)+","+str(cost)+","+str(message.chat.id)+","+str(m.id)+",'"+sk+"')")
                else:
                    idk = message.reply_to_message.from_user.id
                    if idk == message.from_user.id:
                        bot.send_message(message.chat.id, '–¢—ã –∫–∞–∫ —Å —Å–æ–±–æ–π –≤–æ–µ–≤–∞—Ç—å —Å–æ–±—Ä–∞–ª—Å—è')
                        bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                        return
                    data = cursor.execute('SELECT * FROM neko WHERE id = '+str(idk))
                    data = data.fetchone()
                    if data is None:
                        bot.send_message(message.chat.id,'–£ —ç—Ç–æ–≥–æ –ª–æ—Ö–∞ –Ω–µ—Ç –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫–∏')
                        bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                        return
                    b2 = int(data[6] - time.time())
                    c2 = data[11]
                    r2 = data[2]
                    ar2 = int(data[17] - time.time())
                    chel2 = str(data[16]).rstrip()
                    gnd2 = data[33]

                    keyboard = types.InlineKeyboardMarkup(row_width=2)
                    callback_button1 = types.InlineKeyboardButton(text = '–ü—Ä–∏–Ω—è—Ç—å ‚úÖ',callback_data = 'accept ' + str(message.from_user.id) + ' ' + str(idk) + ' ' + str(cost))
                    callback_button2 = types.InlineKeyboardButton(text = '–û—Ç–∫–ª–æ–Ω–∏—Ç—å ‚ùå',callback_data = 'decline ' + str(message.from_user.id) + ' ' + str(idk))
                    callback_button3 = types.InlineKeyboardButton(text = '–û—Ç–æ–∑–≤–∞—Ç—å üö´',callback_data = 'aremove ' + str(message.from_user.id) + ' ' + str(idk))
                    keyboard.add(callback_button1,callback_button2)
                    keyboard.add(callback_button3)
                    text = '<a href="tg://user?id='+str(idk)+'">'+str(chel2)+'</a>, —Ç–≤–æ–µ–π –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫–µ –±—Ä–æ—Å–∏–ª–∏ –≤—ã–∑–æ–≤! –ü—Ä–∏–π–º–µ—à—å –∏–ª–∏ –∑–∞—Å—Å–∞–ª?\n–°—Ç–∞–≤–∫–∞: ' + str(cost) + ' üí∞'
                    if gender == 1:
                        text = '<a href="tg://user?id='+str(idk)+'">'+str(chel2)+'</a>, —Ç–≤–æ–µ–º—É –Ω–µ–∫–æ–º–∞–ª—å—á–∏–∫—É –±—Ä–æ—Å–∏–ª–∏ –≤—ã–∑–æ–≤! –ü—Ä–∏–π–º–µ—à—å –∏–ª–∏ –∑–∞—Å—Å–∞–ª?\n–°—Ç–∞–≤–∫–∞: ' + str(cost) + ' üí∞'
                    m = bot.send_message(message.chat.id, text,reply_markup=keyboard,parse_mode='HTML')

                    cursor.execute("INSERT INTO battles (one,two,event,wait,cost,chat,message,skillone) VALUES ("+str(message.from_user.id)+","+str(idk)+",0,"+str(wait)+","+str(cost)+","+str(message.chat.id)+","+str(m.id)+",'"+str(sk)+"')")
        #elif '—Ç—Ä–µ–π–¥' in message.text or '–¢—Ä–µ–π–¥' in message.text:
        #    args = message.text.split()
        #    if args[0] == '—Ç—Ä–µ–π–¥' or args[0] == '–¢—Ä–µ–π–¥':
        #      if len(args) == 3:
        #       data = cursor.execute('SELECT * FROM neko WHERE id = '+str(message.from_user.id))
        #        data = data.fetchone()
        #        if data is None:
        #            bot.send_message(message.chat.id,'–¢—ã –Ω–µ –æ–¥–∏–Ω –∏–∑ –Ω–∞—Å, –Ω–∞–ø–∏—à–∏ /start —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –Ω–µ–∫–æ—Å–ª–∞–≤–æ–º')
        #            return
        #        bolnitsa = int(data[6] - time.time())
        #        coins = data[11]
        #        arena = int(data[17] - time.time())
        #        chel = str(data[16]).rstrip()
        #        chat = message.chat.id
        #        idk = message.from_user.id
        #        if bolnitsa > 0:
        #            bot.send_message(message.chat.id, '–¢—ã –≤ –±–æ–ª—å–Ω–∏—Ü–µ –¥–µ–±–∏–ª')
         #           bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
        #            return
        #        try:
        #            cost = int(args[1])
        #            up = (args[2]).lower()
        #        except:
        #            bot.send_message(message.chat.id,'–ß–µ—Ç —Ç—ã —Ö—É–π–Ω—é –Ω–∞–ø–∏—Å–∞–ª')
        #            bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
        #            return
        #        if coins < cost:
         #           bot.send_message(message.chat.id, '–ê –¥–µ–Ω—å–≥–∏ –≥–¥–µ')
         #           bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
        #            return
        #        if cost < 10 or cost > 200:
        #            bot.send_message(message.chat.id, '–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ –æ—Ç 10 –¥–æ 200 –Ω–µ–∫–æ–≥—Ä–∏–≤–µ–Ω')
        #            bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
        #            return
        #        if up == '–≤–≤–µ—Ä—Ö':
        #            up = 1
        #        elif up == '–≤–Ω–∏–∑':
        #            up = 0
        #        else:
        #            bot.send_message(message.chat.id, '–¢—Ä–µ—Ç—å–µ —Å–ª–æ–≤–æ –ª–∏–±–æ –≤–≤–µ—Ä—Ö –ª–∏–±–æ –≤–Ω–∏–∑ –µ–±–ª–∞–Ω')
        #            bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
        #            return
        #        data = cursor.execute('SELECT * FROM trade WHERE id = '+str(message.from_user.id))
        #        data = data.fetchone()
        #        if data is not None:
        #            bot.send_message(message.chat.id,'–¢—ã —É–∂–µ —Ç–æ—Ä–≥—É–µ—à—å –≥–æ–≤–Ω–æ–º')
         #           bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
        #            return
        #        try:
         #           bitcoin_api_url = 'https://api.coingecko.com/api/v3/coins/bitcoin/'
         #           response = requests.get(bitcoin_api_url)
        #            response_json = response.json()
         #           start = int(response_json['market_data']['current_price']['uah'])
         #           text = '–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, —Ç—ã –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–ª ' + str(cost) + ' üí∞ –≤ –≥–æ–≤–Ω–æ\nüìä –ù–∞—á–∞–ª—å–Ω—ã–π –∫—É—Ä—Å –≥–æ–≤–Ω–∞: ' + str(start) + ' –≥—Ä–Ω\n–§–∏–∫—Å–∏—Ä—É–µ–º –ø—Ä–∏–±—ã–ª—å —á–µ—Ä–µ–∑ –ø–∞—Ä—É –º–∏–Ω—É—Ç ü§ë'
        #            bot.send_message(message.chat.id, text,parse_mode='HTML')
        #            cursor.execute("INSERT INTO trade (id,start,chat,chel,cost,up) VALUES ("+str(idk)+","+str(start)+","+str(chat)+",'"+str(chel)+"',"+str(cost)+","+str(up)+")")
        #        except Exception as e:
        #            bot.send_message(message.chat.id,e,parse_mode='HTML')
        elif message.text == '–∞—Ä–µ–Ω–∞' or message.text == '–ê—Ä–µ–Ω–∞' or message.text == '@NekoslaviaBot –ê—Ä–µ–Ω–∞' or message.text == '@NekoslaviaBot –∞—Ä–µ–Ω–∞':
            data = cursor.execute('SELECT * FROM neko WHERE id = '+str(message.from_user.id))
            data = data.fetchone()
            if data is None:
                bot.send_message(message.chat.id,'–¢—ã –Ω–µ –æ–¥–∏–Ω –∏–∑ –Ω–∞—Å, –Ω–∞–ø–∏—à–∏ /start —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –Ω–µ–∫–æ—Å–ª–∞–≤–æ–º')
                return
            nam = str(data[1]).rstrip()
            rep = data[2]
            phot = str(data[5]).rstrip()
            event = data[10]
            bolnitsa = int(data[6] - time.time())
            wins = data[15]
            gender = data[33]
            if rep < 20:
                text = nam + ' –æ—Ç–∫–∞–∑–∞–ª–∞—Å—å –∏–¥—Ç–∏ –Ω–∞ –∞—Ä–µ–Ω—É, –∏ —è –µ—ë –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ –ø–æ–Ω–∏–º–∞—é'
                if gender == 1:
                    text = nam + ' –æ—Ç–∫–∞–∑–∞–ª—Å—è –∏–¥—Ç–∏ –Ω–∞ –∞—Ä–µ–Ω—É, –∏ —è –µ–≥–æ –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ –ø–æ–Ω–∏–º–∞—é'
                bot.send_message(message.chat.id,text)
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLY5iwIflAaGLlpw7vXvQvEvJcWilzgACjxEAAqg6WEjqQFCw4uPiwikE')
                return
            if bolnitsa > 0:
                bot.send_message(message.chat.id, '–¢—ã –≤ –±–æ–ª—å–Ω–∏—Ü–µ –¥–µ–±–∏–ª')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            if event > 0:
                bot.send_message(message.chat.id, '–¢—ã –≥—É–ª—è–µ—à—å –µ–±–∞–Ω–∞—Ç')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            text = '–û—á–µ–≤–∏–¥–Ω–æ, –±–æ–∏ –Ω–µ–∫–æ–¥–µ–≤–æ—á–µ–∫ –Ω–µ–ª–µ–≥–∞–ª—å–Ω—ã, –ø–æ—ç—Ç–æ–º—É –æ–ø—É—Å—Ç–∏–º –ª–∏—à–Ω–∏–µ –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏. –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–º —É—Å–ª–æ–≤–∏–µ–º –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –±–æ—è —è–≤–ª—è–µ—Ç—Å—è —Å—Ç–∞–≤–∫–∞, —á–∞—Å—Ç—å –∫–æ—Ç–æ—Ä–æ–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä—ã –∑–∞–±–∏—Ä–∞—é—Ç —Å–µ–±–µ. –ù–∞ –≤—Ö–æ–¥–µ —Ç–µ–±—è —É–≤–µ—Ä–∏–ª–∏, —á—Ç–æ –µ—â—ë –Ω–∏ –æ–¥–Ω–∞ –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫–∞ –Ω–µ —É–º–µ—Ä–ª–∞\n–õ—É—á—à–∏–µ –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫–∏ –∞—Ä–µ–Ω—ã:\n\n'

            m = cursor.execute('SELECT MAX(wins) FROM neko')
            m = m.fetchone()
            m = m[0]

            data = cursor.execute('SELECT * FROM neko ORDER BY wins DESC')
            data = data.fetchall()
            i = 0
            if data is not None:
              for d in data:
                if i == 10:
                    break
                if str(d[1]).rstrip() == '–ù–µ–∫–æ–¥–µ–≤–æ—á–∫–∞':
                    n = '–ë–µ–∑—ã–º—è–Ω–Ω–∞—è —à–º–∞—Ä–æ—ë–±–∏–Ω–∞'
                else:
                    n = str(d[1]).rstrip()

                if d[15] == m and m != 0:
                    text = text + 'üèÜ <b>' + n + '</b>  ' + str(d[15]) + ' ‚öîÔ∏è\n'
                else:
                    text = text + str(i+1) + '.  ' + n + '  ' + str(d[15]) + ' ‚öîÔ∏è\n'
                i = i + 1
            text = text + '\n–¢–≤–æ–∏—Ö –ø–æ–±–µ–¥:  ' + str(wins) + ' ‚öîÔ∏è'
            text = text + '\n\n<code>–ë–æ–π [–°—Ç–∞–≤–∫–∞]</code> - –±—Ä–æ—Å–∏—Ç—å –≤—ã–∑–æ–≤, –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ'
            markup = types.InlineKeyboardMarkup()
            switch_button1 = types.InlineKeyboardButton(text='–ë–æ–π üó°', switch_inline_query_current_chat = "–ë–æ–π 10")
            markup.add(switch_button1)
            bot.send_photo(message.chat.id, photo = 'AgACAgIAAx0CZQN7rQACqQpizlI_XJiCwrzrSCYH47ZtXq9cCwACfLwxG0_FeEqC6_m0bVQSoQEAAwIAA3MAAykE',caption = text,parse_mode='HTML',reply_markup=markup)
        elif '–õ–∏—Ü–µ–Ω–∑–∏—è' == message.text or '–ª–∏—Ü–µ–Ω–∑–∏—è' == message.text:
                data = cursor.execute('SELECT * FROM neko WHERE id = '+str(message.from_user.id))
                data = data.fetchone()
                if data is None:
                    bot.send_message(message.chat.id,'–¢—ã –Ω–µ –æ–¥–∏–Ω –∏–∑ –Ω–∞—Å, –Ω–∞–ø–∏—à–∏ /start —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –Ω–µ–∫–æ—Å–ª–∞–≤–æ–º ')
                    return
                event = data[10]
                coins = data[11]
                licension = data[26]
                bolnitsa = int(data[6] - time.time())
                if bolnitsa > 0:
                    bot.send_message(message.chat.id, '–¢—ã –≤ –±–æ–ª—å–Ω–∏—Ü–µ –¥–µ–±–∏–ª')
                    bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                    return
                photo_licension = (data[27]).rstrip()
                markup = types.InlineKeyboardMarkup()
                switch_button1 = types.InlineKeyboardButton(text='–ü—Ä–æ–¥–ª–∏—Ç—å üìÜ', switch_inline_query_current_chat = "–ü—Ä–æ–¥–ª–∏—Ç—å")
                switch_button2 = types.InlineKeyboardButton(text='–î–∏–∑–∞–π–Ω üåà', switch_inline_query_current_chat = "–î–∏–∑–∞–π–Ω")
                markup.add(switch_button1)
                markup.add(switch_button2)
                text = '–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ —Å–≤–æ—é –ª–∏—Ü–µ–Ω–∑–∏—é üé´ –∏ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã, –∫–æ–≥–¥–∞ –æ–Ω–∏ –ø–æ—è–≤—è—Ç—Å—è —É —Ç–µ–±—è\n\n10 üí∞\n<code>–ü—Ä–æ–¥–ª–∏—Ç—å</code> - –ø–æ–ª—É—á–∏—Ç—å –Ω–æ–≤—É—é –ª–∏—Ü–µ–Ω–∑–∏—é\n\n20 üí∞\n<code>–î–∏–∑–∞–π–Ω</code> - –∑–∞–∫–∞–∑–∞—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –¥–∏–∑–∞–π–Ω –ª–∏—Ü–µ–Ω–∑–∏–∏, –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–∏–ª–æ–∂–∏—Ç—å —Ñ–æ—Ç–æ'
                bot.send_photo(message.chat.id,photo = photo_licension,caption = text,parse_mode='HTML',reply_markup=markup)
        elif message.text == '–ü—Ä–æ–¥–ª–∏—Ç—å' or message.text == '–ø—Ä–æ–¥–ª–∏—Ç—å' or message.text == '@NekoslaviaBot –ü—Ä–æ–¥–ª–∏—Ç—å' or message.text == '@NekoslaviaBot –ø—Ä–æ–¥–ª–∏—Ç—å':
                data = cursor.execute('SELECT * FROM neko WHERE id = '+str(message.from_user.id))
                data = data.fetchone()
                if data is None:
                    bot.send_message(message.chat.id,'–¢—ã –Ω–µ –æ–¥–∏–Ω –∏–∑ –Ω–∞—Å, –Ω–∞–ø–∏—à–∏ /start —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –Ω–µ–∫–æ—Å–ª–∞–≤–æ–º ')
                    return
                event = data[10]
                coins = data[11]
                licension = data[26]
                bolnitsa = int(data[6] - time.time())
                phot = str(data[5]).rstrip()
                new_phot = str(data[38]).rstrip()
                if new_phot != 'None':
                    phot = new_phot
                photo_design = (data[28]).rstrip()
                gender = data[33]
                chel = message.from_user.first_name
                cost = 10
                if coins < cost:
                    bot.send_message(message.chat.id, '–ê –¥–µ–Ω—å–≥–∏ –≥–¥–µ')
                    bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                    return
                if event > 0:
                    bot.send_message(message.chat.id, '–¢—ã –≥—É–ª—è–µ—à—å –µ–±–∞–Ω–∞—Ç')
                    bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                    return
                if bolnitsa > 0:
                    bot.send_message(message.chat.id, '–¢—ã –≤ –±–æ–ª—å–Ω–∏—Ü–µ –¥–µ–±–∏–ª')
                    bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                    return
                coins = coins - cost
                if photo_design == 'Nothing':
                    im0 = Image.open('bot/01.png')
                else:
                    m = bot.send_photo(-1001694727085,photo=photo_design,caption = '–ò–¥—ë—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∞...')
                    file_info = bot.get_file(m.photo[len(m.photo) - 1].file_id)
                    downloaded_file = bot.download_file(file_info.file_path)
                    src = 'bot/files/' + file_info.file_path
                    with open(src, 'wb') as new_file:
                        new_file.write(downloaded_file)
                    im0 = Image.open(src)
                    w,h = im0.size
                    if w > h:
                        nh = 630
                        nw = int((630/h)*w)
                    else:
                        nw = 600
                        nh = int((600/w)*h)
                    if nw < 600:
                        nw = 600
                    if nh < 630:
                        nh = 630
                    im0 = im0.resize((nw, nh),  Image.ANTIALIAS)
                    im1 = Image.open('bot/white1.png')
                    im1.paste(im0.convert('RGB'), (40,34))
                    im0 = im1
                    im1 = Image.open('bot/02.png')
                    im0.paste(im1.convert('RGB'), (0,0), im1)
                    im0 = im0.convert('RGBA')
                    pixdata = im0.load()
                    for y in range(im0.size[1]):
                        for x in range(im0.size[0]):
                            if pixdata[x,y][0]==255 and pixdata[x,y][1]==0 and pixdata[x,y][2]==0:
                                pixdata[x, y] = (255, 255, 255,0)


                if len(chel) > 18:
                    chel = (chel[:18] + '..')
                m = bot.send_photo(message.chat.id,photo=phot,caption = '–ò–¥—ë—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∞...')
                file_info = bot.get_file(m.photo[len(m.photo) - 1].file_id)
                downloaded_file = bot.download_file(file_info.file_path)
                src = 'bot/files/' + file_info.file_path
                with open(src, 'wb') as new_file:
                    new_file.write(downloaded_file)
                im1 = Image.open(src)
                w,h = im1.size
                if w > h:
                    nh = 630
                    nw = int((630/h)*w)
                else:
                    nw = 600
                    nh = int((600/w)*h)
                if nw < 600:
                    nw = 600
                if nh < 630:
                    nh = 630
                im1 = im1.resize((nw, nh),  Image.ANTIALIAS)
                im3 = Image.open('bot/white1.png')
                im3.paste(im1.convert('RGB'), (490,30))
                im1 = im3
                im1.paste(im0.convert('RGB'), (0,0), im0)
                font = ImageFont.truetype('bot/segoeprint_bold.ttf', size=34)
                draw = ImageDraw.Draw(im1)
                cur = datetime.fromtimestamp(time.time() + 3*3600)
                d = int(cur.day)
                if d < 10:
                    d = '0'+str(d)
                else:
                    d = str(d)
                md = int(cur.month)
                if md < 10:
                    md = '0'+str(md)
                else:
                    md = str(md)
                y = str(cur.year)
                old_date = d+'.'+md+'.'+y

                cur = datetime.fromtimestamp(time.time() + 3*3600 + 345600)
                d = int(cur.day)
                if d < 10:
                    d = '0'+str(d)
                else:
                    d = str(d)
                md = int(cur.month)
                if md < 10:
                    md = '0'+str(md)
                else:
                    md = str(md)
                y = str(cur.year)
                new_date = d+'.'+md+'.'+y



                if photo_design == 'Nothing':
                    draw.text((207, 117),str(chel),font=font,fill='#FFFFFF')
                    draw.text((352, 177),str(old_date),font=font,fill='#FFFFFF')
                    draw.text((370, 237),str(new_date),font=font,fill='#FFFFFF')
                else:
                    text = '–í—ã–¥–∞–Ω–æ:  @NekoslaviaBot'
                    x, y = 63, 65
                    fillcolor = "#FFFFFF"
                    shadowcolor = "#242425"

                    draw.text((x-2, y), text, font=font, fill=shadowcolor)
                    draw.text((x+2, y), text, font=font, fill=shadowcolor)
                    draw.text((x, y-2), text, font=font, fill=shadowcolor)
                    draw.text((x, y+2), text, font=font, fill=shadowcolor)

                    draw.text((x-2, y-2), text, font=font, fill=shadowcolor)
                    draw.text((x+2, y-2), text, font=font, fill=shadowcolor)
                    draw.text((x-2, y+2), text, font=font, fill=shadowcolor)

                    draw.text((x, y), text, font=font, fill=fillcolor)

                    text = '–ö–æ–º—É:  ' + chel
                    x, y = 63, 125

                    draw.text((x-2, y), text, font=font, fill=shadowcolor)
                    draw.text((x+2, y), text, font=font, fill=shadowcolor)
                    draw.text((x, y-2), text, font=font, fill=shadowcolor)
                    draw.text((x, y+2), text, font=font, fill=shadowcolor)

                    draw.text((x-2, y-2), text, font=font, fill=shadowcolor)
                    draw.text((x+2, y-2), text, font=font, fill=shadowcolor)
                    draw.text((x-2, y+2), text, font=font, fill=shadowcolor)

                    draw.text((x, y), text, font=font, fill=fillcolor)

                    text = '–î–∞—Ç–∞ –≤—ã–¥–∞—á–∏:  ' + old_date
                    x, y = 63, 185

                    draw.text((x-2, y), text, font=font, fill=shadowcolor)
                    draw.text((x+2, y), text, font=font, fill=shadowcolor)
                    draw.text((x, y-2), text, font=font, fill=shadowcolor)
                    draw.text((x, y+2), text, font=font, fill=shadowcolor)

                    draw.text((x-2, y-2), text, font=font, fill=shadowcolor)
                    draw.text((x+2, y-2), text, font=font, fill=shadowcolor)
                    draw.text((x-2, y+2), text, font=font, fill=shadowcolor)

                    draw.text((x, y), text, font=font, fill=fillcolor)

                    text = '–î–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ:  ' + new_date
                    x, y = 63, 245

                    draw.text((x-2, y), text, font=font, fill=shadowcolor)
                    draw.text((x+2, y), text, font=font, fill=shadowcolor)
                    draw.text((x, y-2), text, font=font, fill=shadowcolor)
                    draw.text((x, y+2), text, font=font, fill=shadowcolor)

                    draw.text((x-2, y-2), text, font=font, fill=shadowcolor)
                    draw.text((x+2, y-2), text, font=font, fill=shadowcolor)
                    draw.text((x-2, y+2), text, font=font, fill=shadowcolor)

                    draw.text((x, y), text, font=font, fill=fillcolor)

                    font = ImageFont.truetype('bot/comicbd.ttf', size=52)
                    text = '–õ–ò–¶–ï–ù–ó–ò–Ø –ù–ê\n–ù–ï–ö–û–î–ï–í–û–ß–ö–£'
                    x, y = 95, 500
                    if gender == 1:
                        text = '–õ–ò–¶–ï–ù–ó–ò–Ø –ù–ê\n–ù–ï–ö–û–ú–ê–õ–¨–ß–ò–ö–ê'
                        x, y = 65, 500
                    fillcolor = "#F6B1CB"

                    draw.text((x-2, y), text, font=font, fill=shadowcolor)
                    draw.text((x+2, y), text, font=font, fill=shadowcolor)
                    draw.text((x, y-2), text, font=font, fill=shadowcolor)
                    draw.text((x, y+2), text, font=font, fill=shadowcolor)

                    draw.text((x-2, y-2), text, font=font, fill=shadowcolor)
                    draw.text((x+2, y-2), text, font=font, fill=shadowcolor)
                    draw.text((x-2, y+2), text, font=font, fill=shadowcolor)

                    draw.text((x, y), text, font=font, fill=fillcolor)


                im1.save('bot/result.png')
                f = open("bot/result.png","rb")
                bot.delete_message(chat_id=m.chat.id, message_id=m.message_id)
                m = bot.send_photo(message.chat.id, photo=f,caption = '–í–æ—Ç —Ç–≤–æ—è –Ω–æ–≤–∞—è –ª–∏—Ü–µ–Ω–∑–∏—è üé´, –Ω–µ —Ç–µ—Ä—è–π –µ—ë –∏ –Ω–µ –∑–∞–±—ã–≤–∞–π –≤–æ–≤—Ä–µ–º—è –ø—Ä–æ–¥–ª–µ–≤–∞—Ç—å')
                fil = m.photo[len(m.photo) - 1].file_id
                cursor.execute("UPDATE neko SET coins = "+ str(coins) +" WHERE id = "+str(message.from_user.id))
                cursor.execute("UPDATE neko SET licension = "+ str(time.time() + 345600) +" WHERE id = "+str(message.from_user.id))
                cursor.execute("UPDATE neko SET photo_licension = '"+ fil +"' WHERE id = "+str(message.from_user.id))
                os.remove(src)
        elif message.text == '–≤–æ–π—Ç–∏' or message.text == '–í–æ–π—Ç–∏' or message.text == '@NekoslaviaBot –í–æ–π—Ç–∏' or message.text == '@NekoslaviaBot –≤–æ–π—Ç–∏':
            data = cursor.execute('SELECT * FROM neko WHERE id = '+str(message.from_user.id))
            data = data.fetchone()
            if data is None:
                bot.send_message(message.chat.id,'–¢—ã –Ω–µ –æ–¥–∏–Ω –∏–∑ –Ω–∞—Å, –Ω–∞–ø–∏—à–∏ /start —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –Ω–µ–∫–æ—Å–ª–∞–≤–æ–º')
                return
            nam = str(data[1]).rstrip()
            event = data[10]
            bolnitsa = int(data[6] - time.time())
            car = data[9]
            monsters = data[20]
            dungeon = int(data[22] - time.time())
            rep = data[2]
            gender = data[33]
            if bolnitsa > 0:
                bot.send_message(message.chat.id, '–¢—ã –≤ –±–æ–ª—å–Ω–∏—Ü–µ –¥–µ–±–∏–ª')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            if event < 0:
                bot.send_message(message.chat.id, '–¢–≤–æ—è –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫–∞ –≤ –¥–∞–Ω–∂–µ –∏–ª–∏ –Ω–∞ –∞—Ä–µ–Ω–µ')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            if event > 0:
                bot.send_message(message.chat.id, '–¢—ã –≥—É–ª—è–µ—à—å –µ–±–∞–Ω–∞—Ç')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            if car == 0:
                bot.send_message(message.chat.id, '–¢–µ–±–µ –Ω—É–∂–µ–Ω –Ω–µ–∫–æ–º–æ–±–∏–ª—å –µ–±–ª–∞–Ω–∞ –∫—É—Å–æ–∫')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            if monsters <= 0:
                bot.send_message(message.chat.id, '–¢–µ–±–µ –Ω—É–∂–Ω—ã –º–æ–Ω—Å—Ç—Ä—ã –¥–µ–±–∏–ª')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            if dungeon > 0:
                bot.send_message(message.chat.id, '–•–∞—Ä–æ—à, –¥–∞–π –æ—Ç–¥–æ—Ö–Ω—É—Ç—å —Å–≤–æ–µ–π –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫–µ —Ö–æ—Ç—è –±—ã –¥–µ–Ω—å')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFP2VizLFlogiFH1n3Rpg9Hki7DC1y_wACjxEAAqg6WEjqQFCw4uPiwikE')
                return
            if rep < 50:
                text = nam + ' –æ—Ç–∫–∞–∑–∞–ª–∞—Å—å –≤—Ö–æ–¥–∏—Ç—å, –Ω–µ —Å—Ç–æ–∏—Ç –µ—ë –∑–∞—Å—Ç–∞–≤–ª—è—Ç—å'
                if gender == 1:
                    text = nam + ' –æ—Ç–∫–∞–∑–∞–ª—Å—è –≤—Ö–æ–¥–∏—Ç—å, –Ω–µ —Å—Ç–æ–∏—Ç –µ–≥–æ –∑–∞—Å—Ç–∞–≤–ª—è—Ç—å'
                bot.send_message(message.chat.id,text)
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLY5iwIflAaGLlpw7vXvQvEvJcWilzgACjxEAAqg6WEjqQFCw4uPiwikE')
                return
            dungeon = int(time.time()+72000)
            event = -1
            monsters = monsters - 1
            cursor.execute("UPDATE neko SET dungeon = "+ str(dungeon) +" WHERE id = "+str(message.from_user.id))
            #cursor.execute("UPDATE neko SET event = "+ str(event) +" WHERE id = "+str(message.from_user.id))
            cursor.execute("UPDATE neko SET monsters = "+ str(monsters) +" WHERE id = "+str(message.from_user.id))

            mas = [[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0]]
            generation = [[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0]]
            generator = [2,2,2,3,3,3,4,4,5,5,6,7,8,8,8,8,8,8,8]
            stack = []
            mas[0][0] = 2
            generation[0][0] = 1
            cur_x = 0
            cur_y = 0
            while True:
              found = 0
              dirs = [1,2,3,4]
              if generation[cur_y][cur_x] == 0 and len(generator) > 0:
                d = random.choice(generator)
                generator.remove(d)
                generation[cur_y][cur_x] = d
              while len(dirs) != 0:
                d = random.choice(dirs)
                dirs.remove(d)
                if d == 1:
                    if (cur_y-3) >= 0:
                        if mas[cur_y-3][cur_x] == 0:
                            mas[cur_y-1][cur_x] = 1
                            mas[cur_y-2][cur_x] = 1
                            stack.append(str(cur_x) + ' ' + str(cur_y))
                            cur_y = cur_y - 3
                            mas[cur_y][cur_x] = 2
                            found = 1
                            break
                if d == 2:
                    if (cur_x+3) < len(mas[cur_y]):
                        if mas[cur_y][cur_x+3] == 0:
                            mas[cur_y][cur_x+1] = 1
                            mas[cur_y][cur_x+2] = 1
                            stack.append(str(cur_x) + ' ' + str(cur_y))
                            cur_x = cur_x + 3
                            mas[cur_y][cur_x] = 2
                            found = 1
                            break
                if d == 3:
                    if (cur_y+3) < len(mas):
                        if mas[cur_y+3][cur_x] == 0:
                            mas[cur_y+1][cur_x] = 1
                            mas[cur_y+2][cur_x] = 1
                            stack.append(str(cur_x) + ' ' + str(cur_y))
                            cur_y = cur_y + 3
                            mas[cur_y][cur_x] = 2
                            found = 1
                            break
                if d == 4:
                    if (cur_x-3) >= 0:
                        if mas[cur_y][cur_x-3] == 0:
                            mas[cur_y][cur_x-1] = 1
                            mas[cur_y][cur_x-2] = 1
                            stack.append(str(cur_x) + ' ' + str(cur_y))
                            cur_x = cur_x - 3
                            mas[cur_y][cur_x] = 2
                            found = 1
                            break
              if found == 1:
                continue
              else:
                if len(stack) == 0:
                    break
                st = stack[len(stack)-1]
                stack.remove(st)
                args = st.split()
                cur_x = int(args[0])
                cur_y = int(args[1])
            txt = ''
            mas[0][1] = 1
            mas[0][2] = 1
            mas[1][0] = 1
            mas[2][0] = 1
            mas[0][0] = 3
            for i in range(0, len(mas)):
              for j in range(0, len(mas[i])):
                if mas[i][j] == 0:
                    txt = txt + '‚óºÔ∏è'
                if mas[i][j] == 1:
                    txt = txt + '‚ñ´Ô∏è'
                if mas[i][j] == 2:
                    txt = txt + 'üü•'
                if mas[i][j] == 3:
                    txt = txt + 'üü¢'
                if mas[i][j] == 4:
                    txt = txt + 'üü©'
              txt = txt + '\n'
            maxhp = 5 + int((rep-50)/10)
            if maxhp > 8:
                maxhp = 8
            hp = maxhp
            keyboard = types.InlineKeyboardMarkup(row_width=4)
            callback_button1 = types.InlineKeyboardButton(text = '‚¨ÜÔ∏è',callback_data = 'move ' + str(message.from_user.id) + ' 1')
            callback_button2 = types.InlineKeyboardButton(text = '‚¨ÖÔ∏è',callback_data = 'move ' + str(message.from_user.id) + ' 4')
            callback_button3 = types.InlineKeyboardButton(text = '‚è∫',callback_data = 'nothing')
            callback_button4 = types.InlineKeyboardButton(text = '‚û°Ô∏è',callback_data = 'move ' + str(message.from_user.id) + ' 2')
            callback_button5 = types.InlineKeyboardButton(text = '‚¨áÔ∏è',callback_data = 'move ' + str(message.from_user.id) + ' 3')
            callback_button6 = types.InlineKeyboardButton(text = '–£–π—Ç–∏ üîö',callback_data = 'back ' + str(message.from_user.id))
            keyboard.add(callback_button1,callback_button5,callback_button2,callback_button4)
            keyboard.add(callback_button6)
            ms = [a for b in mas for a in b]
            gs = [a for b in generation for a in b]
            md = pack(ms)
            gn = pack(gs)
            text = nam + ' —Å—Ä–∞–∑—É –∂–µ –ø–æ—á—É—Å—Ç–≤–æ–≤–∞–ª–∞ –ø—Ä–æ—Ö–ª–∞–¥—É –∏ —Å—ã—Ä–æ—Å—Ç—å, –∞ –µ—ë –Ω–æ–≥–∞ –≤—Å—Ç—É–ø–∏–ª–∞ –≤–æ —á—Ç–æ-—Ç–æ –º–æ–∫—Ä–æ–µ. –î–∞ —ç—Ç–æ –∂–µ –æ–≥—Ä–æ–º–Ω–∞—è –ø–µ—â–µ—Ä–∞! –ò—Å—Ö–æ–¥—è—â–µ–µ –æ—Ç–æ–≤—Å—é–¥—É —Ä–∞–∑–Ω–æ—Ü–≤–µ—Ç–Ω–æ–µ —Å–≤–µ—á–µ–Ω–∏–µ –ø—Ä–æ–≥–æ–Ω—è–µ—Ç —Ç–µ–º–Ω–æ—Ç—É –¥–∞–∂–µ —Å —Å–∞–º—ã—Ö –æ—Ç–¥–∞–ª—ë–Ω–Ω—ã—Ö —É–≥–æ–ª–∫–æ–≤. –ß—Ç–æ –∂, —ç—Ç–æ –º–µ—Å—Ç–æ –Ω–µ –≤—ã–≥–ª—è–¥–∏—Ç –æ–ø–∞—Å–Ω—ã–º, –Ω–æ –Ω–∞–¥–æ–ª–≥–æ –ª–∏?\n\n' + '–î–æ–±—ã—á–∞:  0üí∞ 0üç´ 0‚ö°Ô∏è 0üçº\n'+'–ö–∞—Ä—Ç–∞:\n'+txt
            if gender == 1:
                text = nam + ' —Å—Ä–∞–∑—É –∂–µ –ø–æ—á—É—Å—Ç–≤–æ–≤–∞–ª –ø—Ä–æ—Ö–ª–∞–¥—É –∏ —Å—ã—Ä–æ—Å—Ç—å, –∞ –µ–≥–æ –Ω–æ–≥–∞ –≤—Å—Ç—É–ø–∏–ª–∞ –≤–æ —á—Ç–æ-—Ç–æ –º–æ–∫—Ä–æ–µ. –î–∞ —ç—Ç–æ –∂–µ –æ–≥—Ä–æ–º–Ω–∞—è –ø–µ—â–µ—Ä–∞! –ò—Å—Ö–æ–¥—è—â–µ–µ –æ—Ç–æ–≤—Å—é–¥—É —Ä–∞–∑–Ω–æ—Ü–≤–µ—Ç–Ω–æ–µ —Å–≤–µ—á–µ–Ω–∏–µ –ø—Ä–æ–≥–æ–Ω—è–µ—Ç —Ç–µ–º–Ω–æ—Ç—É –¥–∞–∂–µ —Å —Å–∞–º—ã—Ö –æ—Ç–¥–∞–ª—ë–Ω–Ω—ã—Ö —É–≥–æ–ª–∫–æ–≤. –ß—Ç–æ –∂, —ç—Ç–æ –º–µ—Å—Ç–æ –Ω–µ –≤—ã–≥–ª—è–¥–∏—Ç –æ–ø–∞—Å–Ω—ã–º, –Ω–æ –Ω–∞–¥–æ–ª–≥–æ –ª–∏?\n\n' + '–î–æ–±—ã—á–∞:  0üí∞ 0üç´ 0‚ö°Ô∏è 0üçº\n'+'–ö–∞—Ä—Ç–∞:\n'+txt
            m = bot.send_photo(message.chat.id,photo = 'AgACAgIAAx0CZQN7rQACwxZi8uNUoMtUGP6J96D7X-pveAGj3wAC374xGxy_mEsWdB1RBPi4nQEAAwIAA3MAAykE',caption = text,parse_mode='HTML',reply_markup=keyboard)
            wait = int(time.time() + 3600)
            cursor.execute("INSERT INTO dungeons (id,map,message,chat,wait,generation,co,wh,mo,he,selected,hp,maxhp) VALUES ("+str(message.from_user.id)+",'"+str(md)+"',"+str(m.id)+","+str(message.chat.id)+","+str(wait)+",'"+str(gn)+"',0,0,0,0,-1,"+str(hp)+","+str(maxhp)+")")
        elif message.text == '–ø–æ—Ä—Ç–∞–ª' or message.text == '–ü–æ—Ä—Ç–∞–ª' or message.text == '@NekoslaviaBot –ü–æ—Ä—Ç–∞–ª' or message.text == '@NekoslaviaBot –ø–æ—Ä—Ç–∞–ª':
            data = cursor.execute('SELECT * FROM neko WHERE id = '+str(message.from_user.id))
            data = data.fetchone()
            if data is None:
                bot.send_message(message.chat.id,'–¢—ã –Ω–µ –æ–¥–∏–Ω –∏–∑ –Ω–∞—Å, –Ω–∞–ø–∏—à–∏ /start —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –Ω–µ–∫–æ—Å–ª–∞–≤–æ–º')
                return
            nam = str(data[1]).rstrip()
            event = data[10]
            bolnitsa = int(data[6] - time.time())
            car = data[9]
            monsters = data[20]
            gender = data[33]
            if bolnitsa > 0:
                bot.send_message(message.chat.id, '–¢—ã –≤ –±–æ–ª—å–Ω–∏—Ü–µ –¥–µ–±–∏–ª')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return

            if event > 0:
                bot.send_message(message.chat.id, '–¢—ã –≥—É–ª—è–µ—à—å –µ–±–∞–Ω–∞—Ç')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return

            text = '–≠—Ç–æ –≤–æ–µ–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç, –Ω–æ –±–ª–∞–≥–æ–¥–∞—Ä—è —Å–≤—è–∑—è–º —Ç–µ–±–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ø–∞—Å—Ç—å —Å—é–¥–∞. –ú–µ—Å—Ç–æ, –∫—É–¥–∞ –≤–µ–¥—ë—Ç –ø–æ—Ä—Ç–∞–ª, –ø—Ä–∏–Ω—è—Ç–Ω–æ –Ω–∞–∑—ã–≤–∞—Ç—å LGBT –º–∏—Ä–æ–º, –∏ –ø—Ä–æ –Ω–µ–≥–æ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ –Ω–∏—á–µ–≥–æ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ. –ü–æ–ø–∞—Å—Ç—å —Ç—É–¥–∞ –º–æ–≥—É—Ç —Ç–æ–ª—å–∫–æ –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫–∏ —Å –Ω–µ–∫–æ–º–∞–ª—å—á–∏–∫–∞–º–∏, –æ–±—ã—á–Ω—ã–µ –∂–µ –ª—é–¥–∏ –¥–∞–∂–µ –Ω–µ –º–æ–≥—É—Ç –ø—Ä–∏–∫–æ—Å–Ω—É—Ç—å—Å—è –∫ –ø–æ—Ä—Ç–∞–ª—É. –ö —Ç–æ–º—É –∂–µ, –ø–æ—Å–ª–µ–¥–Ω—è—è –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è —ç–∫—Å–ø–µ–¥–∏—Ü–∏—è —Å—á–∏—Ç–∞–µ—Ç—Å—è –ø—Ä–æ–ø–∞–≤—à–µ–π –±–µ–∑ –≤–µ—Å—Ç–∏\n\n<code>–í–æ–π—Ç–∏</code> - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫—É –≤ –ø–æ—Ä—Ç–∞–ª'
            if gender == 1:
                text = '–≠—Ç–æ –≤–æ–µ–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç, –Ω–æ –±–ª–∞–≥–æ–¥–∞—Ä—è —Å–≤—è–∑—è–º —Ç–µ–±–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ø–∞—Å—Ç—å —Å—é–¥–∞. –ú–µ—Å—Ç–æ, –∫—É–¥–∞ –≤–µ–¥—ë—Ç –ø–æ—Ä—Ç–∞–ª, –ø—Ä–∏–Ω—è—Ç–Ω–æ –Ω–∞–∑—ã–≤–∞—Ç—å LGBT –º–∏—Ä–æ–º, –∏ –ø—Ä–æ –Ω–µ–≥–æ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ –Ω–∏—á–µ–≥–æ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ. –ü–æ–ø–∞—Å—Ç—å —Ç—É–¥–∞ –º–æ–≥—É—Ç —Ç–æ–ª—å–∫–æ –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫–∏ —Å –Ω–µ–∫–æ–º–∞–ª—å—á–∏–∫–∞–º–∏, –æ–±—ã—á–Ω—ã–µ –∂–µ –ª—é–¥–∏ –¥–∞–∂–µ –Ω–µ –º–æ–≥—É—Ç –ø—Ä–∏–∫–æ—Å–Ω—É—Ç—å—Å—è –∫ –ø–æ—Ä—Ç–∞–ª—É. –ö —Ç–æ–º—É –∂–µ, –ø–æ—Å–ª–µ–¥–Ω—è—è –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è —ç–∫—Å–ø–µ–¥–∏—Ü–∏—è —Å—á–∏—Ç–∞–µ—Ç—Å—è –ø—Ä–æ–ø–∞–≤—à–µ–π –±–µ–∑ –≤–µ—Å—Ç–∏\n\n<code>–í–æ–π—Ç–∏</code> - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–µ–∫–æ–º–∞–ª—å—á–∏–∫–∞ –≤ –ø–æ—Ä—Ç–∞–ª'
            markup = types.InlineKeyboardMarkup()
            switch_button1 = types.InlineKeyboardButton(text='–í–æ–π—Ç–∏ üè≥Ô∏è‚Äçüåà', switch_inline_query_current_chat = "–í–æ–π—Ç–∏")
            markup.add(switch_button1)
            bot.send_photo(message.chat.id, photo = 'AgACAgIAAx0CZQN7rQACsRxi5CVwxElzGR26h0_tTvU6R5cFmAACHb8xG38aIEs12xAgGvf_ugEAAwIAA3MAAykE',caption = text,parse_mode='HTML',reply_markup=markup)
        elif message.text == '–æ—Ç–ø–∏–∑–¥–∏—Ç—å' or message.text == '–û—Ç–ø–∏–∑–¥–∏—Ç—å' or message.text == '@NekoslaviaBot –û—Ç–ø–∏–∑–¥–∏—Ç—å' or message.text == '@NekoslaviaBot –æ—Ç–ø–∏–∑–¥–∏—Ç—å':
            data = cursor.execute('SELECT * FROM neko WHERE id = '+str(message.from_user.id))
            data = data.fetchone()
            if data is None:
                bot.send_message(message.chat.id,'–¢—ã –Ω–µ –æ–¥–∏–Ω –∏–∑ –Ω–∞—Å, –Ω–∞–ø–∏—à–∏ /start —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –Ω–µ–∫–æ—Å–ª–∞–≤–æ–º')
                return
            car = data[9]
            event = data[10]
            coins = data[11]
            bolnitsa = int(data[6] - time.time())
            nam  = str(data[1]).rstrip()
            monsters = data[20]
            gender = data[33]

            if bolnitsa > 0:
                bot.send_message(message.chat.id, '–¢—ã –≤ –±–æ–ª—å–Ω–∏—Ü–µ –¥–µ–±–∏–ª')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            if event > 0:
                bot.send_message(message.chat.id, '–¢—ã –≥—É–ª—è–µ—à—å –µ–±–∞–Ω–∞—Ç')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            if car == 0:
                bot.send_message(message.chat.id, '–õ–æ—Ö —É —Ç–µ–±—è –Ω–µ—Ç –Ω–µ–∫–æ–º–æ–±–∏–ª—è')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            if monsters < 1:
                bot.send_message(message.chat.id, '–°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—Ä–∞–≤—å –Ω–µ–∫–æ–º–æ–±–∏–ª—å –¥–µ–≥–µ–Ω–µ—Ä–∞—Ç')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            if message.reply_to_message is None:
                bot.send_message(message.chat.id, '–Ø –∂–µ —Å–∫–∞–∑–∞–ª –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–∞—É–Ω')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            idk = message.reply_to_message.from_user.id
            if idk == message.from_user.id:
                bot.send_message(message.chat.id, '–í–æ—Ç —Å–∞–º —Å–µ–±—è –∏ –ø–∏–∑–¥–∏, –∞ –º–Ω–µ –±–æ–ª—å—à–µ –Ω–µ –ø–∏—à–∏')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            data = cursor.execute('SELECT * FROM neko WHERE id = '+str(idk))
            data = data.fetchone()
            if data is None:
                bot.send_message(message.chat.id,'–£ —ç—Ç–æ–≥–æ –ª–æ—Ö–∞ –Ω–µ—Ç –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫–∏')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            b = int(data[6] - time.time())
            chel = str(data[16]).rstrip()
            if b > 0:
                bot.send_message(message.chat.id,'–≠—Ç–æ—Ç –ª–æ—Ö —É–∂–µ –≤ –±–æ–ª—å–Ω–∏—Ü–µ')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            biba = random.randint(21600,36000)
            b = int(time.time()+biba)
            biba = math.ceil(biba/3600)
            txt = '–ü—Ä–æ—Ö–æ–∂–∏–µ –≤–∏–¥–µ–ª–∏, –∫–∞–∫ –∫–æ–≥–æ-—Ç–æ —Å–∏–ª–æ–π –∑–∞—Ç–æ–ª–∫–∞–ª–∏ –≤ —Ä–æ–∑–æ–≤—É—é –±—É—Ö–∞–Ω–∫—É –±–µ–∑ –Ω–æ–º–µ—Ä–æ–≤ –∏ —É–≤–µ–∑–ª–∏ –≤ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–∏. –û–±—Ö–æ–¥—è—Å—å –±–µ–∑ –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π, <a href="tg://user?id='+str(idk)+'">'+str(chel)+'</a> –æ—Ç–ø—Ä–∞–≤–∏–ª—Å—è –≤ –±–æ–ª—å–Ω–∏—Ü—É –Ω–∞ ' + str(biba) + ' —á–∞—Å–æ–≤ üíä'
            bot.send_message(message.chat.id,txt,parse_mode='HTML')
            bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEGKY5jU0Mm9xVPCdaaFU7LHYBXnA4o3gACyiQAAp0NSEv_PF-UBc--kioE')
            monsters = monsters - 1
            cursor.execute('UPDATE neko SET monsters = '+ str(monsters) +' WHERE id = ' + str(message.from_user.id))
            cursor.execute('UPDATE neko SET bolnitsa = '+ str(b) +' WHERE id = ' + str(idk))
        elif message.text == '–∫–∞–∑–∏–Ω–æ' or message.text == '–ö–∞–∑–∏–Ω–æ' or message.text == '@NekoslaviaBot –ö–∞–∑–∏–Ω–æ' or message.text == '@NekoslaviaBot –∫–∞–∑–∏–Ω–æ':
            data = cursor.execute('SELECT * FROM neko WHERE id = '+str(message.from_user.id))
            data = data.fetchone()
            if data is None:
                bot.send_message(message.chat.id,'–¢—ã –Ω–µ –æ–¥–∏–Ω –∏–∑ –Ω–∞—Å, –Ω–∞–ø–∏—à–∏ /start —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –Ω–µ–∫–æ—Å–ª–∞–≤–æ–º')
                return
            nam = str(data[1]).rstrip()
            event = data[10]
            bolnitsa = int(data[6] - time.time())
            casino = data[40]
            pilk = data[41]
            if bolnitsa > 0:
                bot.send_message(message.chat.id, '–¢—ã –≤ –±–æ–ª—å–Ω–∏—Ü–µ –¥–µ–±–∏–ª')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            if event < 0:
                bot.send_message(message.chat.id, '–¢–≤–æ—è –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫–∞ –≤ –¥–∞–Ω–∂–µ –∏–ª–∏ –Ω–∞ –∞—Ä–µ–Ω–µ')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            if event > 0:
                bot.send_message(message.chat.id, '–¢—ã –≥—É–ª—è–µ—à—å –µ–±–∞–Ω–∞—Ç')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            text = '–ß—Ç–æ–±—ã –Ω–µ –ø–ª–∞—Ç–∏—Ç—å –¥–µ–Ω—å–≥–∏, –∫–∞–∑–∏–Ω–æ –ù–µ–∫–æ—Å–ª–∞–≤–∏–∏ —á–∞—Å—Ç–æ –ø—Ä–µ–¥–ª–∞–≥–∞—é—Ç –≤ –∫–∞—á–µ—Å—Ç–≤–µ –≤—ã–∏–≥—Ä—ã—à–∞ –Ω–µ–∫–æ–¥–µ–≤–æ—á–µ–∫ –∏ –ø—Ä–æ—á–∏–π –º—É—Å–æ—Ä. –≠—Ç–æ, –±–∞–∑–∏—Ä—É—é—â–µ–µ—Å—è –≤ –≥–ª—É–±–∏–Ω–∞—Ö –ø–æ–¥–≤–∞–ª–∞ —Ç–≤–æ–µ–≥–æ –¥–æ–º–∞, –Ω–µ –æ–∫–∞–∑–∞–ª–æ—Å—å –∏—Å–∫–ª—é—á–µ–Ω–∏–µ–º\n\n–°–ª–æ—Ç—ã üé∞\n10 üí∞\n<code>–ü—É—Å–∫</code> - –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–ª–æ—Ç—ã\n\n–ü–æ–∫–µ—Ä üÉè\n–û—Ç 20 üí∞\n<code>–ü–æ–∫–µ—Ä</code> - —Å—ã–≥—Ä–∞—Ç—å —Å —Ç–∞–∫–∏–º–∏ –∂–µ –ø–æ–ª—É–ø–æ–∫–µ—Ä–∞–º–∏'
            markup = types.InlineKeyboardMarkup()
            switch_button1 = types.InlineKeyboardButton(text='–ü—É—Å–∫ üé∞', switch_inline_query_current_chat = "–ü—É—Å–∫")
            switch_button2 = types.InlineKeyboardButton(text='–ü–æ–∫–µ—Ä ‚ô†Ô∏è', switch_inline_query_current_chat = "–ü–æ–∫–µ—Ä")
            switch_button3 = types.InlineKeyboardButton(text = '–ö–æ–º–±–∏–Ω–∞—Ü–∏–∏ ‚ùì',callback_data = 'comb ' + str(message.from_user.id))
            markup.add(switch_button1)
            markup.add(switch_button2)
            markup.add(switch_button3)
            bot.send_photo(message.chat.id, photo = 'AgACAgIAAx0CZQN7rQACsadi5sd8T9_OueoaHagCng-OXhWKYQACmrsxG5NIMEuXRTxWMN6TQwEAAwIAA3MAAykE',caption = text,parse_mode='HTML',reply_markup=markup)
        #elif message.text == '–∫–æ–ª–µ—Å–æ' or message.text == '–ö–æ–ª–µ—Å–æ' or message.text == '@NekoslaviaBot –ö–æ–ª–µ—Å–æ' or message.text == '@NekoslaviaBot –∫–æ–ª–µ—Å–æ':
        #    data = cursor.execute('SELECT * FROM neko WHERE id = '+str(message.from_user.id))
        #    data = data.fetchone()
        #    if data is None:
        #        bot.send_message(message.chat.id,'–¢—ã –Ω–µ –æ–¥–∏–Ω –∏–∑ –Ω–∞—Å, –Ω–∞–ø–∏—à–∏ /start —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –Ω–µ–∫–æ—Å–ª–∞–≤–æ–º')
        #        return
        #    nam = str(data[1]).rstrip()
        #    event = data[10]
        #    bolnitsa = int(data[6] - time.time())
        #    coins = data[11]
        #    nam = str(data[1]).rstrip()
        #    casino = data[40]
        #    photo = str(data[5]).rstrip()
        #    if bolnitsa > 0:
        #        bot.send_message(message.chat.id, '–¢—ã –≤ –±–æ–ª—å–Ω–∏—Ü–µ –¥–µ–±–∏–ª')
        #        bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
        #        return
        #    if event > 0:
        #        bot.send_message(message.chat.id, '–¢—ã –≥—É–ª—è–µ—à—å –µ–±–∞–Ω–∞—Ç')
        #        bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
        #        return
        #    if casino < 200:
        #        bot.send_message(message.chat.id, '–•—É–π —Ç–µ–±–µ, —Ç—ã –ø–æ—Ç—Ä–∞—Ç–∏–ª –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ')
        #        bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
        #        return
        #    keyboard = types.InlineKeyboardMarkup(row_width=2)
        #    callback_button1 = types.InlineKeyboardButton(text = '–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å ‚õîÔ∏è',callback_data = 'spinner ' + str(message.from_user.id))
        #    keyboard.add(callback_button1)
        #    bot.send_animation(message.chat.id,'CgACAgIAAx0CZQN7rQAC3FNjwFjfJDXiyZlObH8tlPA5dDBpfQACXiMAAiEsCEqlbaCDYfSigi0E',reply_markup=keyboard)
        #    cursor.execute('UPDATE neko SET casino = 0 WHERE id = ' + str(message.from_user.id))



        elif message.text == '–ø—É—Å–∫' or message.text == '–ü—É—Å–∫' or message.text == '@NekoslaviaBot –ü—É—Å–∫' or message.text == '@NekoslaviaBot –ø—É—Å–∫':
            data = cursor.execute('SELECT * FROM neko WHERE id = '+str(message.from_user.id))
            data = data.fetchone()
            if data is None:
                bot.send_message(message.chat.id,'–¢—ã –Ω–µ –æ–¥–∏–Ω –∏–∑ –Ω–∞—Å, –Ω–∞–ø–∏—à–∏ /start —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –Ω–µ–∫–æ—Å–ª–∞–≤–æ–º')
                return
            nam = str(data[1]).rstrip()
            event = data[10]
            bolnitsa = int(data[6] - time.time())
            coins = data[11]
            nam = str(data[1]).rstrip()
            casino = data[40]
            photo = str(data[5]).rstrip()
            gender = data[33]
            if bolnitsa > 0:
                bot.send_message(message.chat.id, '–¢—ã –≤ –±–æ–ª—å–Ω–∏—Ü–µ –¥–µ–±–∏–ª')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            if event < 0:
                bot.send_message(message.chat.id, '–¢–≤–æ—è –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫–∞ –≤ –¥–∞–Ω–∂–µ –∏–ª–∏ –Ω–∞ –∞—Ä–µ–Ω–µ')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            if event > 0:
                bot.send_message(message.chat.id, '–¢—ã –≥—É–ª—è–µ—à—å –µ–±–∞–Ω–∞—Ç')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            cost = 10
            if coins < 0:
                bot.send_message(message.chat.id, '–ê –¥–µ–Ω—å–≥–∏ –≥–¥–µ')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                return
            coins = coins - cost
            casino = casino + cost
            mas = ['üçâ','üçì','üçí','üçã']
            first = random.choice(mas)
            second = random.choice(mas)
            third = random.choice(mas)
            text = '–¢—ã –Ω–∏—á–µ–≥–æ –Ω–µ –≤—ã–∏–≥—Ä–∞–ª, –ª–æ—Ö\n\n<code>–ü—É—Å–∫</code> - –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–ª–æ—Ç—ã'
            nek = False
            # '\n\n–í–æ–∑–º–æ–∂–Ω—ã–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏:\nüçìüçì - 20 –Ω–µ–∫–æ–≥—Ä–∏–≤–µ–Ω üí∞\nüçíüçí - 20 –Ω–µ–∫–æ–≥—Ä–∏–≤–µ–Ω üí∞\nüçìüçìüçì - 50 –Ω–µ–∫–æ–≥—Ä–∏–≤–µ–Ω üí∞\nüçíüçíüçí - 70 –Ω–µ–∫–æ–≥—Ä–∏–≤–µ–Ω üí∞\nüçâüçâüçâ - 100 –Ω–µ–∫–æ–≥—Ä–∏–≤–µ–Ω üí∞\nüçãüçãüçã - —Ö–æ—Ä–Ω–∏ –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫–∞ üê±'
            # '\n\n–í–æ–∑–º–æ–∂–Ω—ã–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏:\nüçìüçì - 10 –Ω–µ–∫–æ–≥—Ä–∏–≤–µ–Ω üí∞\nüçíüçí - 10 –Ω–µ–∫–æ–≥—Ä–∏–≤–µ–Ω üí∞\nüçìüçìüçì - 25 –Ω–µ–∫–æ–≥—Ä–∏–≤–µ–Ω üí∞\nüçíüçíüçí - 35 –Ω–µ–∫–æ–≥—Ä–∏–≤–µ–Ω üí∞\nüçâüçâüçâ - 45 –Ω–µ–∫–æ–≥—Ä–∏–≤–µ–Ω üí∞\nüçãüçãüçã - —Ö–æ—Ä–Ω–∏ –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫–∞ üê±'
            if first == 'üçí' and second == 'üçí' and third == 'üçí':
                text = '–¢—ã –≤—ã–∏–≥—Ä–∞–ª —Ü–µ–ª—ã—Ö 70 –Ω–µ–∫–æ–≥—Ä–∏–≤–µ–Ω üí∞, –º–æ–∏ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è!\n\n<code>–ü—É—Å–∫</code> - –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–ª–æ—Ç—ã'
                coins = coins + 80
            elif first == 'üçì' and second == 'üçì' and third == 'üçì':
                text = '–¢—ã –≤—ã–∏–≥—Ä–∞–ª —Ü–µ–ª—ã—Ö 40 –Ω–µ–∫–æ–≥—Ä–∏–≤–µ–Ω üí∞, –º–æ–∏ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è!\n\n<code>–ü—É—Å–∫</code> - –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–ª–æ—Ç—ã'
                coins = coins + 50
            elif first == 'üçâ' and second == 'üçâ' and third == 'üçâ':
                text = '–¢—ã –≤—ã–∏–≥—Ä–∞–ª —Ü–µ–ª—ã—Ö 100 –Ω–µ–∫–æ–≥—Ä–∏–≤–µ–Ω üí∞, –º–æ–∏ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è!\n\n<code>–ü—É—Å–∫</code> - –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–ª–æ—Ç—ã'
                coins = coins + 110
            elif first == 'üçã' and second == 'üçã' and third == 'üçã':

                nek = True
                if gender == 0:
                    text = '–¢—ã –≤—ã–∏–≥—Ä–∞–ª —É–Ω–∏–∫–∞–ª—å–Ω—É—é –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫—É üê±! –ö–æ–Ω–µ—á–Ω–æ, —Ç–µ–±–µ —Ä–µ—à–∞—Ç—å, –±—Ä–∞—Ç—å –µ—ë –∏–ª–∏ –Ω–µ—Ç\n\n<code>–ü—É—Å–∫</code> - –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–ª–æ—Ç—ã'
                    photka = random.choice(ero_photos)
                    while True:
                        if photo != photka:
                            break
                        else:
                            photka = random.choice(ero_photos)
                else:
                    text = '–¢—ã –≤—ã–∏–≥—Ä–∞–ª —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –Ω–µ–∫–æ–º–∞–ª—å—á–∏–∫–∞ üê±! –ö–æ–Ω–µ—á–Ω–æ, —Ç–µ–±–µ —Ä–µ—à–∞—Ç—å, –±—Ä–∞—Ç—å –µ–≥–æ –∏–ª–∏ –Ω–µ—Ç\n\n<code>–ü—É—Å–∫</code> - –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–ª–æ—Ç—ã'
                    photka = random.choice(trap_photos)
                    while True:
                        if photo != photka:
                            break
                        else:
                            photka = random.choice(trap_photos)
            elif first == second == 'üçì' or first == third == 'üçì' or second == third == 'üçì':
                text = '–¢—ã –≤—ã–∏–≥—Ä–∞–ª 10 –Ω–µ–∫–æ–≥—Ä–∏–≤–µ–Ω üí∞, —ç—Ç–æ –º–∞–ª–æ, –Ω–æ –ª—É—á—à–µ —á–µ–º –Ω–∏—á–µ–≥–æ\n\n<code>–ü—É—Å–∫</code> - –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–ª–æ—Ç—ã'
                coins = coins + 20
            elif first == second == 'üçí' or first == third == 'üçí' or second == third == 'üçí':
                text = '–¢—ã –≤—ã–∏–≥—Ä–∞–ª 10 –Ω–µ–∫–æ–≥—Ä–∏–≤–µ–Ω üí∞, —ç—Ç–æ –º–∞–ª–æ, –Ω–æ –ª—É—á—à–µ —á–µ–º –Ω–∏—á–µ–≥–æ\n\n<code>–ü—É—Å–∫</code> - –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–ª–æ—Ç—ã'
                coins = coins + 20
            elif first == second == 'üçâ' or first == third == 'üçâ' or second == third == 'üçâ':
                text = '–¢—ã –≤—ã—à–µ–ª –≤ –Ω–æ–ª—å, –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑ –µ—Å–ª–∏ –Ω–µ –∑–∞—Å—Å–∞–ª\n\n<code>–ü—É—Å–∫</code> - –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–ª–æ—Ç—ã'
                coins = coins + 10
            cursor.execute('UPDATE neko SET casino = ' + str(casino) + ', coins = '+ str(coins) +' WHERE id = ' + str(message.from_user.id))
            markup = types.InlineKeyboardMarkup()
            switch_button2 = types.InlineKeyboardButton(text='–ü—É—Å–∫ üé∞', switch_inline_query_current_chat = "–ü—É—Å–∫")
            markup.add(switch_button2)
            key = first + ' ' + second + ' ' + third
            f = casino_pics[key]
            bot.send_photo(message.chat.id, photo = f,caption = text,parse_mode='HTML',reply_markup=markup)
            if nek == True:
                keyboard = types.InlineKeyboardMarkup(row_width=3)
                if gender == 0:
                    callback_button1 = types.InlineKeyboardButton(text = '–í–∑—è—Ç—å –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫—É üê±',callback_data = 'get ' + str(message.from_user.id) + ' 0 1')
                else:
                    callback_button1 = types.InlineKeyboardButton(text = '–í–∑—è—Ç—å –Ω–µ–∫–æ–º–∞–ª—å—á–∏–∫–∞ üê±',callback_data = 'get ' + str(message.from_user.id) + ' 1 1')
                keyboard.add(callback_button1)
                callback_button2 = types.InlineKeyboardButton(text = '–í–∑—è—Ç—å 50 –Ω–µ–∫–æ–≥—Ä–∏–≤–µ–Ω üí∞',callback_data = 'money ' + str(message.from_user.id))
                keyboard.add(callback_button2)
                bot.send_photo(message.chat.id, photo=photka,reply_markup=keyboard)
        elif message.text == '–ø–æ–∫–µ—Ä' or message.text == '–ü–æ–∫–µ—Ä' or message.text == '@NekoslaviaBot –ü–æ–∫–µ—Ä' or message.text == '@NekoslaviaBot –ø–æ–∫–µ—Ä':
                data = cursor.execute('SELECT * FROM neko WHERE id = '+str(message.from_user.id))
                data = data.fetchone()
                if data is None:
                    bot.send_message(message.chat.id,'–¢—ã –Ω–µ –æ–¥–∏–Ω –∏–∑ –Ω–∞—Å, –Ω–∞–ø–∏—à–∏ /start —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –Ω–µ–∫–æ—Å–ª–∞–≤–æ–º')
                    return
                bolnitsa = int(data[6] - time.time())
                coins = data[11]
                event = data[10]
                if bolnitsa > 0:
                    bot.send_message(message.chat.id, '–¢—ã –≤ –±–æ–ª—å–Ω–∏—Ü–µ –¥–µ–±–∏–ª')
                    bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                    return
                if coins < 20:
                    bot.send_message(message.chat.id, '–ê –¥–µ–Ω—å–≥–∏ –≥–¥–µ')
                    bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                    return
                if event > 0:
                    bot.send_message(message.chat.id, '–¢—ã –≥—É–ª—è–µ—à—å –µ–±–∞–Ω–∞—Ç')
                    bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                    return
                if check_poker(message.from_user.id):
                    bot.send_message(message.chat.id,'–ö—É–¥–∞ —Å—Ç–æ–ª—å–∫–æ, c–ø–∞–º–µ—Ä –µ–±–∞–Ω—ã–π')
                    bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                    return

                keyboard = types.InlineKeyboardMarkup(row_width=2)
                callback_button1 = types.InlineKeyboardButton(text = '–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è ‚ûï',callback_data = 'pjoin ' + str(message.from_user.id))
                callback_button2 = types.InlineKeyboardButton(text = '–°—Ç–∞—Ä—Ç ‚úÖ',callback_data = 'pstart ' + str(message.from_user.id))
                callback_button3 = types.InlineKeyboardButton(text = '–û—Ç–º–µ–Ω–∞ ‚ùå',callback_data = 'pend ' + str(message.from_user.id))
                keyboard.add(callback_button1)
                keyboard.add(callback_button2,callback_button3)
                m = bot.send_message(message.chat.id, text = '–ò–¥—ë—Ç –Ω–∞–±–æ—Ä –≤ –ø–æ–∫–µ—Ä, –∫—Ç–æ –Ω–µ –æ—Ç–∑–æ–≤—ë—Ç—Å—è —Ç–æ—Ç –ª–æ—Ö\n–í—Ö–æ–¥ –æ—Ç 20 –Ω–µ–∫–æ–≥—Ä–∏–≤–µ–Ω üí∞\n1 –∏–∑ 2 –∏–≥—Ä–æ–∫–æ–≤',reply_markup=keyboard)
                players = [message.from_user.id]
                names = [message.from_user.first_name]
                bank = [5]
                money = [coins]
                dead = []
                vabank = []
                pd = pack(players)
                nd = pack(names)
                bd = pack(bank)
                md = pack(money)
                dd = pack(dead)
                vb = pack(vabank)
                wait = int(time.time() + 600)
                cursor.execute("INSERT INTO poker (id,event,wait,chat,message,players,names,bank,money,dead,vabank) VALUES ("+str(message.from_user.id)+",-1,"+str(wait)+","+str(message.chat.id)+","+str(m.id)+",'"+str(pd)+"','"+str(nd)+"','"+str(bd)+"','"+str(md)+"','"+str(dd)+"','"+str(vb)+"')")
        elif '—Ñ–æ—Ç–æ' in message.text or '–§–æ—Ç–æ' in message.text:
            args = message.text.split()
            try:
                a = int(args[1])
                i = int(args[2])
                if a == 0:
                    bot.send_photo(message.chat.id, photo = photos[i])
                elif a == 1:
                    bot.send_photo(message.chat.id, photo = elite_photos[i])
                elif a == 2:
                    bot.send_photo(message.chat.id, photo = ero_photos[i])
                elif a == 3:
                    bot.send_photo(message.chat.id, photo = trap_photos[i])
            except:
                pass
        elif '!set' in message.text:
            args = message.text.split(' ')
            if message.reply_to_message is None:
                bot.send_message(message.chat.id, '–û—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ')
                return
            if message.from_user.id != 738931917:
                bot.send_message(message.chat.id, '–õ–æ–ª –Ω–µ—Ç')
                return
            try:
                column = args[1]
                value = args[2]
                cursor.execute("UPDATE neko SET " + column + " = " + value + " WHERE id = " + str(message.reply_to_message.from_user.id))
                bot.send_message(message.chat.id, '–î–æ–ø—É—Å—Ç–∏–º')
            except Exception as e:
                bot.send_message(message.chat.id, e)
        elif '–î–∞–≤–∏–¥' in message.text or '–¥–∞–≤–∏–¥' in message.text  or '–î–ê–í–ò–î' in message.text:
            bot.send_message(message.chat.id, '–î–∞–≤–∏–¥ —à–µ–¥–µ–≤—Ä',reply_to_message_id=message.message_id)
        elif message.reply_to_message is not None and message.reply_to_message.from_user.id == 5388861642 and message.reply_to_message.text is not None and '–ö—Ç–æ-—Ç–æ –≤—ã—Å—Ä–∞–ª:' not in message.reply_to_message.text:
            bot.send_message(message.chat.id, '–•–æ—Ö–ª–∞ —Å–ø—Ä–æ—Å–∏—Ç—å –∑–∞–±—ã–ª–∏',reply_to_message_id=message.message_id)
        elif message.chat.id == message.from_user.id:
            bot.send_message(-1001268892138, '–ö—Ç–æ-—Ç–æ –≤—ã—Å—Ä–∞–ª: '+ message.text)
@bot.message_handler(func=lambda message: True,content_types=["photo"])
def msg_photo_bot(message):
        if message.chat.id ==  -1001694727085:
            bot.send_message(message.chat.id,str(message.photo[0].file_id) + ' ' + str(message.photo[0].file_size),reply_to_message_id=message.message_id)
        if message.caption is not None:
            if '–ü–æ–∫—Ä–∞—Å–∏—Ç—å –±–∞–∑—É' in message.caption or '–ø–æ–∫—Ä–∞—Å–∏—Ç—å –±–∞–∑—É' in message.caption:
                data = cursor.execute('SELECT * FROM neko WHERE id = '+str(message.from_user.id))
                data = data.fetchone()
                if data is None:
                    bot.send_message(message.chat.id,'–¢—ã –Ω–µ –æ–¥–∏–Ω –∏–∑ –Ω–∞—Å, –Ω–∞–ø–∏—à–∏ /start —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –Ω–µ–∫–æ—Å–ª–∞–≤–æ–º')
                    return
                event = data[10]
                bolnitsa = int(data[6] - time.time())
                coins = data[11]
                base = data[8]
                if bolnitsa > 0:
                    bot.send_message(message.chat.id, '–¢—ã –≤ –±–æ–ª—å–Ω–∏—Ü–µ –¥–µ–±–∏–ª')
                    bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                    return
                if event > 0:
                    bot.send_message(message.chat.id, '–¢—ã –≥—É–ª—è–µ—à—å –µ–±–∞–Ω–∞—Ç')
                    bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                    return
                if coins < 20:
                    bot.send_message(message.chat.id, '–ê –¥–µ–Ω—å–≥–∏ –≥–¥–µ')
                    bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                    return
                if base != 6:
                    bot.send_message(message.chat.id, '–ù—É–∂–Ω–∞ –±–∞–∑–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è')
                    bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                    return
                bot.send_message(message.chat.id,'–¢—ã —É—Å–ø–µ—à–Ω–æ –Ω–∞–Ω—è–ª —Ç–∞–¥–∂–∏–∫–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–∫—Ä–∞—Å–∏–ª–∏ —Ç–µ–±–µ —Å—Ç–µ–Ω—ã. –ü–æ–ª—é–±—É–π—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFOCFix4kIdkWwblTRCUvuw5oM3e3UQwACQRoAAvMOqEi2-xyG-vtxfCkE')
                file_info = bot.get_file(message.photo[len(message.photo) - 1].file_id)
                downloaded_file = bot.download_file(file_info.file_path)
                src = 'bot/files/' + file_info.file_path
                with open(src, 'wb') as new_file:
                    new_file.write(downloaded_file)
                im1 = Image.open(src)
                im1 = im1.resize((1000, 667),  Image.ANTIALIAS)
                im2 = Image.open('bot/rm228.png')
                im1.paste(im2.convert('RGB'), (0,0), im2)
                im1.save('bot/result.png')
                im1 = Image.open(src)
                im1 = im1.resize((1000, 667),  Image.ANTIALIAS)
                im2 = Image.open('bot/rm229.png')
                im1.paste(im2.convert('RGB'), (0,0), im2)
                im1.save('bot/result2.png')
                f = open("bot/result.png","rb")
                m = bot.send_photo(message.chat.id, photo=f)
                n = m.photo[len(m.photo) - 1].file_id
                cursor.execute("UPDATE neko SET photo_base = '"+ str(n) +"' WHERE id = "+str(message.from_user.id))
                f = open("bot/result2.png","rb")
                m = bot.send_photo(message.chat.id, photo=f)
                n = m.photo[len(m.photo) - 1].file_id
                cursor.execute("UPDATE neko SET photo_debil = '"+ str(n) +"' WHERE id = "+str(message.from_user.id))
                coins = coins - 20
                cursor.execute("UPDATE neko SET coins = "+ str(coins) +" WHERE id = "+str(message.from_user.id))
                os.remove(src)
            elif '–ü–æ–∫—Ä–∞—Å–∏—Ç—å –º–∞—à–∏–Ω—É' in message.caption or '–ø–æ–∫—Ä–∞—Å–∏—Ç—å –º–∞—à–∏–Ω—É' in message.caption:
                data = cursor.execute('SELECT * FROM neko WHERE id = '+str(message.from_user.id))
                data = data.fetchone()
                if data is None:
                    bot.send_message(message.chat.id,'–¢—ã –Ω–µ –æ–¥–∏–Ω –∏–∑ –Ω–∞—Å, –Ω–∞–ø–∏—à–∏ /start —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –Ω–µ–∫–æ—Å–ª–∞–≤–æ–º')
                    return
                event = data[10]
                bolnitsa = int(data[6] - time.time())
                coins = data[11]
                car = data[9]
                if bolnitsa > 0:
                    bot.send_message(message.chat.id, '–¢—ã –≤ –±–æ–ª—å–Ω–∏—Ü–µ –¥–µ–±–∏–ª')
                    bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                    return
                if event > 0:
                    bot.send_message(message.chat.id, '–¢—ã –≥—É–ª—è–µ—à—å –µ–±–∞–Ω–∞—Ç')
                    bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                    return
                if coins < 20:
                    bot.send_message(message.chat.id, '–ê –¥–µ–Ω—å–≥–∏ –≥–¥–µ')
                    bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                    return
                if car != 1:
                    bot.send_message(message.chat.id, '–¢–µ–±–µ –Ω—É–∂–µ–Ω –Ω–µ–∫–æ–º–æ–±–∏–ª—å')
                    bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                    return
                bot.send_message(message.chat.id,'–¢—ã —É—Å–ø–µ—à–Ω–æ –Ω–∞–Ω—è–ª —Ç–∞–¥–∂–∏–∫–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–∫—Ä–∞—Å–∏–ª–∏ —Ç–µ–±–µ –º–∞—à–∏–Ω—É. –ü–æ–ª—é–±—É–π—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º')
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFOCFix4kIdkWwblTRCUvuw5oM3e3UQwACQRoAAvMOqEi2-xyG-vtxfCkE')
                file_info = bot.get_file(message.photo[len(message.photo) - 1].file_id)
                downloaded_file = bot.download_file(file_info.file_path)
                src = 'bot/files/' + file_info.file_path
                with open(src, 'wb') as new_file:
                    new_file.write(downloaded_file)
                im1 = Image.open(src)
                im1 = im1.resize((500, 300),  Image.ANTIALIAS)
                im3 = Image.open('bot/white.png')
                im3.paste(im1.convert('RGB'), (150,200))
                im1 = im3
                im2 = Image.open('bot/garag228.png')
                im1.paste(im2.convert('RGB'), (0,0), im2)
                im1.save('bot/result.png')
                f = open("bot/result.png","rb")
                m = bot.send_photo(message.chat.id, photo=f)
                n = m.photo[len(m.photo) - 1].file_id
                coins = coins - 20
                cursor.execute("UPDATE neko SET coins = "+ str(coins) +" WHERE id = "+str(message.from_user.id))
                cursor.execute("UPDATE neko SET photo_mobile = '"+ str(n) +"' WHERE id = "+str(message.from_user.id))
                os.remove(src)

            elif '–î–∏–∑–∞–π–Ω' == message.caption or '–¥–∏–∑–∞–π–Ω' == message.caption or '@NekoslaviaBot –¥–∏–∑–∞–π–Ω' == message.caption or '@NekoslaviaBot –î–∏–∑–∞–π–Ω' == message.caption:
                data = cursor.execute('SELECT * FROM neko WHERE id = '+str(message.from_user.id))
                data = data.fetchone()
                if data is None:
                    bot.send_message(message.chat.id,'–¢—ã –Ω–µ –æ–¥–∏–Ω –∏–∑ –Ω–∞—Å, –Ω–∞–ø–∏—à–∏ /start —á—Ç–æ–±—ã —Å—Ç–∞—Ç—å –Ω–µ–∫–æ—Å–ª–∞–≤–æ–º ')
                    return
                event = data[10]
                coins = data[11]
                licension = data[26]
                bolnitsa = int(data[6] - time.time())
                phot = str(data[5]).rstrip()
                new_phot = str(data[38]).rstrip()
                if new_phot != 'None':
                    phot = new_phot
                photo_design = (data[28]).rstrip()
                gender = data[33]
                chel = message.from_user.first_name
                cost = 20
                if coins < cost:
                    bot.send_message(message.chat.id, '–ê –¥–µ–Ω—å–≥–∏ –≥–¥–µ')
                    bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                    return
                if event > 0:
                    bot.send_message(message.chat.id, '–¢—ã –≥—É–ª—è–µ—à—å –µ–±–∞–Ω–∞—Ç')
                    bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                    return
                if bolnitsa > 0:
                    bot.send_message(message.chat.id, '–¢—ã –≤ –±–æ–ª—å–Ω–∏—Ü–µ –¥–µ–±–∏–ª')
                    bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEFLW9iwHwLLVxr-1f5AAG6VRQQwGfiJ1kAAjoSAAIiZ1hI6TCE3lJaV4EpBA')
                    return
                file_info = bot.get_file(message.photo[len(message.photo) - 1].file_id)
                downloaded_file = bot.download_file(file_info.file_path)
                src = 'bot/files/' + file_info.file_path
                with open(src, 'wb') as new_file:
                        new_file.write(downloaded_file)
                im0 = Image.open(src)
                w,h = im0.size
                if w > h:
                        nh = 630
                        nw = int((630/h)*w)
                else:
                        nw = 600
                        nh = int((600/w)*h)
                if nw < 600:
                        nw = 600
                if nh < 630:
                        nh = 630
                im0 = im0.resize((nw, nh),  Image.ANTIALIAS)
                im1 = Image.open('bot/white1.png')
                im1.paste(im0.convert('RGB'), (40,34))
                im0 = im1
                im1 = Image.open('bot/02.png')
                im0.paste(im1.convert('RGB'), (0,0), im1)
                im0 = im0.convert('RGBA')
                pixdata = im0.load()
                for y in range(im0.size[1]):
                        for x in range(im0.size[0]):
                            if pixdata[x,y][0]==255 and pixdata[x,y][1]==0 and pixdata[x,y][2]==0:
                                pixdata[x, y] = (255, 255, 255,0)


                if len(chel) > 18:
                    chel = (chel[:18] + '..')
                m = bot.send_photo(message.chat.id,photo=phot,caption = '–ò–¥—ë—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∞...')
                file_info = bot.get_file(m.photo[len(m.photo) - 1].file_id)
                downloaded_file = bot.download_file(file_info.file_path)
                src = 'bot/files/' + file_info.file_path
                with open(src, 'wb') as new_file:
                    new_file.write(downloaded_file)
                im1 = Image.open(src)
                w,h = im1.size
                if w > h:
                    nh = 630
                    nw = int((630/h)*w)
                else:
                    nw = 600
                    nh = int((600/w)*h)
                if nw < 600:
                    nw = 600
                if nh < 630:
                    nh = 630
                im1 = im1.resize((nw, nh),  Image.ANTIALIAS)
                im3 = Image.open('bot/white1.png')
                im3.paste(im1.convert('RGB'), (490,30))
                im1 = im3
                im1.paste(im0.convert('RGB'), (0,0), im0)
                font = ImageFont.truetype('bot/segoeprint_bold.ttf', size=35)
                draw = ImageDraw.Draw(im1)
                cur = datetime.fromtimestamp(time.time() + 3*3600)
                d = int(cur.day)
                if d < 10:
                    d = '0'+str(d)
                else:
                    d = str(d)
                md = int(cur.month)
                if md < 10:
                    md = '0'+str(md)
                else:
                    md = str(md)
                y = str(cur.year)
                old_date = d+'.'+md+'.'+y

                cur = datetime.fromtimestamp(time.time() + 3*3600 + 345600)
                d = int(cur.day)
                if d < 10:
                    d = '0'+str(d)
                else:
                    d = str(d)
                md = int(cur.month)
                if md < 10:
                    md = '0'+str(md)
                else:
                    md = str(md)
                y = str(cur.year)
                new_date = d+'.'+md+'.'+y

                text = '–í—ã–¥–∞–Ω–æ:  @NekoslaviaBot'
                x, y = 63, 65
                fillcolor = "#FFFFFF"
                shadowcolor = "#242425"

                draw.text((x-2, y), text, font=font, fill=shadowcolor)
                draw.text((x+2, y), text, font=font, fill=shadowcolor)
                draw.text((x, y-2), text, font=font, fill=shadowcolor)
                draw.text((x, y+2), text, font=font, fill=shadowcolor)

                draw.text((x-2, y-2), text, font=font, fill=shadowcolor)
                draw.text((x+2, y-2), text, font=font, fill=shadowcolor)
                draw.text((x-2, y+2), text, font=font, fill=shadowcolor)

                draw.text((x, y), text, font=font, fill=fillcolor)

                text = '–ö–æ–º—É:  ' + chel
                x, y = 63, 125

                draw.text((x-2, y), text, font=font, fill=shadowcolor)
                draw.text((x+2, y), text, font=font, fill=shadowcolor)
                draw.text((x, y-2), text, font=font, fill=shadowcolor)
                draw.text((x, y+2), text, font=font, fill=shadowcolor)

                draw.text((x-2, y-2), text, font=font, fill=shadowcolor)
                draw.text((x+2, y-2), text, font=font, fill=shadowcolor)
                draw.text((x-2, y+2), text, font=font, fill=shadowcolor)

                draw.text((x, y), text, font=font, fill=fillcolor)

                text = '–î–∞—Ç–∞ –≤—ã–¥–∞—á–∏:  ' + old_date
                x, y = 63, 185

                draw.text((x-2, y), text, font=font, fill=shadowcolor)
                draw.text((x+2, y), text, font=font, fill=shadowcolor)
                draw.text((x, y-2), text, font=font, fill=shadowcolor)
                draw.text((x, y+2), text, font=font, fill=shadowcolor)

                draw.text((x-2, y-2), text, font=font, fill=shadowcolor)
                draw.text((x+2, y-2), text, font=font, fill=shadowcolor)
                draw.text((x-2, y+2), text, font=font, fill=shadowcolor)

                draw.text((x, y), text, font=font, fill=fillcolor)

                text = '–î–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ:  ' + new_date
                x, y = 63, 245

                draw.text((x-2, y), text, font=font, fill=shadowcolor)
                draw.text((x+2, y), text, font=font, fill=shadowcolor)
                draw.text((x, y-2), text, font=font, fill=shadowcolor)
                draw.text((x, y+2), text, font=font, fill=shadowcolor)

                draw.text((x-2, y-2), text, font=font, fill=shadowcolor)
                draw.text((x+2, y-2), text, font=font, fill=shadowcolor)
                draw.text((x-2, y+2), text, font=font, fill=shadowcolor)

                draw.text((x, y), text, font=font, fill=fillcolor)

                font = ImageFont.truetype('bot/comicbd.ttf', size=52)
                text = '–õ–ò–¶–ï–ù–ó–ò–Ø –ù–ê\n–ù–ï–ö–û–î–ï–í–û–ß–ö–£'
                x, y = 95, 500
                if gender == 1:
                    text = '–õ–ò–¶–ï–ù–ó–ò–Ø –ù–ê\n–ù–ï–ö–û–ú–ê–õ–¨–ß–ò–ö–ê'
                    x, y = 65, 500
                fillcolor = "#F6B1CB"

                draw.text((x-2, y), text, font=font, fill=shadowcolor)
                draw.text((x+2, y), text, font=font, fill=shadowcolor)
                draw.text((x, y-2), text, font=font, fill=shadowcolor)
                draw.text((x, y+2), text, font=font, fill=shadowcolor)

                draw.text((x-2, y-2), text, font=font, fill=shadowcolor)
                draw.text((x+2, y-2), text, font=font, fill=shadowcolor)
                draw.text((x-2, y+2), text, font=font, fill=shadowcolor)

                draw.text((x, y), text, font=font, fill=fillcolor)


                im1.save('bot/result.png')
                f = open("bot/result.png","rb")
                bot.delete_message(chat_id=m.chat.id, message_id=m.message_id)
                m = bot.send_photo(message.chat.id, photo=f,caption = '–í–æ—Ç —Ç–≤–æ—è –Ω–æ–≤–∞—è –ª–∏—Ü–µ–Ω–∑–∏—è üé´, –Ω–µ —Ç–µ—Ä—è–π –µ—ë –∏ –Ω–µ –∑–∞–±—ã–≤–∞–π –≤–æ–≤—Ä–µ–º—è –ø—Ä–æ–¥–ª–µ–≤–∞—Ç—å')
                fil = m.photo[len(m.photo) - 1].file_id
                fil2 = message.photo[len(message.photo) - 1].file_id
                coins = coins - cost
                cursor.execute("UPDATE neko SET coins = "+ str(coins) +" WHERE id = "+str(message.from_user.id))
                cursor.execute("UPDATE neko SET licension = "+ str(time.time() + 345600) +" WHERE id = "+str(message.from_user.id))
                cursor.execute("UPDATE neko SET photo_licension = '"+ fil +"' WHERE id = "+str(message.from_user.id))
                cursor.execute("UPDATE neko SET photo_design = '"+ fil2 +"' WHERE id = "+str(message.from_user.id))
                os.remove(src)
@bot.message_handler(func=lambda message: True,content_types=["animation"])
def msg_anim_bot(message):
        if message.chat.id ==  -1001694727085:
            try:
                bot.send_message(message.chat.id,str(message.animation.file_id),reply_to_message_id=message.message_id)
                bot.send_animation(message.chat.id,message.animation.file_id)
            except Exception as e:
                bot.send_message(-1001694727085,e)

def pvp_text(nam1,nam2,maxhp1,maxhp2,hp1,hp2,blocks1,blocks2,skills1,skills2):
    txt = nam1 + ' \n[ '
    i = 1
    while i <= maxhp1:
        if (i <= hp1):
            txt = txt + 'üü©'
        else:
            txt = txt + 'üü•'
        i = i + 1
    txt = txt + ' ]'
    if blocks1 > 0:
        for i in range(blocks1):
            txt = txt + 'üõ° '
    if 8 in skills1 or 88 in skills1 or 6 in skills1:
        txt = txt + '\n'
        if 8 in skills1:
            txt = txt + '‚òòÔ∏è‚òòÔ∏è'
        elif 88 in skills1:
            txt = txt + '‚òòÔ∏è'
        if 6 in skills1:
            txt = txt + '‚úùÔ∏è'
        txt = txt + '\n\n'
    else:
        txt = txt + '\n\n'


    txt = txt + nam2 + '\n[ '
    i = 1
    while i <= maxhp2:
        if i <= hp2:
            txt = txt + 'üü©'
        else:
            txt = txt + 'üü•'
        i = i + 1
    txt = txt + ' ]'
    if blocks2 > 0:
        for i in range(blocks2):
            txt = txt + 'üõ° '
    if 8 in skills2 or 88 in skills2 or 6 in skills2:
        txt = txt + '\n'
        if 8 in skills2:
            txt = txt + '‚òòÔ∏è‚òòÔ∏è'
        elif 88 in skills2:
            txt = txt + '‚òòÔ∏è'
        if 6 in skills2:
            txt = txt + '‚úùÔ∏è'
        txt = txt + '\n\n'
    else:
        txt = txt + '\n\n'

    return txt

def poker_image(cards,event):
    im1 = Image.open('bot/table.png')
    im2 = Image.open('bot/cardback.png')
    im3 = Image.open('bot/cards.png')
    for i in range(5):
        card = cards[i]
        b = round((card%1)*10)
        a = round(card)
        if i > event:
            im1.paste(im2.convert('RGB'), (82+i*215,203), im2)
        else:
            x = 215*(a-2)
            y = 295*(b-1)
            crop = im3.crop((x, y, x+215, y+295))
            im1.paste(crop.convert('RGB'), (82+i*215,203), crop)

    im1.save('bot/result.png')
    f = open("bot/result.png","rb")
    return f
def notify_callback_query(call,txt):
    try:
        bot.answer_callback_query(call.id,text = txt,show_alert = True)
    except:
        try:
            bot.send_message(call.from_user.id, text = txt, parse_mode='HTML')
        except:
            pass
def answer_callback_query(call,txt):
    try:
        bot.answer_callback_query(call.id,text = txt)
    except:
        pass
def bone_atack(field,atack,bone):
    if bone == 0 or atack == 0:
        return
    #if atack == 1:
    #    a1 = random.randint(0,35)
    #    while field[a1] == 6:
    #        a1 = random.randint(0,35)
    #    field[a1] = 6
    #    return
    a1 = random.randint(0,35)
    a2 = random.randint(0,35)
    while a1 == a2 or field[a1] == 6 or field[a2] == 6:
        a1 = random.randint(0,35)
        a2 = random.randint(0,35)
    field[a1] = 6
    field[a2] = 6
    return
    # elif atack >= 3:
    #    a1 = random.randint(0,35)
    #    a2 = random.randint(0,35)
    #    a3 = random.randint(0,35)
    #    while a1 == a2 or a1 == a3 or a2 == a3 or field[a1] == 6 or field[a2] == 6 or field[a3] == 6:
    #        a1 = random.randint(0,35)
    #        a2 = random.randint(0,35)
    #        a3 = random.randint(0,35)
    #    field[a1] = 6
    #    field[a2] = 6
    #    field[a3] = 6
    #    return
@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
      if call.data == "no":
        answer_callback_query(call,'–õ–æ—Ö')
      elif "decline" in call.data:
        args = call.data.split()
        one = int(args[1])
        two = int(args[2])
        if call.from_user.id != two:
            answer_callback_query(call,'–ü–∞—à–æ–ª –Ω–∞—Ö—É–π')
            return
        cursor.execute("DELETE FROM battles WHERE one = "+str(one)+" AND two = " + str(two))
        data = cursor.execute('SELECT * FROM neko WHERE id = '+str(two))
        data = data.fetchone()
        if data is None:
            answer_callback_query(call,'–ü–∞—à–æ–ª –Ω–∞—Ö—É–π')
            return
        answer_callback_query(call,'–£—Å–ø–µ—à–Ω–æ')
        chel = str(data[16]).rstrip()
        txt = '<a href="tg://user?id='+str(two)+'">'+str(chel)+'</a> –æ–∫–∞–∑–∞–ª—Å—è —Å—Å—ã–∫–ª–æ–º...'
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,text=txt,parse_mode='HTML')
      elif "aremove" in call.data:
        args = call.data.split()
        one = int(args[1])
        two = int(args[2])
        if call.from_user.id != one:
            answer_callback_query(call,'–ü–∞—à–æ–ª –Ω–∞—Ö—É–π')
            return
        answer_callback_query(call,'–£—Å–ø–µ—à–Ω–æ')
        cursor.execute("DELETE FROM battles WHERE one = "+str(one)+" AND two = " + str(two))
        bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)

      elif "accept" in call.data:
        args = call.data.split()
        one = int(args[1])
        two = int(args[2])
        cost = int(args[3])
        if call.from_user.id == one:
            answer_callback_query(call,'–ü–∞—à–æ–ª –Ω–∞—Ö—É–π')
            return
        if call.from_user.id != two and two != 0:
            answer_callback_query(call,'–ü–∞—à–æ–ª –Ω–∞—Ö—É–π')
            return
        data = cursor.execute('SELECT * FROM neko WHERE id = ' + str(one))
        data = data.fetchone()
        rep1 = data[2]
        nam1 = str(data[1]).rstrip()
        arena1 = int(data[17] - time.time())
        b1 = int(data[6] - time.time())
        c1 = data[11]
        phot1 = str(data[5]).rstrip()
        new_phot = str(data[38]).rstrip()
        if new_phot != 'None':
            phot1 = new_phot
        skill1 = data[30]
        skill2 = data[31]
        gender1 = data[33]
        bones1 = data[43]
        skills1 = [skill1,skill2]
        if rep1 < 20 or arena1 > 0 or b1 > 0 or c1 < cost:
            answer_callback_query(call,'–ü—Ä–æ–±–ª–µ–º–∞ –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è')
            return
        data = cursor.execute('SELECT * FROM neko WHERE id = ' + str(call.from_user.id))
        data = data.fetchone()
        rep2 = data[2]
        nam2 = str(data[1]).rstrip()
        arena2 = int(data[17] - time.time())
        b2 = int(data[6] - time.time())
        c2 = data[11]
        phot2 = str(data[5]).rstrip()
        new_phot = str(data[38]).rstrip()
        if new_phot != 'None':
            phot2 = new_phot
        skill1 = data[30]
        skill2 = data[31]
        gender2 = data[33]
        bones2 = data[43]
        skills2 = [skill1,skill2]
        if rep2 < 20:
            txt = '–ù–µ–∫–æ–¥–µ–≤–æ—á–∫–∞ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–æ–≤–µ—Ä—è–µ—Ç —Ç–µ–±–µ'
            if gender2 == 1:
                txt = '–ù–µ–∫–æ–º–∞–ª—å—á–∏–∫ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–æ–≤–µ—Ä—è–µ—Ç —Ç–µ–±–µ'
            answer_callback_query(call,txt)
            return
        if arena2 > 0:
            txt = '–î–∞–π –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫–µ –æ—Ç–¥–æ—Ö–Ω—É—Ç—å'
            if gender2 == 1:
                txt = '–î–∞–π –Ω–µ–∫–æ–º–∞–ª—å—á–∏–∫—É –æ—Ç–¥–æ—Ö–Ω—É—Ç—å'
            answer_callback_query(call,txt)
            return
        if b2 > 0:
            answer_callback_query(call,'–¢—ã –≤ –±–æ–ª—å–Ω–∏—Ü–µ')
            return
        if c2 < cost:
            answer_callback_query(call,'–ê –¥–µ–Ω—å–≥–∏ –≥–¥–µ')
            return
        answer_callback_query(call,'–£—Å–ø–µ—à–Ω–æ')
        field1 = []
        field2 = []
        sym = ['üü•','üüß','üü°','üü¢','üíô','‚≠êÔ∏è','ü¶¥']
        b = [0,1,2,3,4]
        if 2 in skills1:
            b.append(2)
        if 3 in skills1:
            b.append(4)
        for i in range(36):
            s = random.choice(b)
            field1.append(s)
        b = [0,1,2,3,4]
        if 2 in skills2:
            b.append(2)
        if 3 in skills2:
            b.append(4)
        for i in range(36):
            s = random.choice(b)
            field2.append(s)
        fielder(field1,skills1[0],skills1[1],False)
        fielder(field2,skills2[0],skills2[1],False)
        fd1 = pack(field1)
        fd2 = pack(field2)
        m = bot.send_photo(-1001694727085,photo=phot1)
        file_info = bot.get_file(m.photo[len(m.photo) - 1].file_id)
        downloaded_file = bot.download_file(file_info.file_path)
        src = 'bot/files/' + file_info.file_path
        with open(src, 'wb') as new_file:
            new_file.write(downloaded_file)
        im1 = Image.open(src)
        w,h = im1.size
        if w > h:
            nh = 800
            nw = int((800/h)*w)
        else:
            nw = 781
            nh = int((781/w)*h)
        if nw < 781:
            nw = 781
        if nh < 800:
            nh = 800
        im1 = im1.resize((nw, nh),  Image.ANTIALIAS)
        im3 = Image.open('bot/white2.png')
        im3.paste(im1.convert('RGB'), (0,0))
        im1 = im3
        if bones2 > 0:
            im2 = Image.open('bot/bone_hands.png')
        else:
            im2 = Image.open('bot/hands.png')
        im1.paste(im2.convert('RGBA'), (0,0),im2)
        im1.save('bot/result.png')
        f = open("bot/result.png","rb")
        m = bot.send_photo(-1001694727085, photo=f)
        image1 = m.photo[len(m.photo) - 1].file_id
        os.remove(src)

        m = bot.send_photo(-1001694727085,photo=phot2)
        file_info = bot.get_file(m.photo[len(m.photo) - 1].file_id)
        downloaded_file = bot.download_file(file_info.file_path)
        src = 'bot/files/' + file_info.file_path
        with open(src, 'wb') as new_file:
            new_file.write(downloaded_file)
        im1 = Image.open(src)
        w,h = im1.size
        if w > h:
            nh = 800
            nw = int((800/h)*w)
        else:
            nw = 781
            nh = int((781/w)*h)
        if nw < 781:
            nw = 781
        if nh < 800:
            nh = 800
        im1 = im1.resize((nw, nh),  Image.ANTIALIAS)
        im3 = Image.open('bot/white2.png')
        im3.paste(im1.convert('RGB'), (0,0))
        im1 = im3
        if bones1 > 0:
            im2 = Image.open('bot/bone_hands.png')
        else:
            im2 = Image.open('bot/hands.png')
        im1.paste(im2.convert('RGBA'), (0,0),im2)
        im1.save('bot/result.png')
        f = open("bot/result.png","rb")
        m = bot.send_photo(-1001694727085, photo=f)
        image2 = m.photo[len(m.photo) - 1].file_id
        os.remove(src)
        arena = int(time.time()+1800)
        cursor.execute('UPDATE neko SET arena = ' + str(arena) + ' WHERE id = ' + str(one) + ' OR id = ' + str(call.from_user.id))
        wait = int(time.time()+1200)
        cursor.execute("UPDATE battles SET bone_one = " + str(bones1) + ", bone_two = " + str(bones2) + ", imageone = '" + image1 + "',imagetwo = '" + image2 + "',event = 1,selected = -1,nameone = '" + nam1 + "',nametwo = '" + nam2 + "', wait = " + str(wait) + ",two = " + str(call.from_user.id) + ",fieldone = '" + str(fd1) + "',fieldtwo = '" + str(fd2) + "' WHERE one = " + str(one) + " AND two = " + str(two))
        two = call.from_user.id
        txt = '–ù–µ–∫–æ–¥–µ–≤–æ—á–∫–∏ –≤—ã–π–¥—É—Ç –Ω–∞ –∞—Ä–µ–Ω—É —á–µ—Ä–µ–∑ 15 —Å–µ–∫—É–Ω–¥, —Å–æ–±–∏—Ä–∞–π—Ç–µ —Å–∏–º–≤–æ–ª—ã –ø–æ 4 –≤ —Ä—è–¥ —á—Ç–æ–±—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å —Å–≤–æ–∏—Ö –Ω–µ–∫–æ–¥–µ–≤–æ—á–µ–∫ —Å —Ç—Ä–∏–±—É–Ω\n\nüü• üüß - –±–ª–æ–∫\n\nüü° üü¢ - –∞—Ç–∞–∫–∞\n\nüíô - –ø–ª—é—Å –æ–¥–∏–Ω —Ö–æ–¥'
        if gender1 == 1 or gender2 == 1:
            txt = '–ù–µ–∫–æ–¥–µ–≤–æ—á–∫–∏ –∏ –Ω–µ–∫–æ–º–∞–ª—å—á–∏–∫–∏ –≤—ã–π–¥—É—Ç –Ω–∞ –∞—Ä–µ–Ω—É —á–µ—Ä–µ–∑ 15 —Å–µ–∫—É–Ω–¥, —Å–æ–±–∏—Ä–∞–π—Ç–µ —Å–∏–º–≤–æ–ª—ã –ø–æ 4 –≤ —Ä—è–¥ —á—Ç–æ–±—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å —Å–≤–æ–∏—Ö –Ω–µ–∫–æ —Å —Ç—Ä–∏–±—É–Ω\n\nüü• üüß - –±–ª–æ–∫\n\nüü° üü¢ - –∞—Ç–∞–∫–∞\n\nüíô - –ø–ª—é—Å –æ–¥–∏–Ω —Ö–æ–¥'
        if gender1 == 1 and gender2 == 1:
            txt = '–ù–µ–∫–æ–º–∞–ª—å—á–∏–∫–∏ –≤—ã–π–¥—É—Ç –Ω–∞ –∞—Ä–µ–Ω—É —á–µ—Ä–µ–∑ 15 —Å–µ–∫—É–Ω–¥, —Å–æ–±–∏—Ä–∞–π—Ç–µ —Å–∏–º–≤–æ–ª—ã –ø–æ 4 –≤ —Ä—è–¥ —á—Ç–æ–±—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å —Å–≤–æ–∏—Ö –Ω–µ–∫–æ–º–∞–ª—å—á–∏–∫–æ–≤ —Å —Ç—Ä–∏–±—É–Ω\n\nüü• üüß - –±–ª–æ–∫\n\nüü° üü¢ - –∞—Ç–∞–∫–∞\n\nüíô - –ø–ª—é—Å –æ–¥–∏–Ω —Ö–æ–¥'
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,text=txt,parse_mode='HTML')
        b = [one,two]
        turn = random.choice(b)
        if turn == one:
            field = field1
            skills = skills1
        else:
            field = field2
            skills = skills2
        blocks1 = 0
        blocks2 = 0
        turns = 1
        if 7 in skills:
            turns = 4
            skills.remove(7)
            skills.append(0)
        if rep1 > rep2:
            maxhp1 = 8
            hp1 = 8
            d = rep1/8
            maxhp2 = math.ceil(rep2/d)
            hp2 = maxhp2
        if rep1 < rep2:
            maxhp2 = 8
            hp2 = 8
            d = rep2/8
            maxhp1 = math.ceil(rep1/d)
            hp1 = maxhp1
        if rep1 == rep2:
            maxhp2 = 8
            hp2 = 8
            maxhp1 = 8
            hp1 = 8

        keyboard = types.InlineKeyboardMarkup(row_width=6)
        stack = []
        dat = 'pvp ' + str(one) + ' ' + str(two) + ' ' + str(turn) + ' ' + str(hp1) + ' ' + str(hp2) + ' ' + str(maxhp1) + ' ' + str(maxhp2) + ' ' + str(turns) + ' ' + str(blocks1) + ' ' + str(blocks2)
        for i in range(36):
            callback_button = types.InlineKeyboardButton(text = sym[field[i]],callback_data = dat + ' ' + str(i) + ' 1 1 1')
            stack.append(callback_button)
            if len(stack) == 6:
                keyboard.add(stack[0],stack[1],stack[2],stack[3],stack[4],stack[5])
                stack = []
        if skills[0] > 100:
            reroll = types.InlineKeyboardButton(text = skill_names[skills[0]-100],callback_data = dat + ' ' + str(-skills[0]) + ' 0 1 1')
            keyboard.add(reroll)
        if skills[1] > 100:
            reroll = types.InlineKeyboardButton(text = skill_names[skills[1]-100],callback_data = dat + ' ' + str(-skills[1]) + ' 1 0 1')
            keyboard.add(reroll)
        txt = pvp_text(nam1,nam2,maxhp1,maxhp2,hp1,hp2,0,0,skills1,skills2)
        if turn == one:
            nam = nam1
        else:
            nam = nam2
        txt = txt + '–•–æ–¥–∏—Ç <a href="tg://user?id='+str(turn)+'">'+str(nam)+'</a>\n'
        txt = txt + '–û—Å—Ç–∞–ª–æ—Å—å —Ö–æ–¥–æ–≤ –¥–æ –∞—Ç–∞–∫–∏ –≤—Ä–∞–≥–∞:  ' + str(turns)
        time.sleep(15)
        sk1 = pack(skills1)
        sk2 = pack(skills2)
        if turn == one:
            image = image2
        else:
            image = image1
        m = bot.send_photo(call.message.chat.id, photo=image,caption = txt,reply_markup=keyboard,parse_mode='HTML')
        bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)
        cursor.execute("UPDATE battles SET event = 2, chat = " + str(m.chat.id) + ", skillone = '" + str(sk1) + "',skilltwo = '" + str(sk2) + "', message = " + str(m.id) + " WHERE one = " + str(one) + " AND two = " + str(two))

      elif "pvp" in call.data:
        args = call.data.split()
        one = int(args[1])
        two = int(args[2])
        turn = int(args[3])
        hp1 = int(args[4])
        hp2 = int(args[5])
        maxhp1 = int(args[6])
        maxhp2 = int(args[7])
        turns = int(args[8])
        blocks1 = int(args[9])
        blocks2 = int(args[10])
        pos = int(args[11])
        rer1 = int(args[12])
        rer2 = int(args[13])
        starter = int(args[14])
        if call.from_user.id != turn:
            answer_callback_query(call,'–ù–µ —Ç–≤–æ–π —Ö–æ–¥')

            return
        time.sleep(0.25)
        data = cursor.execute('SELECT * FROM battles WHERE one = '+str(one)+' AND two = ' + str(two))
        data = data.fetchone()
        if data is None:
            answer_callback_query(call,'–ü–∞—à–æ–ª –Ω–∞—Ö—É–π')

            return
        cost = data[4]
        field1 = unpack(data[7])
        field2 = unpack(data[8])
        selected = data[9]
        nam1 = (data[10]).rstrip()
        nam2 = (data[11]).rstrip()
        image1 = (data[12]).rstrip()
        image2 = (data[13]).rstrip()
        skills1 = unpack(data[14])
        skills2 = unpack(data[15])
        bone1 = data[16]
        bone2 = data[17]
        atack = 0
        ability = 0
        if turn == one:
            field = field1
            skills = skills1
            hp = hp1
            maxhp = maxhp1
        else:
            field = field2
            skills = skills2
            hp = hp2
            maxhp = maxhp2
        if pos < 0:
            ability = abs(pos)
            if ability == 101:
                if selected == -1:
                    answer_callback_query(call,'–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏ —Ñ–∏–≥—É—Ä—É')
                    return
                if field[selected] == 5:
                    answer_callback_query(call,'–≠—Ç–æ —É–∂–µ –∑–≤–µ–∑–¥–∞')
                    return
                field[selected] = 5
            elif ability == 102:
                if selected == -1:
                    answer_callback_query(call,'–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏ —Ñ–∏–≥—É—Ä—É')
                    return
                field[selected] = -1
            elif ability == 103:
                random.shuffle(field)
            elif ability == 104:
                turns -= 1
                atack += 1
            elif ability == 105:
                turns -= 1
                if turn == one:
                    blocks1 += 1
                else:
                    blocks2 += 1
            elif ability == 106:
                a1 = random.randint(0,35)
                a2 = random.randint(0,35)
                while a1 == a2 or field[a1] == 5 or field[a2] == 5:
                    a1 = random.randint(0,35)
                    a2 = random.randint(0,35)
                field[a1] = 5
                field[a2] = 5
            elif ability == 107:
                if selected == -1:
                    answer_callback_query(call,'–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏ —Ñ–∏–≥—É—Ä—É')
                    return
                if field.count(field[selected]) < 11:
                    answer_callback_query(call,'–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ñ–∏–≥—É—Ä')
                    return
                figa = field[selected]
                for i in range(36):
                    if field[i] == figa:
                        field[i] = -1
                if figa == 0 or figa == 1:
                    if turn == one:
                        blocks1 += 1
                    else:
                        blocks2 += 1
                elif figa == 2 or figa == 3:
                    atack = atack + 1
                elif figa == 4:
                    turns = turns + 1
            elif ability == 108:
                if selected == -1:
                    answer_callback_query(call,'–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏ —Ñ–∏–≥—É—Ä—É')
                    return
                res = math.ceil(selected/6 + 0.1)
                for i in range((res-1)*6,res*6):
                    field[i] = -1
            if ability == 109:
                if selected == -1:
                    answer_callback_query(call,'–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏ —Ñ–∏–≥—É—Ä—É')
                    return
                if field[selected] != 5:
                    answer_callback_query(call,'–≠—Ç–æ –Ω–µ –∑–≤–µ–∑–¥–∞')
                    return
                field[selected] = -1
                turns = turns + 1
            elif ability == 110:
                if selected == -1:
                    answer_callback_query(call,'–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏ —Ñ–∏–≥—É—Ä—É')
                    return
                figa = field[selected]
                a1 = random.randint(0,35)
                a2 = random.randint(0,35)
                while a1 == a2 or field[a1] == figa or field[a2] == figa:
                    a1 = random.randint(0,35)
                    a2 = random.randint(0,35)
                field[a1] = figa
                field[a2] = figa
            selected = -1
            answer_callback_query(call,'–£—Å–ø–µ—à–Ω–æ')
        else:
                if selected == -1:
                    answer_callback_query(call,'–í—ã–±—Ä–∞–Ω–æ')
                    selected = pos
                    cursor.execute("UPDATE battles SET selected = " + str(selected) + " WHERE one = "+ str(one) + " AND two = " + str(two))

                    return
                if selected == pos:
                    answer_callback_query(call,'–í—ã–±–æ—Ä –æ—Ç–º–µ–Ω–µ–Ω')
                    selected = -1
                    cursor.execute("UPDATE battles SET selected = " + str(selected) + " WHERE one = "+ str(one) + " AND two = " + str(two))

                    return
                d = selected - pos
                if d != 1 and d != -1 and d != 6 and d != -6:
                    answer_callback_query(call,'–ú–æ–∂–Ω–æ –º–µ–Ω—è—Ç—å —Ç–æ–ª—å–∫–æ —Å–æ—Å–µ–¥–Ω–∏–µ, –≤—ã–±–æ—Ä –æ—Ç–º–µ–Ω–µ–Ω')
                    selected = -1
                    cursor.execute("UPDATE battles SET selected = " + str(selected) + " WHERE one = "+ str(one) + " AND two = " + str(two))

                    return
                if field[pos] == field[selected]:
                    answer_callback_query(call,'–ö–ª–µ—Ç–∫–∏ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ, –≤—ã–±–æ—Ä –æ—Ç–º–µ–Ω–µ–Ω')
                    selected = -1
                    cursor.execute("UPDATE battles SET selected = " + str(selected) + " WHERE one = "+ str(one) + " AND two = " + str(two))

                    return
                answer_callback_query(call,'–ú–µ–Ω—è—é...')
                d = field[pos]
                field[pos] = field[selected]
                field[selected] = d
                turns = turns - 1
                selected = -1

        result = fielder(field,skills[0],skills[1],True)
        atack += result[0]
        if turn == one:
            blocks1 = blocks1 + result[1]
            if 1 in skills and ability != 105:
                hp1 = hp1 + blocks1
                blocks1 = 0
                if hp1 > maxhp1:
                    hp1 = maxhp1
        else:
            blocks2 = blocks2 + result[1]
            if 1 in skills and ability != 105:
                hp2 = hp2 + blocks2
                blocks2 = 0
                if hp2 > maxhp2:
                    hp2 = maxhp2
        turns = turns + result[2]
        if blocks1 > 3:
            blocks1 = 3
        if blocks2 > 3:
            blocks2 = 3

        if 5 in skills and hp == maxhp and atack != 0:
            atack = atack + 1
        if 4 in skills and hp <= 2 and atack != 0:
            atack = atack + 1
        if 10 in skills and turns == 0 and atack != 0:
            if turn == one and blocks1 == 0:
                atack = atack + 1
            elif turn == two and blocks2 == 0:
                atack = atack + 1

        if turn == one and atack != 0:
            r = True
            bone_atack(field2,atack,bone1)
            if 8 in skills2 or 88 in skills2:
                k = random.randint(1,20)
                if k == 1:
                    r = False
            if r:
                if blocks2 >= atack:
                    blocks2 = blocks2 - atack
                else:
                    atack = atack - blocks2
                    blocks2 = 0
                    hp2 = hp2 - atack
            else:
                if 8 in skills2:
                    skills2.remove(8)
                    skills2.append(88)
                else:
                    skills2.remove(88)
                    skills2.append(0)
            if hp2 <= 0:
                if 6 in skills2:
                    skills2.remove(6)
                    skills2.append(0)
                    hp2 = 1
                else:
                    hp2 = 0
                    txt = pvp_text(nam1,nam2,maxhp1,maxhp2,hp1,hp2,blocks1,blocks2,skills1,skills2)
                    bot.edit_message_media(media=telebot.types.InputMedia(media=call.message.photo[len(call.message.photo) - 1].file_id,caption = txt,type="photo",parse_mode='HTML'),chat_id=call.message.chat.id, message_id=call.message.message_id)
                    time.sleep(1)
                    newcost = cost
                    cursor.execute('DELETE FROM battles WHERE one = '+str(one)+' AND two = ' + str(two))
                    data = cursor.execute('SELECT * FROM neko WHERE id = ' + str(one))
                    data = data.fetchone()
                    c1 = data[11]
                    w1 = data[15]
                    gender1 = data[33]
                    c1 = c1 + newcost
                    w1 = w1 + 1
                    cursor.execute('UPDATE neko SET wins = ' + str(w1) + ',coins = ' + str(c1) + ' WHERE id = ' + str(one))
                    txt = '–ü–æ–±–µ–¥–∏–ª–∞ –¥—Ä—É–∂–±–∞, –Ω–∞–µ–±–∞–ª, –ø–æ–±–µ–¥–∏–ª–∞ <a href="tg://user?id='+str(one)+'">'+str(nam1)+'</a>. –í—ã–∏–≥—Ä—ã—à —Å–æ—Å—Ç–∞–≤–∏–ª ' + str(newcost) + ' üí∞, –≤–ª–∞–¥–µ–ª—å—Ü–∞–º –∞—Ä–µ–Ω—ã –ø–æ–Ω—Ä–∞–≤–∏–ª—Å—è –±–æ–π –∏ –æ–Ω–∏ –Ω–µ –≤–∑—è–ª–∏ –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤. –ù–µ –∑–∞–±—É–¥—å—Ç–µ –¥–∞—Ç—å –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫–∞–º –æ—Ç–¥–æ—Ö–Ω—É—Ç—å'
                    if gender1 == 1:
                        txt = '–ü–æ–±–µ–¥–∏–ª–∞ –¥—Ä—É–∂–±–∞, –Ω–∞–µ–±–∞–ª, –ø–æ–±–µ–¥–∏–ª <a href="tg://user?id='+str(one)+'">'+str(nam1)+'</a>. –í—ã–∏–≥—Ä—ã—à —Å–æ—Å—Ç–∞–≤–∏–ª ' + str(newcost) + ' üí∞, –≤–ª–∞–¥–µ–ª—å—Ü–∞–º –∞—Ä–µ–Ω—ã –ø–æ–Ω—Ä–∞–≤–∏–ª—Å—è –±–æ–π –∏ –æ–Ω–∏ –Ω–µ –≤–∑—è–ª–∏ –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤. –ù–µ –∑–∞–±—É–¥—å—Ç–µ –¥–∞—Ç—å –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫–∞–º –æ—Ç–¥–æ—Ö–Ω—É—Ç—å'
                    bot.send_message(call.message.chat.id, txt ,parse_mode='HTML')
                    data = cursor.execute('SELECT * FROM neko WHERE id = ' + str(two))
                    data = data.fetchone()
                    c2 = data[11]
                    c2 = c2 - cost
                    cursor.execute('UPDATE neko SET coins = ' + str(c2) + ' WHERE id = ' + str(two))
                    cursor.execute('UPDATE neko SET bones = bones - 1 WHERE id = ' + str(one) + ' AND bones > 0')
                    cursor.execute('UPDATE neko SET bones = bones - 1 WHERE id = ' + str(two) + ' AND bones > 0')
                    return
        if turn == two and atack != 0:
            r = True
            bone_atack(field1,atack,bone2)
            if 8 in skills1 or 88 in skills1:
                k = random.randint(1,20)
                if k == 1:
                    r = False
            if r:
                if blocks1 >= atack:
                    blocks1 = blocks1 - atack
                else:
                    atack = atack - blocks1
                    blocks1 = 0
                    hp1 = hp1 - atack
            else:
                if 8 in skills1:
                    skills1.remove(8)
                    skills1.append(88)
                else:
                    skills1.remove(88)
                    skills1.append(0)

            if hp1 <= 0:
                if 6 in skills1:
                    skills1.remove(6)
                    skills1.append(0)
                    hp1 = 1
                else:
                    hp1 = 0
                    txt = pvp_text(nam1,nam2,maxhp1,maxhp2,hp1,hp2,blocks1,blocks2,skills1,skills2)

                    bot.edit_message_media(media=telebot.types.InputMedia(media=call.message.photo[len(call.message.photo) - 1].file_id,caption = txt,type="photo",parse_mode='HTML'),chat_id=call.message.chat.id, message_id=call.message.message_id)
                    time.sleep(1)
                    newcost = cost
                    cursor.execute('DELETE FROM battles WHERE one = '+str(one)+' AND two = ' + str(two))
                    data = cursor.execute('SELECT * FROM neko WHERE id = ' + str(two))
                    data = data.fetchone()
                    c1 = data[11]
                    w1 = data[15]
                    gender2 = data[33]
                    c1 = c1 + newcost
                    w1 = w1 + 1
                    cursor.execute('UPDATE neko SET wins = ' + str(w1) + ',coins = ' + str(c1) + ' WHERE id = ' + str(two))
                    txt = '–ü–æ–±–µ–¥–∏–ª–∞ –¥—Ä—É–∂–±–∞, –Ω–∞–µ–±–∞–ª, –ø–æ–±–µ–¥–∏–ª–∞ <a href="tg://user?id='+str(two)+'">'+str(nam2)+'</a>. –í—ã–∏–≥—Ä—ã—à —Å–æ—Å—Ç–∞–≤–∏–ª ' + str(newcost) + ' üí∞, –≤–ª–∞–¥–µ–ª—å—Ü–∞–º –∞—Ä–µ–Ω—ã –ø–æ–Ω—Ä–∞–≤–∏–ª—Å—è –±–æ–π –∏ –æ–Ω–∏ –Ω–µ –≤–∑—è–ª–∏ –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤. –ù–µ –∑–∞–±—É–¥—å—Ç–µ –¥–∞—Ç—å –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫–∞–º –æ—Ç–¥–æ—Ö–Ω—É—Ç—å'
                    if gender2 == 1:
                        txt = '–ü–æ–±–µ–¥–∏–ª–∞ –¥—Ä—É–∂–±–∞, –Ω–∞–µ–±–∞–ª, –ø–æ–±–µ–¥–∏–ª <a href="tg://user?id='+str(two)+'">'+str(nam2)+'</a>. –í—ã–∏–≥—Ä—ã—à —Å–æ—Å—Ç–∞–≤–∏–ª ' + str(newcost) + ' üí∞, –≤–ª–∞–¥–µ–ª—å—Ü–∞–º –∞—Ä–µ–Ω—ã –ø–æ–Ω—Ä–∞–≤–∏–ª—Å—è –±–æ–π –∏ –æ–Ω–∏ –Ω–µ –≤–∑—è–ª–∏ –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤. –ù–µ –∑–∞–±—É–¥—å—Ç–µ –¥–∞—Ç—å –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫–∞–º –æ—Ç–¥–æ—Ö–Ω—É—Ç—å'
                    bot.send_message(call.message.chat.id, txt,parse_mode='HTML')
                    data = cursor.execute('SELECT * FROM neko WHERE id = ' + str(one))
                    data = data.fetchone()
                    c2 = data[11]
                    c2 = c2 - cost
                    cursor.execute('UPDATE neko SET coins = ' + str(c2) + ' WHERE id = ' + str(one))
                    cursor.execute('UPDATE neko SET bones = bones - 1 WHERE id = ' + str(one) + ' AND bones > 0')
                    cursor.execute('UPDATE neko SET bones = bones - 1 WHERE id = ' + str(two) + ' AND bones > 0')
                    return
        if turns == 0:
            rer1 = 1
            rer2 = 1
            turns = 2

            if turn == one:
                turn = two
                field = field2
                skills = skills2
                if 9 in skills and hp2 < hp1:
                    turns += 1
            else:
                turn = one
                field = field1
                skills = skills1
                if 9 in skills and hp1 < hp2:
                    turns += 1
            if starter == 1:
                starter = 0
                turns = 1
            if 7 in skills:
                turns = 4
                skills.remove(7)
                skills.append(0)

        if turn == one:
            image = image2
        else:
            image = image1

        keyboard = types.InlineKeyboardMarkup(row_width=6)
        stack = []
        sym = ['üü•','üüß','üü°','üü¢','üíô','‚≠êÔ∏è','ü¶¥']
        dat = 'pvp ' + str(one) + ' ' + str(two) + ' ' + str(turn) + ' ' + str(hp1) + ' ' + str(hp2) + ' ' + str(maxhp1) + ' ' + str(maxhp2) + ' ' + str(turns) + ' ' + str(blocks1) + ' ' + str(blocks2)
        for i in range(36):
            callback_button = types.InlineKeyboardButton(text = sym[field[i]],callback_data = dat + ' ' + str(i) + ' ' + str(rer1) + ' ' + str(rer2) + ' ' + str(starter))
            stack.append(callback_button)
            if len(stack) == 6:
                keyboard.add(stack[0],stack[1],stack[2],stack[3],stack[4],stack[5])
                stack = []
        if skills[0] > 100 and rer1 == 1:
            reroll = types.InlineKeyboardButton(text = skill_names[skills[0]-100],callback_data = dat + ' ' + str(-skills[0]) + ' ' + str(0) + ' ' + str(rer2) + ' ' + str(starter))
            keyboard.add(reroll)
        if skills[1] > 100 and rer2 == 1:
            reroll = types.InlineKeyboardButton(text = skill_names[skills[1]-100],callback_data = dat + ' ' + str(-skills[1]) + ' ' + str(rer1) + ' ' + str(0) + ' ' + str(starter))
            keyboard.add(reroll)

        txt = pvp_text(nam1,nam2,maxhp1,maxhp2,hp1,hp2,blocks1,blocks2,skills1,skills2)
        if turn == one:
            nam = nam1
        else:
            nam = nam2
        txt = txt + '–•–æ–¥–∏—Ç <a href="tg://user?id='+str(turn)+'">'+str(nam)+'</a>\n'
        txt = txt + '–û—Å—Ç–∞–ª–æ—Å—å —Ö–æ–¥–æ–≤ –¥–æ –∞—Ç–∞–∫–∏ –≤—Ä–∞–≥–∞:  ' + str(turns)
        fd1 = pack(field1)
        fd2 = pack(field2)
        sk1 = pack(skills1)
        sk2 = pack(skills2)
        cursor.execute("UPDATE battles SET selected = " + str(selected) + ",skillone = '" + str(sk1) + "',skilltwo = '" + str(sk2) + "', fieldone = '" + str(fd1) + "',fieldtwo = '" + str(fd2) + "' WHERE one = "+ str(one) + " and two = " + str(two))
        time.sleep(2)
        bot.edit_message_media(media=telebot.types.InputMedia(media=image,caption = txt,type="photo",parse_mode='HTML'),chat_id=call.message.chat.id, message_id=call.message.message_id, reply_markup=keyboard)



      elif "pve" in call.data:
        sym = ['üü•','üüß','üü°','üü¢','üíô']
        args = call.data.split()
        idk = int(args[1])
        turns = int(args[2])
        blocks = int(args[3])
        pos = int(args[4])
        rer = int(args[5])
        targ = int(args[6])
        enemy1 = int(args[7])
        enemy2 = int(args[8])
        enemy3 = int(args[9])
        hpe1 = int(args[10])
        hpe2 = int(args[11])
        hpe3 = int(args[12])
        enems = [enemy1,enemy2,enemy3]
        hpes = [hpe1,hpe2,hpe3]
        atack = 0

        if call.from_user.id != idk:
            answer_callback_query(call,'–ü–∞—à–æ–ª –Ω–∞—Ö—É–π')

            return

        time.sleep(0.25)
        data = cursor.execute('SELECT * FROM dungeons WHERE id = '+str(idk))
        data = data.fetchone()
        if data is None:
            answer_callback_query(call,'–ü–∞—à–æ–ª –Ω–∞—Ö—É–π')

            return
        field = unpack(data[10])
        selected = data[11]
        next_x = data[12]
        next_y = data[13]
        hp = data[14]
        maxhp = data[15]
        try:
            data = cursor.execute('SELECT * FROM neko WHERE id = '+str(idk))
            data = data.fetchone()
            nam = str(data[1]).rstrip()
            rep = data[2]
            gender = data[33]
        except:
            nam = '–ù–µ–∫–æ–¥–µ–≤–æ—á–∫–∞'
            rep = 0
            gender = 0
        if pos == -2:
            answer_callback_query(call,'–ú–µ–Ω—è—é')
            field = []
            sym = ['üü•','üüß','üü°','üü¢','üíô']
            for i in range(36):
                s = random.randint(0,4)
                field.append(s)
            while True:

                found = False
                for j in range(6):
                    for i in range(3):
                        if field[j*6+i] != -1 and field[j*6+i] == field[j*6+i+1] and field[j*6+i+1] == field[j*6+i+2] and field[j*6+i+2] == field[j*6+i+3]:
                            field[j*6+i] = -1
                            field[j*6+i+1] = -1
                            field[j*6+i+2] = -1
                            field[j*6+i+3] = -1
                            found = True
                for j in range(3):
                    for i in range(6):
                        if field[j*6+i] != -1 and field[j*6+i] == field[(j+1)*6+i] and field[(j+1)*6+i] == field[(j+2)*6+i] and field[(j+2)*6+i] == field[(j+3)*6+i]:
                            field[j*6+i] = -1
                            field[(j+1)*6+i] = -1
                            field[(j+2)*6+i] = -1
                            field[(j+3)*6+i] = -1
                            found = True
                if found == False:
                    break
                while True:
                    f = False
                    for i in range(36):
                        if field[i] == -1:
                            f = True
                            if i < 6:
                                field[i] = random.randint(0,4)
                            else:
                                field[i] = field[i-6]
                                field[i-6] = -1
                    if f == False:
                        break
        elif pos == -3:
                if selected == -1:
                    answer_callback_query(call,'–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏ —Ñ–∏–≥—É—Ä—É')

                    return
                field[selected] = -1
                answer_callback_query(call,'–£—Å–ø–µ—à–Ω–æ')
        elif pos == -4 or pos == -5 or pos == -6:
                newtarg = abs(pos) - 4
                if newtarg == targ:
                    answer_callback_query(call,'–≠—Ç–∞ —Ü–µ–ª—å —É–∂–µ –≤—ã–±—Ä–∞–Ω–∞')

                    return
                if enems[newtarg] == -1:
                    answer_callback_query(call,'–ù–∞ —ç—Ç–æ–π –ø–æ–∑–∏—Ü–∏–∏ –Ω–∏–∫–æ–≥–æ –Ω–µ—Ç')

                    return
                answer_callback_query(call,'–ú–µ–Ω—è—é —Ü–µ–ª—å')
                targ = newtarg
        else:
                if selected == -1:
                    answer_callback_query(call,'–£—Å–ø–µ—à–Ω–æ –≤—ã–±—Ä–∞–Ω–æ')
                    selected = pos
                    cursor.execute("UPDATE dungeons SET selected = " + str(selected) + " WHERE id = "+ str(idk))

                    return
                if selected == pos:
                    answer_callback_query(call,'–í—ã–±–æ—Ä –æ—Ç–º–µ–Ω–µ–Ω')
                    selected = -1
                    cursor.execute("UPDATE dungeons SET selected = " + str(selected) + " WHERE id = "+ str(idk))

                    return
                d = selected - pos
                if d != 1 and d != -1 and d != 6 and d != -6:
                    answer_callback_query(call,'–ú–µ–Ω—è—Ç—å –º–æ–∂–Ω–æ —Ç–æ–ª—å–∫–æ —Å–æ—Å–µ–¥–Ω–∏–µ, –≤—ã–±–æ—Ä –æ—Ç–º–µ–Ω–µ–Ω')
                    selected = -1
                    cursor.execute("UPDATE dungeons SET selected = " + str(selected) + " WHERE id = "+ str(idk))

                    return
                if field[pos] == field[selected]:
                    answer_callback_query(call,'–ö–ª–µ—Ç–∫–∏ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ, –≤—ã–±–æ—Ä –æ—Ç–º–µ–Ω–µ–Ω')
                    selected = -1
                    cursor.execute("UPDATE dungeons SET selected = " + str(selected) + " WHERE id = "+ str(idk))

                    return
                answer_callback_query(call,'–ú–µ–Ω—è—é...')
                d = field[pos]
                field[pos] = field[selected]
                field[selected] = d
                turns = turns - 1
        while True:
                found = False
                for i in range(36):
                    if field[i] == -1:
                        found = True
                for j in range(6):
                    i = 0
                    if field[j*6+i] != -1 and field[j*6+i] == field[j*6+i+1] and field[j*6+i+1] == field[j*6+i+2] and field[j*6+i+2] == field[j*6+i+3] and field[j*6+i+3] == field[j*6+i+4] and field[j*6+i+4] == field[j*6+i+5]:
                        if field[j*6+i] == 0 or field[j*6+i] == 1:
                            blocks = blocks + 3
                        elif field[j*6+i] == 2 or field[j*6+i] == 3:
                            atack = atack + 3
                        else:
                            turns = turns + 3
                        field[j*6+i] = -1
                        field[j*6+i+1] = -1
                        field[j*6+i+2] = -1
                        field[j*6+i+3] = -1
                        field[j*6+i+4] = -1
                        field[j*6+i+5] = -1
                        found = True
                for i in range(6):
                    j = 0
                    if field[j*6+i] != -1 and field[j*6+i] == field[(j+1)*6+i] and field[(j+1)*6+i] == field[(j+2)*6+i] and field[(j+2)*6+i] == field[(j+3)*6+i] and field[(j+3)*6+i] == field[(j+4)*6+i] and field[(j+4)*6+i] == field[(j+5)*6+i]:
                        if field[j*6+i] == 0 or field[j*6+i] == 1:
                            blocks = blocks + 3
                        elif field[j*6+i] == 2 or field[j*6+i] == 3:
                            atack = atack + 3
                        else:
                            turns = turns + 3
                        field[j*6+i] = -1
                        field[(j+1)*6+i] = -1
                        field[(j+2)*6+i] = -1
                        field[(j+3)*6+i] = -1
                        field[(j+4)*6+i] = -1
                        field[(j+5)*6+i] = -1
                        found = True
                for j in range(6):
                    for i in range(2):
                        if field[j*6+i] != -1 and field[j*6+i] == field[j*6+i+1] and field[j*6+i+1] == field[j*6+i+2] and field[j*6+i+2] == field[j*6+i+3] and field[j*6+i+3] == field[j*6+i+4]:
                            if field[j*6+i] == 0 or field[j*6+i] == 1:
                                blocks = blocks + 2
                            elif field[j*6+i] == 2 or field[j*6+i] == 3:
                                atack = atack + 2
                            else:
                                turns = turns + 2
                            field[j*6+i] = -1
                            field[j*6+i+1] = -1
                            field[j*6+i+2] = -1
                            field[j*6+i+3] = -1
                            field[j*6+i+4] = -1
                            found = True
                for j in range(2):
                    for i in range(6):
                        if field[j*6+i] != -1 and field[j*6+i] == field[(j+1)*6+i] and field[(j+1)*6+i] == field[(j+2)*6+i] and field[(j+2)*6+i] == field[(j+3)*6+i] and field[(j+3)*6+i] == field[(j+4)*6+i]:
                            if field[j*6+i] == 0 or field[j*6+i] == 1:
                                blocks = blocks + 2
                            elif field[j*6+i] == 2 or field[j*6+i] == 3:
                                atack = atack + 2
                            else:
                                turns = turns + 2
                            field[j*6+i] = -1
                            field[(j+1)*6+i] = -1
                            field[(j+2)*6+i] = -1
                            field[(j+3)*6+i] = -1
                            field[(j+4)*6+i] = -1
                            found = True
                for j in range(6):
                    for i in range(3):
                        if field[j*6+i] != -1 and field[j*6+i] == field[j*6+i+1] and field[j*6+i+1] == field[j*6+i+2] and field[j*6+i+2] == field[j*6+i+3]:
                            if field[j*6+i] == 0 or field[j*6+i] == 1:
                                blocks = blocks + 1
                            elif field[j*6+i] == 2 or field[j*6+i] == 3:
                                atack = atack + 1
                            else:
                                turns = turns + 1
                            field[j*6+i] = -1
                            field[j*6+i+1] = -1
                            field[j*6+i+2] = -1
                            field[j*6+i+3] = -1
                            found = True
                for j in range(3):
                    for i in range(6):
                        if field[j*6+i] != -1 and field[j*6+i] == field[(j+1)*6+i] and field[(j+1)*6+i] == field[(j+2)*6+i] and field[(j+2)*6+i] == field[(j+3)*6+i]:
                            if field[j*6+i] == 0 or field[j*6+i] == 1:
                                blocks = blocks + 1
                            elif field[j*6+i] == 2 or field[j*6+i] == 3:
                                atack = atack + 1
                            else:
                                turns = turns + 1
                            field[j*6+i] = -1
                            field[(j+1)*6+i] = -1
                            field[(j+2)*6+i] = -1
                            field[(j+3)*6+i] = -1
                            found = True
                if found == False:
                    break
                while True:
                    f = False
                    for i in range(36):
                        if field[i] == -1:
                            f = True
                            if i < 6:
                                field[i] = random.randint(0,4)
                            else:
                                field[i] = field[i-6]
                                field[i-6] = -1
                    if f == False:
                        break
        if blocks > 3:
            blocks = 3
        if atack > 3:
            blocks = 3
        if turns > 5:
            turns = 5
        hpes[targ] = hpes[targ] - atack
        if hpes[targ] <= 0:
            hpes[targ] = 0
            if enems[targ] == 3:
                enems[targ] = 4
                turns = turns + 2
                hpes[targ] = 1
            elif enems[targ] == 4:
                turns = 0
                rer = 1
            else:
                enems[targ] = -1
                if enems[0] != -1:
                    targ = 0
                if enems[1] != -1:
                    targ = 1
                if enems[2] != -1:
                    targ = 2
        if turns == 0:
            turns = 2
            rer = 1
            for i in range(3):
                if enems[i] != -1:
                    if enems[i] == 1:
                        enems[i] = 2
                    elif enems[i] == 2:
                        enems[i] = 1
                        if blocks > 0:
                            blocks = blocks - 1
                        else:
                            hp = hp - 1
                    elif enems[i] == 4:
                        enems[i] = -1
                        if blocks > 1:
                            blocks = blocks - 2
                        else:
                            if blocks > 0:
                                blocks = blocks - 1
                                hp = hp - 1
                            else:
                                hp = hp - 2
                        if enems[0] != -1:
                            targ = 0
                        if enems[1] != -1:
                            targ = 1
                        if enems[2] != -1:
                            targ = 2
                    elif enems[i] == 5:
                        pass
                    else:
                        if blocks > 0:
                            blocks = blocks - 1
                        else:
                            hp = hp - 1
            for i in range(3):
                if enems[i] == 5:
                    if enems[0] == -1:
                        enems[0] = 6
                        hpes[0] = 1
                    elif enems[1] == -1:
                        enems[1] = 6
                        hpes[1] = 1
                    elif enems[2] == -1:
                        enems[2] = 6
                        hpes[2] = 1

        if hp <= 0:
                    txt = nam + ' –≤—ã—à–ª–∞ –∏–∑ –ø–æ—Ä—Ç–∞–ª–∞ –≤—Å—è –ø–æ–∫—Ä—ã—Ç–∞—è —Å–∏–Ω—è–∫–∞–º–∏ –∏ —Å—Ç—Ä–∞–Ω–Ω–æ–π –±–µ–ª–æ–π –∂–∏–¥–∫–æ—Å—Ç—å—é. –ë–æ—é—Å—å –¥–∞–∂–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç—å, —á—Ç–æ —Å –Ω–µ–π –ø—Ä–æ–∏–∑–æ—à–ª–æ. –ö–∞–∫ –º–æ–∂–Ω–æ –±—ã–ª–æ –æ–∂–∏–¥–∞—Ç—å, –æ–Ω–∞ –æ—Ç–∫–∞–∑–∞–ª–∞—Å—å –≥–æ–≤–æ—Ä–∏—Ç—å –æ–± —ç—Ç–æ–º. –ë—É–¥—å –æ—Å—Ç–æ—Ä–æ–∂–Ω–µ–µ –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑'
                    if gender == 1:
                        txt = nam + ' –≤—ã—à–µ–ª –∏–∑ –ø–æ—Ä—Ç–∞–ª–∞ –≤–µ—Å—å –ø–æ–∫—Ä—ã—Ç—ã–π —Å–∏–Ω—è–∫–∞–º–∏ –∏ —Å—Ç—Ä–∞–Ω–Ω–æ–π –±–µ–ª–æ–π –∂–∏–¥–∫–æ—Å—Ç—å—é. –ë–æ—é—Å—å –¥–∞–∂–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç—å, —á—Ç–æ —Å –Ω–∏–º –ø—Ä–æ–∏–∑–æ—à–ª–æ. –ö–∞–∫ –º–æ–∂–Ω–æ –±—ã–ª–æ –æ–∂–∏–¥–∞—Ç—å, –æ–Ω –æ—Ç–∫–∞–∑–∞–ª—Å—è –≥–æ–≤–æ—Ä–∏—Ç—å –æ–± —ç—Ç–æ–º. –ë—É–¥—å –æ—Å—Ç–æ—Ä–æ–∂–Ω–µ–µ –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑'
                    cursor.execute("DELETE FROM dungeons WHERE id = "+str(idk))
                    bot.edit_message_media(media=telebot.types.InputMedia(media='AgACAgIAAx0CZQN7rQACwxZi8uNUoMtUGP6J96D7X-pveAGj3wAC374xGxy_mEsWdB1RBPi4nQEAAwIAA3MAAykE',caption=txt,type="photo",parse_mode='HTML'),chat_id=call.message.chat.id, message_id=call.message.message_id)
                    time.sleep(1)

                    return
        if enems[0] == -1 and enems[1] == -1 and enems[2] == -1:
            txt = nam + '\n[ '
            i = 1
            while i <= maxhp:
                if i <= hp:
                    txt = txt + 'üü©'
                else:
                    txt = txt + 'üü•'
                i = i + 1
            txt = txt + ' ] '
            if blocks > 0:
                for i in range(blocks):
                    txt = txt + 'üõ° '

            txt = txt + '\n\n–¢–≤–æ—è –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫–∞ –ø–æ–±–µ–¥–∏–ª–∞!'
            if gender == 1:
                txt = txt + '\n\n–¢–≤–æ–π –Ω–µ–∫–æ–º–∞–ª—å—á–∏–∫ –ø–æ–±–µ–¥–∏–ª!'
            keyboard = types.InlineKeyboardMarkup(row_width=4)
            data = cursor.execute('SELECT * FROM dungeons WHERE id = ' + str(idk))
            data = data.fetchone()
            mas = unpack(data[1])
            generation = unpack(data[5])
            co = data[6]
            wh = data[7]
            mo = data[8]
            he = data[9]
            generation[next_y*10+next_x] = 0
            gd = pack(generation)
            cursor.execute("UPDATE dungeons SET generation = '" + str(gd) + "',hp = " + str(hp) + " WHERE id = " + str(idk))
            txt = txt + '\n\n' + '–î–æ–±—ã—á–∞:  ' + str(co) + 'üí∞ ' + str(wh) + 'üç´ ' + str(mo) + '‚ö°Ô∏è ' + str(he) + 'üçº\n'+'–ö–∞—Ä—Ç–∞:\n'
            for a in range(0, 13):
             for b in range(0, 10):
                if mas[a*10+b] == 0:
                    txt = txt + '‚óºÔ∏è'
                if mas[a*10+b] == 1:
                    txt = txt + '‚ñ´Ô∏è'
                if mas[a*10+b] == 2:
                    txt = txt + 'üü•'
                if mas[a*10+b] == 3:
                    txt = txt + 'üü¢'
                if mas[a*10+b] == 4:
                    txt = txt + 'üü©'
                if mas[a*10+b] == 5:
                    txt = txt + 'üüß'
             txt = txt + '\n'
            callback_button1 = types.InlineKeyboardButton(text = '‚¨ÜÔ∏è',callback_data = 'move ' + str(idk) + ' 1 ')
            callback_button2 = types.InlineKeyboardButton(text = '‚¨ÖÔ∏è',callback_data = 'move ' + str(idk) + ' 4 ')
            callback_button3 = types.InlineKeyboardButton(text = '‚è∫',callback_data = 'nothing')
            callback_button4 = types.InlineKeyboardButton(text = '‚û°Ô∏è',callback_data = 'move ' + str(idk) + ' 2 ')
            callback_button5 = types.InlineKeyboardButton(text = '‚¨áÔ∏è',callback_data = 'move ' + str(idk) + ' 3 ')
            callback_button6 = types.InlineKeyboardButton(text = '–£–π—Ç–∏ üîö',callback_data = 'back ' + str(idk))
            keyboard.add(callback_button1,callback_button5,callback_button2,callback_button4)
            keyboard.add(callback_button6)
            bot.edit_message_media(media=telebot.types.InputMedia(media='AgACAgIAAx0CZQN7rQACwsFi8ct1qI3M_i1Bt1Tk_WvAbq7BWAACqcQxG-SBkUvkDVBnBMaohgEAAwIAA3MAAykE',caption=txt,type="photo",parse_mode='HTML'),chat_id=call.message.chat.id, message_id=call.message.message_id, reply_markup=keyboard)
            time.sleep(1)

            return

        keyboard = types.InlineKeyboardMarkup(row_width=6)
        if targ == 0:
            target1 = types.InlineKeyboardButton(text = '[–¶–µ–ª—å –≤—ã–±—Ä–∞–Ω–∞]',callback_data = 'pve ' + str(idk) + ' ' + str(turns) + ' ' + str(blocks) + ' -4 ' + str(rer) + ' ' + str(targ) + ' ' + str(enems[0]) + ' ' + str(enems[1]) + ' ' + str(enems[2]) + ' ' + str(hpes[0]) + ' ' + str(hpes[1]) + ' ' + str(hpes[2]))
        else:
            target1 = types.InlineKeyboardButton(text = '–¶–µ–ª—å 1 ‚öîÔ∏è',callback_data = 'pve ' + str(idk) + ' ' + str(turns) + ' ' + str(blocks) + ' -4 ' + str(rer) + ' ' + str(targ) + ' ' + str(enems[0]) + ' ' + str(enems[1]) + ' ' + str(enems[2]) + ' ' + str(hpes[0]) + ' ' + str(hpes[1]) + ' ' + str(hpes[2]))
        if targ == 1:
            target2 = types.InlineKeyboardButton(text = '[–¶–µ–ª—å –≤—ã–±—Ä–∞–Ω–∞]',callback_data = 'pve ' + str(idk) + ' ' + str(turns) + ' ' + str(blocks) + ' -5 ' + str(rer) + ' ' + str(targ) + ' ' + str(enems[0]) + ' ' + str(enems[1]) + ' ' + str(enems[2]) + ' ' + str(hpes[0]) + ' ' + str(hpes[1]) + ' ' + str(hpes[2]))
        else:
            target2 = types.InlineKeyboardButton(text = '–¶–µ–ª—å 2 ‚öîÔ∏è',callback_data = 'pve ' + str(idk) + ' ' + str(turns) + ' ' + str(blocks) + ' -5 ' + str(rer) + ' ' + str(targ) + ' ' + str(enems[0]) + ' ' + str(enems[1]) + ' ' + str(enems[2]) + ' ' + str(hpes[0]) + ' ' + str(hpes[1]) + ' ' + str(hpes[2]))
        if targ == 2:
            target3 = types.InlineKeyboardButton(text = '[–¶–µ–ª—å –≤—ã–±—Ä–∞–Ω–∞]',callback_data = 'pve ' + str(idk) + ' ' + str(turns) + ' ' + str(blocks) + ' -6 ' + str(rer) + ' ' + str(targ) + ' ' + str(enems[0]) + ' ' + str(enems[1]) + ' ' + str(enems[2]) + ' ' + str(hpes[0]) + ' ' + str(hpes[1]) + ' ' + str(hpes[2]))
        else:
            target3 = types.InlineKeyboardButton(text = '–¶–µ–ª—å 3 ‚öîÔ∏è',callback_data = 'pve ' + str(idk) + ' ' + str(turns) + ' ' + str(blocks) + ' -6 ' + str(rer) + ' ' + str(targ) + ' ' + str(enems[0]) + ' ' + str(enems[1]) + ' ' + str(enems[2]) + ' ' + str(hpes[0]) + ' ' + str(hpes[1]) + ' ' + str(hpes[2]))
        keyboard.add(target1,target2,target3)
        stack = []
        for i in range(36):
            callback_button = types.InlineKeyboardButton(text = sym[field[i]],callback_data = 'pve ' + str(idk) + ' ' + str(turns) + ' ' + str(blocks) + ' ' + str(i) + ' ' + str(rer) + ' ' + str(targ) + ' ' + str(enems[0]) + ' ' + str(enems[1]) + ' ' + str(enems[2]) + ' ' + str(hpes[0]) + ' ' + str(hpes[1]) + ' ' + str(hpes[2]))
            stack.append(callback_button)
            if len(stack) == 6:
                keyboard.add(stack[0],stack[1],stack[2],stack[3],stack[4],stack[5])
                stack = []
        if rer == 1:
            reroll = types.InlineKeyboardButton(text = 'üîÑ –ü–µ—Ä–µ–º–µ—à–∞—Ç—å',callback_data = 'pve ' + str(idk) + ' ' + str(turns) + ' ' + str(blocks) + ' -2 0 ' + str(targ) + ' ' + str(enems[0]) + ' ' + str(enems[1]) + ' ' + str(enems[2]) + ' ' + str(hpes[0]) + ' ' + str(hpes[1]) + ' ' + str(hpes[2]))
            keyboard.add(reroll)
           # deleter = types.InlineKeyboardButton(text = 'üí• –†–∞–∑—Ä—É—à–∏—Ç—å —Ñ–∏–≥—É—Ä—É',callback_data = 'pve ' + str(idk) + ' ' + str(turns) + ' ' + str(blocks) + ' -3 0 ' + str(targ) + ' ' + str(enems[0]) + ' ' + str(enems[1]) + ' ' + str(enems[2]) + ' ' + str(hpes[0]) + ' ' + str(hpes[1]) + ' ' + str(hpes[2]))
            #keyboard.add(deleter)
        md = pack(field)
        cursor.execute("UPDATE dungeons SET field = '" + str(md) + "',selected = -1,hp = " + str(hp) + " WHERE id = " + str(idk))

        txt = ''
        for j in range(3):
            if enems[j] != -1:
                txt = txt + enemies[enems[j]][0] + '\n[ '
                i = 1

                while i <= enemies[enems[j]][1]:
                    if (i <= hpes[j]):
                        txt = txt + 'üü©'
                    else:
                        txt = txt + 'üü•'
                    i = i + 1
                txt = txt + ' ]\n'
        txt = txt + '\n' + nam + '\n[ '
        i = 1
        while i <= maxhp:
            if i <= hp:
                txt = txt + 'üü©'
            else:
                txt = txt + 'üü•'
            i = i + 1
        txt = txt + ' ] '
        if blocks > 0:
            for i in range(blocks):
                txt = txt + 'üõ° '
        txt = txt + '\n\n'
        im1 = Image.open('bot/back.png')
        if enems[0] != -1:
            im2 = Image.open('bot/enemy'+str(enems[0])+'.png')
            im1.paste(im2.convert('RGB'), (enemies[enems[0]][2]-233,enemies[enems[0]][3]), im2)
        if enems[1] != -1:
            im2 = Image.open('bot/enemy'+str(enems[1])+'.png')
            im1.paste(im2.convert('RGB'), (enemies[enems[1]][2],enemies[enems[1]][3]), im2)
        if enems[2] != -1:
            im2 = Image.open('bot/enemy'+str(enems[2])+'.png')
            im1.paste(im2.convert('RGB'), (enemies[enems[2]][2]+233,enemies[enems[2]][3]), im2)
        time.sleep(2)
        im1.save('bot/result.png')
        f = open("bot/result.png","rb")
        bot.edit_message_media(media=telebot.types.InputMedia(media=f,caption=txt + "–û—Å—Ç–∞–ª–æ—Å—å —Ö–æ–¥–æ–≤ –¥–æ –∞—Ç–∞–∫–∏ –≤—Ä–∞–≥–∞:  " + str(turns),type="photo",parse_mode='HTML'),chat_id=call.message.chat.id, message_id=call.message.message_id,reply_markup=keyboard)
        f.close()

      elif "drop" in call.data:
        args = call.data.split()
        idk = int(args[1])



        if call.from_user.id != idk:
            answer_callback_query(call,'–ü–∞—à–æ–ª –Ω–∞—Ö—É–π')

            return
        time.sleep(0.25)
        answer_callback_query(call,'–£—Å–ø–µ—à–Ω–æ')
        data = cursor.execute('SELECT * FROM dungeons WHERE id = ' + str(idk))
        data = data.fetchone()
        mas = unpack(data[1])
        generation = unpack(data[5])
        co = data[6]
        wh = data[7]
        mo = data[8]
        he = data[9]
        next_x = data[12]
        next_y = data[13]
        hp = data[14]
        maxhp = data[15]
        d = random.randint(1,10)
        if d != 10:
            co = co - 2
            phot = 'AgACAgIAAx0CZQN7rQACwwRi8t920_InxPRHCFJRBhJHi609NAAC274xGxy_mEtJHCxhP9SvfQEAAwIAA3MAAykE'
            new_txt = '–£–¥–∏–≤–∏—Ç–µ–ª—å–Ω–æ, –Ω–æ –Ω–∏—á–µ–≥–æ –Ω–µ –ø—Ä–æ–∏–∑–æ—à–ª–æ. –ê –Ω–∞ —á—Ç–æ —Ç—ã –≤–æ–æ–±—â–µ –Ω–∞–¥–µ—è–ª—Å—è?'
        else:
            co = co - 2
            mo = mo + 1
            phot = 'AgACAgIAAx0CZQN7rQACwwJi8t1lkPUz0QvhDBUeUT7KBUQJgQAC2b4xGxy_mEtae5LvKUzKfgEAAwIAA3MAAykE'
            new_txt = '–ß—Ç–æ –∂, —ç—Ç–æ –º–æ–∂–Ω–æ –Ω–∞–∑–≤–∞—Ç—å —á—É–¥–æ–º. –í–º–µ—Å—Ç–æ –≤–æ–¥—ã –≤ —Ñ–æ–Ω—Ç–∞–Ω–µ –Ω–∞—á–∞–ª —Ç–µ—á—å —Ä–æ–∑–æ–≤—ã–π –º–æ–Ω—Å—Ç—Ä ‚ö°Ô∏è! –õ—É—á—à–µ –±—É–¥–µ—Ç –≤–∑—è—Ç—å —Å —Å–æ–±–æ–π –Ω–µ–º–Ω–æ–≥–æ'
        generation[next_y*10+next_x] = 0
        gd = pack(generation)
        cursor.execute("UPDATE dungeons SET generation = '" + str(gd) + "',co = " + str(co) + ",wh = " + str(wh) + ",mo = " + str(mo) + ",he = " + str(he) + " WHERE id = " + str(idk))
        txt = new_txt + '\n\n' + '–î–æ–±—ã—á–∞:  ' + str(co) + 'üí∞ ' + str(wh) + 'üç´ ' + str(mo) + '‚ö°Ô∏è ' + str(he) + 'üçº\n'+'–ö–∞—Ä—Ç–∞:\n'
        for a in range(0, 13):
            for b in range(0, 10):
                if mas[a*10+b] == 0:
                    txt = txt + '‚óºÔ∏è'
                if mas[a*10+b] == 1:
                    txt = txt + '‚ñ´Ô∏è'
                if mas[a*10+b] == 2:
                    txt = txt + 'üü•'
                if mas[a*10+b] == 3:
                    txt = txt + 'üü¢'
                if mas[a*10+b] == 4:
                    txt = txt + 'üü©'
                if mas[a*10+b] == 5:
                    txt = txt + 'üüß'
            txt = txt + '\n'
        keyboard = types.InlineKeyboardMarkup(row_width=4)
        callback_button1 = types.InlineKeyboardButton(text = '‚¨ÜÔ∏è',callback_data = 'move ' + str(idk) + ' 1 ')
        callback_button2 = types.InlineKeyboardButton(text = '‚¨ÖÔ∏è',callback_data = 'move ' + str(idk) + ' 4 ')
        callback_button3 = types.InlineKeyboardButton(text = '‚è∫',callback_data = 'nothing')
        callback_button4 = types.InlineKeyboardButton(text = '‚û°Ô∏è',callback_data = 'move ' + str(idk) + ' 2 ')
        callback_button5 = types.InlineKeyboardButton(text = '‚¨áÔ∏è',callback_data = 'move ' + str(idk) + ' 3 ')
        callback_button6 = types.InlineKeyboardButton(text = '–£–π—Ç–∏ üîö',callback_data = 'back ' + str(idk))
        keyboard.add(callback_button1,callback_button5,callback_button2,callback_button4)
        keyboard.add(callback_button6)
        bot.edit_message_media(media=telebot.types.InputMedia(media=phot,caption=txt,type="photo"),chat_id=call.message.chat.id, message_id=call.message.message_id, reply_markup=keyboard)

      elif "eat" in call.data:
        args = call.data.split()
        idk = int(args[1])

        if call.from_user.id != idk:
            answer_callback_query(call,'–ü–∞—à–æ–ª –Ω–∞—Ö—É–π')

            return
        time.sleep(0.25)
        answer_callback_query(call,'–£—Å–ø–µ—à–Ω–æ')
        data = cursor.execute('SELECT * FROM dungeons WHERE id = ' + str(idk))
        data = data.fetchone()
        mas = unpack(data[1])
        generation = unpack(data[5])
        co = data[6]
        wh = data[7]
        mo = data[8]
        he = data[9]
        next_x = data[12]
        next_y = data[13]
        hp = data[14]
        maxhp = data[15]
        try:
            data = cursor.execute('SELECT * FROM neko WHERE id = '+str(idk))
            data = data.fetchone()
            nam = str(data[1]).rstrip()
            gender = data[33]
        except:
            nam = '–ù–µ–∫–æ–¥–µ–≤–æ—á–∫–∞'
            gender = 0
        hp = hp + 3
        if hp > maxhp:
            hp = maxhp
        phot = 'AgACAgIAAx0CZQN7rQACwgZi7aTwuv6M-OsOvCsRGijo6gohwwACZb8xG3RJaUufsVKea9BUKAEAAwIAA3MAAykE'
        new_txt = nam + ' –ø–æ–µ–ª–∞ –Ω–µ–º–Ω–æ–≥–æ –ø–∏—Ü—Ü—ã –∏ —Ç–µ–ø–µ—Ä—å —á—É–≤—Å—Ç–≤—É–µ—Ç —Å–µ–±—è –∑–∞–º–µ—Ç–Ω–æ –ª—É—á—à–µ!'
        if gender == 1:
            new_txt = nam + ' –ø–æ–µ–ª –Ω–µ–º–Ω–æ–≥–æ –ø–∏—Ü—Ü—ã –∏ —Ç–µ–ø–µ—Ä—å —á—É–≤—Å—Ç–≤—É–µ—Ç —Å–µ–±—è –∑–∞–º–µ—Ç–Ω–æ –ª—É—á—à–µ!'
        generation[next_y*10+next_x] = 0
        gd = pack(generation)
        cursor.execute("UPDATE dungeons SET generation = '" + str(gd) + "',co = " + str(co) + ",wh = " + str(wh) + ",mo = " + str(mo) + ",he = " + str(he) + ",hp = " + str(hp) + " WHERE id = " + str(idk))
        txt = new_txt + '\n\n' + '–î–æ–±—ã—á–∞:  ' + str(co) + 'üí∞ ' + str(wh) + 'üç´ ' + str(mo) + '‚ö°Ô∏è ' + str(he) + 'üçº\n'+'–ö–∞—Ä—Ç–∞:\n'
        for a in range(0, 13):
            for b in range(0, 10):
                if mas[a*10+b] == 0:
                    txt = txt + '‚óºÔ∏è'
                if mas[a*10+b] == 1:
                    txt = txt + '‚ñ´Ô∏è'
                if mas[a*10+b] == 2:
                    txt = txt + 'üü•'
                if mas[a*10+b] == 3:
                    txt = txt + 'üü¢'
                if mas[a*10+b] == 4:
                    txt = txt + 'üü©'
                if mas[a*10+b] == 5:
                    txt = txt + 'üüß'
            txt = txt + '\n'
        keyboard = types.InlineKeyboardMarkup(row_width=4)
        callback_button1 = types.InlineKeyboardButton(text = '‚¨ÜÔ∏è',callback_data = 'move ' + str(idk) + ' 1 ')
        callback_button2 = types.InlineKeyboardButton(text = '‚¨ÖÔ∏è',callback_data = 'move ' + str(idk) + ' 4 ')
        callback_button3 = types.InlineKeyboardButton(text = '‚è∫',callback_data = 'nothing')
        callback_button4 = types.InlineKeyboardButton(text = '‚û°Ô∏è',callback_data = 'move ' + str(idk) + ' 2 ')
        callback_button5 = types.InlineKeyboardButton(text = '‚¨áÔ∏è',callback_data = 'move ' + str(idk) + ' 3 ')
        callback_button6 = types.InlineKeyboardButton(text = '–£–π—Ç–∏ üîö',callback_data = 'back ' + str(idk))
        keyboard.add(callback_button1,callback_button5,callback_button2,callback_button4)
        keyboard.add(callback_button6)
        bot.edit_message_media(media=telebot.types.InputMedia(media=phot,caption=txt,type="photo"),chat_id=call.message.chat.id, message_id=call.message.message_id, reply_markup=keyboard)

      elif "anti" in call.data:
        args = call.data.split()
        idk = int(args[1])
        if call.from_user.id != idk:
            answer_callback_query(call,'–ü–∞—à–æ–ª –Ω–∞—Ö—É–π')

            return
        time.sleep(0.25)
        answer_callback_query(call,'–£—Å–ø–µ—à–Ω–æ')
        data = cursor.execute('SELECT * FROM dungeons WHERE id = ' + str(idk))
        data = data.fetchone()
        mas = unpack(data[1])
        generation = unpack(data[5])
        co = data[6]
        wh = data[7]
        mo = data[8]
        he = data[9]
        next_x = data[12]
        next_y = data[13]
        try:
            data = cursor.execute('SELECT * FROM neko WHERE id = '+str(idk))
            data = data.fetchone()
            nam = str(data[1]).rstrip()
            rep = data[2]
            gender = data[33]
        except:
            nam = '–ù–µ–∫–æ–¥–µ–≤–æ—á–∫–∞'
            rep = 0
            gender = 0
        d = random.randint(1,3)
        if d != 3:
            he = he + 1
            phot = 'AgACAgIAAx0CZQN7rQACwd1i7HKMaDbODOjA7IV5RYxI01bcTAACwMAxG3RJYUvRcTOFHbiG3QEAAwIAA3MAAykE'
            new_txt = nam + ' –∫–∞–∫ –º–æ–∂–Ω–æ –±—ã—Å—Ç—Ä–µ–µ –Ω–∞–±—Ä–∞–ª–∞ –±—É—Ç—ã–ª—å –∞–Ω—Ç–∏–ø–æ—Ö–º–µ–ª–∏–Ω–∞ üçº –∏ –æ—Ç–æ—à–ª–∞ –æ—Ç –±–µ—Ä–µ–≥–∞. –ö —Å—á–∞—Å—Ç—å—é, –Ω–∏—á–µ–≥–æ –æ–ø–∞—Å–Ω–æ–≥–æ –Ω–µ –ø—Ä–æ–∏–∑–æ—à–ª–æ, –Ω–æ –±—É–¥–µ—Ç –ª–∏ —Ç–∞–∫ –∏ –≤–ø—Ä–µ–¥—å?'
            if gender == 1:
                new_txt = nam + ' –∫–∞–∫ –º–æ–∂–Ω–æ –±—ã—Å—Ç—Ä–µ–µ –Ω–∞–±—Ä–∞–ª –±—É—Ç—ã–ª—å –∞–Ω—Ç–∏–ø–æ—Ö–º–µ–ª–∏–Ω–∞ üçº –∏ –æ—Ç–æ—à–µ–ª –æ—Ç –±–µ—Ä–µ–≥–∞. –ö —Å—á–∞—Å—Ç—å—é, –Ω–∏—á–µ–≥–æ –æ–ø–∞—Å–Ω–æ–≥–æ –Ω–µ –ø—Ä–æ–∏–∑–æ—à–ª–æ, –Ω–æ –±—É–¥–µ—Ç –ª–∏ —Ç–∞–∫ –∏ –≤–ø—Ä–µ–¥—å?'
        else:
            phot = 'AgACAgIAAx0CZQN7rQACwfxi7Zem-ltmGFEQZvc-sg97JYwNewACTb8xG3RJaUs9wsxj9zofxwEAAwIAA3MAAykE'
            new_txt = '–û–∫–∞–∑–∞–ª–æ—Å—å, —á—Ç–æ –≤ –æ–∑–µ—Ä–µ –∂–∏–≤—ë—Ç –æ–≥—Ä–æ–º–Ω—ã–π —Ç–µ–Ω—Ç–∞–∫–ª–µ–≤—ã–π –º–æ–Ω—Å—Ç—Ä! –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤—Å–µ –º—ã –∑–Ω–∞–µ–º, —á—Ç–æ –¥–µ–ª–∞—é—Ç —Ç–µ–Ω—Ç–∞–∫–ª–µ–≤—ã–µ –º–æ–Ω—Å—Ç—Ä—ã —Å –º–∞–ª–µ–Ω—å–∫–∏–º–∏ –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫–∞–º–∏... ' + nam + ' —Å—Ç–∞–ª–∞ –¥–æ–≤–µ—Ä—è—Ç—å —Ç–µ–±–µ –º–µ–Ω—å—à–µ üíî, –Ω–µ —Å—Ç–æ–∏–ª–æ –ø–æ—Å—ã–ª–∞—Ç—å –µ—ë —Ç—É–¥–∞'
            if gender == 1:
                new_txt = '–û–∫–∞–∑–∞–ª–æ—Å—å, —á—Ç–æ –≤ –æ–∑–µ—Ä–µ –∂–∏–≤—ë—Ç –æ–≥—Ä–æ–º–Ω—ã–π —Ç–µ–Ω—Ç–∞–∫–ª–µ–≤—ã–π –º–æ–Ω—Å—Ç—Ä! –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤—Å–µ –º—ã –∑–Ω–∞–µ–º, —á—Ç–æ –¥–µ–ª–∞—é—Ç —Ç–µ–Ω—Ç–∞–∫–ª–µ–≤—ã–µ –º–æ–Ω—Å—Ç—Ä—ã —Å –º–∞–ª–µ–Ω—å–∫–∏–º–∏ –Ω–µ–∫–æ–º–∞–ª—å—á–∏–∫–∞–º–∏... ' + nam + ' —Å—Ç–∞–ª –¥–æ–≤–µ—Ä—è—Ç—å —Ç–µ–±–µ –º–µ–Ω—å—à–µ üíî, –Ω–µ —Å—Ç–æ–∏–ª–æ –ø–æ—Å—ã–ª–∞—Ç—å –µ–≥–æ —Ç—É–¥–∞'
            if rep != 0:
                rep = rep - 2
                cursor.execute("UPDATE neko SET rep = '" + str(rep) + "' WHERE id = " + str(idk))
        generation[next_y*10+next_x] = 0
        gd = pack(generation)
        cursor.execute("UPDATE dungeons SET generation = '" + str(gd) + "',co = " + str(co) + ",wh = " + str(wh) + ",mo = " + str(mo) + ",he = " + str(he) + " WHERE id = " + str(idk))
        txt = new_txt + '\n\n' + '–î–æ–±—ã—á–∞:  ' + str(co) + 'üí∞ ' + str(wh) + 'üç´ ' + str(mo) + '‚ö°Ô∏è ' + str(he) + 'üçº\n'+'–ö–∞—Ä—Ç–∞:\n'
        for a in range(0, 13):
            for b in range(0, 10):
                if mas[a*10+b] == 0:
                    txt = txt + '‚óºÔ∏è'
                if mas[a*10+b] == 1:
                    txt = txt + '‚ñ´Ô∏è'
                if mas[a*10+b] == 2:
                    txt = txt + 'üü•'
                if mas[a*10+b] == 3:
                    txt = txt + 'üü¢'
                if mas[a*10+b] == 4:
                    txt = txt + 'üü©'
                if mas[a*10+b] == 5:
                    txt = txt + 'üüß'
            txt = txt + '\n'
        keyboard = types.InlineKeyboardMarkup(row_width=4)
        callback_button1 = types.InlineKeyboardButton(text = '‚¨ÜÔ∏è',callback_data = 'move ' + str(idk) + ' 1 ')
        callback_button2 = types.InlineKeyboardButton(text = '‚¨ÖÔ∏è',callback_data = 'move ' + str(idk) + ' 4 ')
        callback_button3 = types.InlineKeyboardButton(text = '‚è∫',callback_data = 'nothing')
        callback_button4 = types.InlineKeyboardButton(text = '‚û°Ô∏è',callback_data = 'move ' + str(idk) + ' 2 ')
        callback_button5 = types.InlineKeyboardButton(text = '‚¨áÔ∏è',callback_data = 'move ' + str(idk) + ' 3 ')
        callback_button6 = types.InlineKeyboardButton(text = '–£–π—Ç–∏ üîö',callback_data = 'back ' + str(idk))
        keyboard.add(callback_button1,callback_button5,callback_button2,callback_button4)
        keyboard.add(callback_button6)
        bot.edit_message_media(media=telebot.types.InputMedia(media=phot,caption=txt,type="photo"),chat_id=call.message.chat.id, message_id=call.message.message_id, reply_markup=keyboard)

      elif "move" in call.data:
        args = call.data.split()
        idk = int(args[1])
        d = int(args[2])


        if call.from_user.id != idk:
            answer_callback_query(call,'–ü–∞—à–æ–ª –Ω–∞—Ö—É–π')

            return
        time.sleep(0.25)
        data = cursor.execute('SELECT * FROM dungeons WHERE id = ' + str(idk))
        data = data.fetchone()
        mas = unpack(data[1])
        generation = unpack(data[5])
        co = data[6]
        wh = data[7]
        mo = data[8]
        he = data[9]
        cur_x = data[12]
        cur_y = data[13]
        hp = data[14]
        maxhp = data[15]
        if d == 1:
            if (cur_y-3) < 0 or mas[(cur_y-1)*10+cur_x] == 0:
                answer_callback_query(call,'–¢—É–ø–∏–∫')

                return
        if d == 2:
            if (cur_x+3) > 9 or mas[cur_y*10+cur_x+1] == 0:
                answer_callback_query(call,'–¢—É–ø–∏–∫')

                return
        if d == 3:
            if (cur_y+3) > 12 or mas[(cur_y+1)*10+cur_x] == 0:
                answer_callback_query(call,'–¢—É–ø–∏–∫')

                return
        if d == 4:
            if (cur_x-3) < 0 or mas[cur_y*10+cur_x-1] == 0:
                answer_callback_query(call,'–¢—É–ø–∏–∫')

                return
        mas[cur_y*10+cur_x] = 4
        if d == 1:
            next_x = cur_x
            next_y = cur_y-3
        if d == 2:
            next_x = cur_x+3
            next_y = cur_y
        if d == 3:
            next_x = cur_x
            next_y = cur_y+3
        if d == 4:
            next_x = cur_x-3
            next_y = cur_y
        mas[next_y*10+next_x] = 3
        if generation[cur_y*10+cur_x] != 0 and generation[cur_y*10+cur_x] != 1:
            mas[cur_y*10+cur_x] = 5
        next_gen = generation[next_y*10+next_x]
        try:
            data = cursor.execute('SELECT * FROM neko WHERE id = '+str(idk))
            data = data.fetchone()
            nam = str(data[1]).rstrip()
            rep = data[2]
            gender = data[33]
        except:
            nam = '–ù–µ–∫–æ–¥–µ–≤–æ—á–∫–∞'
            rep = 0
            gender = 0
        phot = 'AgACAgIAAx0CZQN7rQACsTdi5aOWZGH8r_RsZ4ZDXbGXHwZZxwACz8AxG2fEKUv9PoikvhKaVgEAAwIAA3MAAykE'
        keyboard = types.InlineKeyboardMarkup(row_width=4)
        answer_callback_query(call,'–£—Å–ø–µ—à–Ω–æ')
        time.sleep(2)
        if next_gen == 1:
            phot = 'AgACAgIAAx0CZQN7rQACwxZi8uNUoMtUGP6J96D7X-pveAGj3wAC374xGxy_mEsWdB1RBPi4nQEAAwIAA3MAAykE'
            new_txt = '–ö —Å—á–∞—Å—Ç—å—é, –ø–æ—Ä—Ç–∞–ª –Ω–∏–∫—É–¥–∞ –Ω–µ –¥–µ–ª—Å—è. –ú–æ–∂–µ—Ç –±—ã—Ç—å, —Å–∞–º–æ–µ –≤—Ä–µ–º—è –≤–µ—Ä–Ω—É—Ç—å—Å—è? –ù–µ –¥—É–º–∞—é, —á—Ç–æ —Ç–≤–æ–µ–π –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫–∏ –µ—â—ë –Ω–∞–¥–æ–ª–≥–æ —Ö–≤–∞—Ç–∏—Ç'
            if gender == 1:
                new_txt = '–ö —Å—á–∞—Å—Ç—å—é, –ø–æ—Ä—Ç–∞–ª –Ω–∏–∫—É–¥–∞ –Ω–µ –¥–µ–ª—Å—è. –ú–æ–∂–µ—Ç –±—ã—Ç—å, —Å–∞–º–æ–µ –≤—Ä–µ–º—è –≤–µ—Ä–Ω—É—Ç—å—Å—è? –ù–µ –¥—É–º–∞—é, —á—Ç–æ —Ç–≤–æ–µ–≥–æ –Ω–µ–∫–æ–º–∞–ª—å—á–∏–∫–∞ –µ—â—ë –Ω–∞–¥–æ–ª–≥–æ —Ö–≤–∞—Ç–∏—Ç'
        elif next_gen == 2:
            wh = wh + 1
            generation[next_y*10+next_x] = 0
            phot = 'AgACAgIAAx0CZQN7rQACwvRi8tr6ixHXhD5-CLOdFikGnPqDcgACzb4xGxy_mEvGxDZ1JQABuSIBAAMCAANzAAMpBA'
            new_txt = nam + ' –æ–±—Ä–∞—Ç–∏–ª–∞ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–Ω—É—é –∫–æ—Ä–æ–±–∫—É, –ª–µ–∂–∞–≤—à—É—é –≤ —É–≥–ª—É. –ü–æ—Ö–æ–∂–µ, —ç—Ç–æ —á–∞—Å—Ç—å –ø—Ä–∏–ø–∞—Å–æ–≤ –ø—Ä–æ–ø–∞–≤—à–µ–π —ç–∫—Å–ø–µ–¥–∏—Ü–∏–∏. –¢–æ–ª—å–∫–æ –≤–æ—Ç –≥–¥–µ –≤—Å—ë –æ—Å—Ç–∞–ª—å–Ω–æ–µ? –í–Ω—É—Ç—Ä–∏ –ª–µ–∂–∞–ª–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—É—Å—Ç—ã—Ö –±—É—Ç—ã–ª–æ–∫ –≤–æ–¥–∫–∏ –∏ —Å–æ–≤—Å–µ–º –Ω–µ–º–Ω–æ–≥–æ –≤–∏—Å–∫–∞—Å–∞ üç´'
            if gender == 1:
                new_txt = nam + ' –æ–±—Ä–∞—Ç–∏–ª –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–Ω—É—é –∫–æ—Ä–æ–±–∫—É, –ª–µ–∂–∞–≤—à—É—é –≤ —É–≥–ª—É. –ü–æ—Ö–æ–∂–µ, —ç—Ç–æ —á–∞—Å—Ç—å –ø—Ä–∏–ø–∞—Å–æ–≤ –ø—Ä–æ–ø–∞–≤—à–µ–π —ç–∫—Å–ø–µ–¥–∏—Ü–∏–∏. –¢–æ–ª—å–∫–æ –≤–æ—Ç –≥–¥–µ –≤—Å—ë –æ—Å—Ç–∞–ª—å–Ω–æ–µ? –í–Ω—É—Ç—Ä–∏ –ª–µ–∂–∞–ª–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø—É—Å—Ç—ã—Ö –±—É—Ç—ã–ª–æ–∫ –≤–æ–¥–∫–∏ –∏ —Å–æ–≤—Å–µ–º –Ω–µ–º–Ω–æ–≥–æ –≤–∏—Å–∫–∞—Å–∞ üç´'
        elif next_gen == 3:
            co = co + 15
            generation[next_y*10+next_x] = 0
            phot = 'AgACAgIAAx0CZQN7rQACwvhi8tv5UTGRY0Ly30leGF-iVeph4AAC074xGxy_mEtCwi5QjU5PowEAAwIAA3MAAykE'
            new_txt = '–°—Ç—Ä–∞–Ω–Ω—ã–π –∫—Ä–∏—Å—Ç–∞–ª–ª, –ø–µ—Ä–µ–ª–∏–≤–∞—é—â–∏–π—Å—è –≤—Å–µ–º–∏ —Ü–≤–µ—Ç–∞–º–∏ —Ä–∞–¥—É–≥–∏, –ø—Ä–µ–≥—Ä–∞–¥–∏–ª –≤–∞–º –ø—É—Ç—å. –ö —Å—á–∞—Å—Ç—å—é, –≤–µ—Å–∏—Ç –æ–Ω –Ω–µ —Ç–∞–∫ –º–Ω–æ–≥–æ, –∫–∞–∫ –º–æ–≥–ª–æ –ø–æ–∫–∞–∑–∞—Ç—å—Å—è —Å –ø–µ—Ä–≤–æ–≥–æ –≤–∑–≥–ª—è–¥–∞. –ü–æ—Ö–æ–∂–µ, –µ–≥–æ –º–æ–∂–Ω–æ —Ö–æ—Ä–æ—à–æ –ø—Ä–æ–¥–∞—Ç—å üí∞, –µ—Å–ª–∏, –∫–æ–Ω–µ—á–Ω–æ, —É–¥–∞—Å—Ç—Å—è –≤—ã–Ω–µ—Å—Ç–∏'
        elif next_gen == 4:
            callback_button0 = types.InlineKeyboardButton(text = '–ë—Ä–æ—Å–∏—Ç—å –º–æ–Ω–µ—Ç–∫—É üí∏',callback_data = 'drop ' + str(idk))
            keyboard.add(callback_button0)
            phot = 'AgACAgIAAx0CZQN7rQACwwRi8t920_InxPRHCFJRBhJHi609NAAC274xGxy_mEtJHCxhP9SvfQEAAwIAA3MAAykE'
            new_txt = '–í–µ—Å—å–º–∞ –∏–∑—ã—Å–∫–∞–Ω–Ω—ã–π —Ñ–æ–Ω—Ç–∞–Ω —Å—Ç–æ—è–ª –ø–æ—Å—Ä–µ–¥–∏ –Ω–µ–±–æ–ª—å—à–æ–≥–æ –æ–∑–µ—Ä–∞. –ö—Ç–æ –∏ –∑–∞—á–µ–º –µ–≥–æ —Å—é–¥–∞ –ø–æ—Å—Ç–∞–≤–∏–ª? –ö–∞–∫ –±—ã —Ç–æ –Ω–∏ –±—ã–ª–æ, ' + nam + ' –Ω–µ —É–≤–∏–¥–µ–ª–∞ –Ω–∏—á–µ–≥–æ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∏ –ø—Ä–µ–¥–ª–æ–∂–∏–ª–∞ –∫–∏–Ω—É—Ç—å —Ç—É–¥–∞ –º–æ–Ω–µ—Ç–∫—É'
            if gender == 1:
                new_txt = '–í–µ—Å—å–º–∞ –∏–∑—ã—Å–∫–∞–Ω–Ω—ã–π —Ñ–æ–Ω—Ç–∞–Ω —Å—Ç–æ—è–ª –ø–æ—Å—Ä–µ–¥–∏ –Ω–µ–±–æ–ª—å—à–æ–≥–æ –æ–∑–µ—Ä–∞. –ö—Ç–æ –∏ –∑–∞—á–µ–º –µ–≥–æ —Å—é–¥–∞ –ø–æ—Å—Ç–∞–≤–∏–ª? –ö–∞–∫ –±—ã —Ç–æ –Ω–∏ –±—ã–ª–æ, ' + nam + ' –Ω–µ —É–≤–∏–¥–µ–ª –Ω–∏—á–µ–≥–æ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∏ –ø—Ä–µ–¥–ª–æ–∂–∏–ª –∫–∏–Ω—É—Ç—å —Ç—É–¥–∞ –º–æ–Ω–µ—Ç–∫—É'
        elif next_gen == 5:
            callback_button0 = types.InlineKeyboardButton(text = '–ù–∞–±—Ä–∞—Ç—å –∞-–ø–æ—Ö–º–µ–ª–∏–Ω–∞ üçº',callback_data = 'anti ' + str(idk))
            keyboard.add(callback_button0)
            phot = 'AgACAgIAAx0CZQN7rQACwd1i7HKMaDbODOjA7IV5RYxI01bcTAACwMAxG3RJYUvRcTOFHbiG3QEAAwIAA3MAAykE'
            new_txt = '–ù–µ –º–æ–∂–µ—Ç –±—ã—Ç—å, –¥–∞ —ç—Ç–æ –∂–µ —Ü–µ–ª–æ–µ –æ–∑–µ—Ä–æ –∞–Ω—Ç–∏–ø–æ—Ö–º–µ–ª–∏–Ω–∞! –ù–∞ –ø—Ä–æ—Ç—è–∂–µ–Ω–∏–∏ –º–Ω–æ–≥–∏—Ö –≤–µ–∫–æ–≤ —ç—Ç–∞ –∂–∏–¥–∫–æ—Å—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∞—Å—å –æ—Ç –ø–æ—Ö–º–µ–ª—å—è, –∏ –ª–∏—à—å –Ω–µ–¥–∞–≤–Ω–∏–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –ø–æ–∫–∞–∑–∞–ª–∏, —á—Ç–æ –æ–Ω–∞ –ª–µ—á–∏—Ç –æ—Å—Ç–∞–ª—å–Ω—ã–µ –±–æ–ª–µ–∑–Ω–∏ —Ç–æ–∂–µ. –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Ä–µ—Ü–µ–ø—Ç –∞–Ω—Ç–∏–ø–æ—Ö–º–µ–ª–∏–Ω–∞ –±—ã–ª –±–µ–∑–≤–æ–∑–≤—Ä–∞—Ç–Ω–æ —É—Ç–µ—Ä—è–Ω. –ù–µ–ª—å–∑—è —É–ø—É—Å–∫–∞—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤–∑—è—Ç—å —Å —Å–æ–±–æ–π –Ω–µ–º–Ω–æ–≥–æ'
        elif next_gen == 6:
            callback_button0 = types.InlineKeyboardButton(text = '–°—ä–µ—Å—Ç—å –ø–∏—Ü—Ü—É üçï',callback_data = 'eat ' + str(idk))
            keyboard.add(callback_button0)
            phot = 'AgACAgIAAx0CZQN7rQACwwABYvLc79baJMP4YDV4iM_6n0U1Y0kAAte-MRscv5hL2-WMSvjaptEBAAMCAANzAAMpBA'
            new_txt = '–í–∞–º –ø–æ–≤–µ–∑–ª–æ, –≤—ã –Ω–∞—à–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫—É—Å—Ç–æ–≤ –ø–∏—Ü—Ü—ã. –ù–∞–π—Ç–∏ –¥–∏–∫–æ—Ä–∞—Å—Ç—É—â—É—é –ø–∏—Ü—Ü—É - –±–æ–ª—å—à–∞—è —É–¥–∞—á–∞ –≤ –Ω–∞—à–µ–º –º–∏—Ä–µ, –Ω–æ –Ω–µ –∑–¥–µ—Å—å. ' + nam + ' –º–æ–∂–µ—Ç —Å—ä–µ—Å—Ç—å –ø–ª–æ–¥—ã –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–≤–æ–∏ —Å–∏–ª—ã, –∫–æ–Ω–µ—á–Ω–æ, –µ—Å–ª–∏ —Ç—ã –µ–π —Ä–∞–∑—Ä–µ—à–∏—à—å'
            if gender == 1:
                new_txt = '–í–∞–º –ø–æ–≤–µ–∑–ª–æ, –≤—ã –Ω–∞—à–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫—É—Å—Ç–æ–≤ –ø–∏—Ü—Ü—ã. –ù–∞–π—Ç–∏ –¥–∏–∫–æ—Ä–∞—Å—Ç—É—â—É—é –ø–∏—Ü—Ü—É - –±–æ–ª—å—à–∞—è —É–¥–∞—á–∞ –≤ –Ω–∞—à–µ–º –º–∏—Ä–µ, –Ω–æ –Ω–µ –∑–¥–µ—Å—å. ' + nam + ' –º–æ–∂–µ—Ç —Å—ä–µ—Å—Ç—å –ø–ª–æ–¥—ã –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–≤–æ–∏ —Å–∏–ª—ã, –∫–æ–Ω–µ—á–Ω–æ, –µ—Å–ª–∏ —Ç—ã –µ–º—É —Ä–∞–∑—Ä–µ—à–∏—à—å'
        elif next_gen == 7:
            phot = 'AgACAgIAAx0CZQN7rQACwvZi8tuNp4bk85D-ypnCu5OUalrZwwAC0L4xGxy_mEvzEzdkcbipPgEAAwIAA3MAAykE'
            generation[next_y*10+next_x] = 0
            letters = ['<b>"–î–µ–Ω—å 1. LGBT –º–∏—Ä –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø–æ–¥ –∑–µ–º–ª—ë–π –Ω–∞ –≥–ª—É–±–∏–Ω–µ –ø—Ä–∏–º–µ—Ä–Ω–æ 50 –∫–º, –∏ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–π —Ü–µ–ª—å—é –Ω–∞—à–µ–π —ç–∫—Å–ø–µ–¥–∏—Ü–∏–∏ —è–≤–ª—è–µ—Ç—Å—è –ø–æ–∏—Å–∫ –∑–∞–ª–µ–∂–µ–π –∞–Ω—Ç–∏–ø–æ—Ö–º–µ–ª–∏–Ω–∞, –æ–±–Ω–∞—Ä—É–∂–µ–Ω–Ω—ã—Ö –ø—Ä–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–º –≥–µ–æ—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏. –û–¥–Ω–∞–∫–æ, –Ω–∞—à–∞ –Ω–∞—Å—Ç–æ—è—â–∞—è —Ü–µ–ª—å - –¥–æ–∫–∞–∑–∞—Ç—å —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ LGBTQ+ –º–∏—Ä–∞"</b>',
            '<b>"–î–µ–Ω—å 2. –†–∞–∑–º–µ—Ä—ã —ç—Ç–æ–π —Å–µ—Ç–∏ –ø–µ—â–µ—Ä –∏ –∑–∞–ø—É—Ç–∞–Ω–Ω–æ—Å—Ç—å –µ—ë —Ç–æ–Ω–Ω–µ–ª–µ–π –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —É–¥–∏–≤–ª—è—é—Ç. –ú—ã –≤ –ø—É—Ç–∏ —É–∂–µ —Ü–µ–ª—ã–π –¥–µ–Ω—å, –æ–¥–Ω–∞–∫–æ, —Å–Ω–æ–≤–∞ –∏ —Å–Ω–æ–≤–∞ –∫–∞–∫–∏–º-—Ç–æ –æ–±—Ä–∞–∑–æ–º –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –æ–±—Ä–∞—Ç–Ω–æ –∫ –ø–æ—Ä—Ç–∞–ª—É! –ö —Å—á–∞—Å—Ç—å—é, –∫—Ç–æ-—Ç–æ –¥–æ–¥—É–º–∞–ª—Å—è –Ω–∞—á–∞—Ç—å —Ä–∏—Å–æ–≤–∞—Ç—å –∫–∞—Ä—Ç—É"</b>',
            '<b>"–î–µ–Ω—å 3. –ù–∞—à–∏ –ø—Ä–∏–ø–∞—Å—ã —Å—Ç—Ä–µ–º–∏—Ç–µ–ª—å–Ω–æ –∑–∞–∫–∞–Ω—á–∏–≤–∞—é—Ç—Å—è. –í–æ–∑–º–æ–∂–Ω–æ, –Ω–µ —Å—Ç–æ–∏–ª–æ –±—Ä–∞—Ç—å –≤–æ–¥–∫–∏ –±–æ–ª—å—à–µ, —á–µ–º –µ–¥—ã. –ö —Ç–æ–º—É –∂–µ, –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è —Ç–æ–ø–ª–∏–≤–æ –¥–ª—è –æ–≥–Ω–µ–º—ë—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–º–∏ –º—ã –æ—Ç–±–∏–≤–∞–µ–º—Å—è –æ—Ç –ø–æ–ª—á–∏—â —Ñ—É—Ä—Ä–∏. –ù–∞–¥–µ—é—Å—å, —Å–∫–æ—Ä–æ —è —Å–º–æ–≥—É –≤–µ—Ä–Ω—É—Ç—å—Å—è –¥–æ–º–æ–π"</b>',
            '<b>"–î–µ–Ω—å 4. –ú—ã –Ω–∞—à–ª–∏ —Ü–µ–ª–æ–µ –æ–∑–µ—Ä–æ –∞–Ω—Ç–∏–ø–æ—Ö–º–µ–ª–∏–Ω–∞! –ù–∏–∫—Ç–æ –Ω–µ –≤–µ—Ä–∏–ª –≤ —Ç–æ, —á—Ç–æ –≥–¥–µ-—Ç–æ –µ—â—ë –æ—Å—Ç–∞–ª–∞—Å—å —Ö–æ—Ç—è –±—ã –∫–∞–ø–ª—è, –Ω–æ –≤–æ—Ç –∂–µ –æ–Ω! –ß—Ç–æ –∂, —Å–∞–º–æ–µ –≤—Ä–µ–º—è –≤—ã–ø–∏—Ç—å –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –∑–∞–ø–∞—Å—ã –≤–æ–¥–∫–∏ - —Ä–∞–∑–≤–µ –Ω–µ –¥–ª—è —ç—Ç–æ–≥–æ –∏ –Ω—É–∂–µ–Ω –∞–Ω—Ç–∏–ø–æ—Ö–º–µ–ª–∏–Ω?"</b>',
            '<b>"–î–µ–Ω—å 5. –û—Å—Ç–∞–ª–∏—Å—å —Ç–æ–ª—å–∫–æ —è –∏ –õ—ë—Ö–∞... –ú—ã –±—É—Ö–∞–ª–∏ –Ω–∞ –±–µ—Ä–µ–≥—É, –ø–æ–∫–∞ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø–æ—à–ª–∏ –∫—É–ø–∞—Ç—å—Å—è –≤ –æ–∑–µ—Ä–µ. –≠—Ç–æ –∑–≤—É—á–∏—Ç –Ω–µ–≤–æ–æ–±—Ä–∞–∑–∏–º–æ, –Ω–æ —Å–ø—É—Å—Ç—è –ø–∞—Ä—É –º–∏–Ω—É—Ç –Ω–∞ –º–æ–∏—Ö –≥–ª–∞–∑–∞—Ö –∏—Ö –≤—Å–µ—Ö –º–≥–Ω–æ–≤–µ–Ω–Ω–æ —á—Ç–æ-—Ç–æ —É—Ç–∞—â–∏–ª–æ –ø–æ–¥ –≤–æ–¥—É. –Ø —Å—Ä–∞–∑—É –∂–µ –ø–æ–ø–ª—ã–ª —á—Ç–æ–±—ã –ø–æ–º–æ—á—å –∏–º, –Ω–æ –Ω–∏–∫–æ–≥–æ –Ω–µ –Ω–∞—à—ë–ª..."</b>']
            let = random.choice(letters)
            new_txt = '–ü–æ—Ö–æ–∂–µ, –∑–¥–µ—Å—å —ç–∫—Å–ø–µ–¥–∏—Ü–∏—è –æ—Å—Ç–∞–Ω–æ–≤–∏–ª–∞—Å—å –¥–ª—è –ø—Ä–∏–≤–∞–ª–∞, –Ω–æ –±—ã–ª–æ —ç—Ç–æ –æ—á–µ–Ω—å –¥–∞–≤–Ω–æ. –°—Ä–µ–¥–∏ –ø—É—Å—Ç—ã—Ö —É–ø–∞–∫–æ–≤–æ–∫ –≤–∏—Å–∫–∞—Å–∞ –∏ –ø—Ä–æ—á–µ–≥–æ –º—É—Å–æ—Ä–∞ ' + nam + ' –Ω–∞—à–ª–∞ –ø–æ–∂–µ–ª—Ç–µ–≤—à–∏–π –∫–ª–æ—á–æ–∫ –±—É–º–∞–≥–∏. –í–∏–¥–∏–º–æ, —ç—Ç–æ –æ—Ç—Ä—ã–≤–æ–∫ –∏–∑ –∂—É—Ä–Ω–∞–ª–∞ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–∏:\n' + let
            if gender == 1:
                new_txt = '–ü–æ—Ö–æ–∂–µ, –∑–¥–µ—Å—å —ç–∫—Å–ø–µ–¥–∏—Ü–∏—è –æ—Å—Ç–∞–Ω–æ–≤–∏–ª–∞—Å—å –¥–ª—è –ø—Ä–∏–≤–∞–ª–∞, –Ω–æ –±—ã–ª–æ —ç—Ç–æ –æ—á–µ–Ω—å –¥–∞–≤–Ω–æ. –°—Ä–µ–¥–∏ –ø—É—Å—Ç—ã—Ö —É–ø–∞–∫–æ–≤–æ–∫ –≤–∏—Å–∫–∞—Å–∞ –∏ –ø—Ä–æ—á–µ–≥–æ –º—É—Å–æ—Ä–∞ ' + nam + ' –Ω–∞—à–µ–ª –ø–æ–∂–µ–ª—Ç–µ–≤—à–∏–π –∫–ª–æ—á–æ–∫ –±—É–º–∞–≥–∏. –í–∏–¥–∏–º–æ, —ç—Ç–æ –æ—Ç—Ä—ã–≤–æ–∫ –∏–∑ –∂—É—Ä–Ω–∞–ª–∞ —ç–∫—Å–ø–µ–¥–∏—Ü–∏–∏:\n' + let
        elif next_gen == 8:

            md = pack(mas)
            gd = pack(generation)
            cursor.execute("UPDATE dungeons SET map = '" + str(md) + "',generation = '" + str(gd) + "',cur_x = " + str(next_x) + ",cur_y = " + str(next_y) + " WHERE id = " + str(idk))

            c = random.randint(0,2)
            if c == 0:
                enemy1 = -1
                enemy2 = 0
                enemy3 = 1
                hpe1 = 0
                hpe2 = 3
                hpe3 = 2
            if c == 1:
                enemy1 = -1
                enemy2 = 3
                enemy3 = -1
                hpe1 = 0
                hpe2 = 3
                hpe3 = 0
            if c == 2:
                enemy1 = -1
                enemy2 = 5
                enemy3 = -1
                hpe1 = 0
                hpe2 = 3
                hpe3 = 0

            im1 = Image.open('bot/back.png')
            if enemy1 != -1:
                im2 = Image.open('bot/enemy'+str(enemy1)+'.png')
                im1.paste(im2.convert('RGB'), (90,130), im2)
            if enemy2 != -1:
                im2 = Image.open('bot/enemy'+str(enemy2)+'.png')
                im1.paste(im2.convert('RGB'), (300,130), im2)
            if enemy3 != -1:
                im2 = Image.open('bot/enemy'+str(enemy3)+'.png')
                im1.paste(im2.convert('RGB'), (530,130), im2)
            im1.save('bot/result.png')
            f = open("bot/result.png","rb")
            new_txt = '–¢–∏—à–∏–Ω—É –æ–±–æ—Ä–≤–∞–ª –∑–≤—É–∫ –±—ã—Å—Ç—Ä–æ –ø—Ä–∏–±–ª–∏–∂–∞—é—â–∏—Ö—Å—è —à–∞–≥–æ–≤. –ö—Ç–æ –±—ã —ç—Ç–æ –Ω–∏ –±—ã–ª, –∏–¥—ë—Ç –æ–Ω —è–≤–Ω–æ –Ω–µ —Å –¥–æ–±—Ä—ã–º–∏ –Ω–∞–º–µ—Ä–µ–Ω–∏—è–º–∏. –ü–æ—Ö–æ–∂–µ, –±–æ—è –Ω–µ –∏–∑–±–µ–∂–∞—Ç—å\n\n–ë–æ–π –Ω–∞—á–Ω—ë—Ç—Å—è —á–µ—Ä–µ–∑ 15 —Å–µ–∫—É–Ω–¥, —Å–æ–±–∏—Ä–∞–π —Å–∏–º–≤–æ–ª—ã –ø–æ 4 –≤ —Ä—è–¥ —á—Ç–æ–±—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫—É\n\nüü• üüß - –±–ª–æ–∫\n\nüü° üü¢ - –∞—Ç–∞–∫–∞\n\nüíô - –ø–ª—é—Å –æ–¥–∏–Ω —Ö–æ–¥'
            if gender == 1:
                new_txt = '–¢–∏—à–∏–Ω—É –æ–±–æ—Ä–≤–∞–ª –∑–≤—É–∫ –±—ã—Å—Ç—Ä–æ –ø—Ä–∏–±–ª–∏–∂–∞—é—â–∏—Ö—Å—è —à–∞–≥–æ–≤. –ö—Ç–æ –±—ã —ç—Ç–æ –Ω–∏ –±—ã–ª, –∏–¥—ë—Ç –æ–Ω —è–≤–Ω–æ –Ω–µ —Å –¥–æ–±—Ä—ã–º–∏ –Ω–∞–º–µ—Ä–µ–Ω–∏—è–º–∏. –ü–æ—Ö–æ–∂–µ, –±–æ—è –Ω–µ –∏–∑–±–µ–∂–∞—Ç—å\n\n–ë–æ–π –Ω–∞—á–Ω—ë—Ç—Å—è —á–µ—Ä–µ–∑ 15 —Å–µ–∫—É–Ω–¥, —Å–æ–±–∏—Ä–∞–π —Å–∏–º–≤–æ–ª—ã –ø–æ 4 –≤ —Ä—è–¥ —á—Ç–æ–±—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –Ω–µ–∫–æ–º–∞–ª—å—á–∏–∫–∞\n\nüü• üüß - –±–ª–æ–∫\n\nüü° üü¢ - –∞—Ç–∞–∫–∞\n\nüíô - –ø–ª—é—Å –æ–¥–∏–Ω —Ö–æ–¥'
            mdk = bot.edit_message_media(media=telebot.types.InputMedia(media='AgACAgIAAx0CZQN7rQACwsFi8ct1qI3M_i1Bt1Tk_WvAbq7BWAACqcQxG-SBkUvkDVBnBMaohgEAAwIAA3MAAykE',caption=new_txt,type="photo",parse_mode='HTML'),chat_id=call.message.chat.id, message_id=call.message.message_id)
            field = []
            sym = ['üü•','üüß','üü°','üü¢','üíô']
            for i in range(36):
                s = random.randint(0,4)
                field.append(s)
            while True:
             found = False
             for j in range(6):
              for i in range(3):
                if field[j*6+i] != -1 and field[j*6+i] == field[j*6+i+1] and field[j*6+i+1] == field[j*6+i+2] and field[j*6+i+2] == field[j*6+i+3]:
                    field[j*6+i] = -1
                    field[j*6+i+1] = -1
                    field[j*6+i+2] = -1
                    field[j*6+i+3] = -1
                    found = True
             for j in range(3):
              for i in range(6):
                if field[j*6+i] != -1 and field[j*6+i] == field[(j+1)*6+i] and field[(j+1)*6+i] == field[(j+2)*6+i] and field[(j+2)*6+i] == field[(j+3)*6+i]:
                    field[j*6+i] = -1
                    field[(j+1)*6+i] = -1
                    field[(j+2)*6+i] = -1
                    field[(j+3)*6+i] = -1
                    found = True
             if found == False:
                break
             while True:
                f = False
                for i in range(36):
                    if field[i] == -1:
                        f = True
                        if i < 6:
                            field[i] = random.randint(0,4)
                        else:
                            field[i] = field[i-6]
                            field[i-6] = -1
                if f == False:
                    break
            blocks = 0
            turns = 2
            targ = 1
            keyboard = types.InlineKeyboardMarkup(row_width=6)
            target1 = types.InlineKeyboardButton(text = '–¶–µ–ª—å 1 ‚öîÔ∏è',callback_data = 'pve ' + str(idk) + ' ' + str(turns) + ' ' + str(blocks) + ' -4 1 ' + str(targ) + ' ' + str(enemy1) + ' ' + str(enemy2) + ' ' + str(enemy3) + ' ' + str(hpe1) + ' ' + str(hpe2) + ' ' + str(hpe3))
            target2 = types.InlineKeyboardButton(text = '[–¶–µ–ª—å –≤—ã–±—Ä–∞–Ω–∞]',callback_data = 'pve ' + str(idk) + ' ' + str(turns) + ' ' + str(blocks) + ' -5 1 ' + str(targ) + ' ' + str(enemy1) + ' ' + str(enemy2) + ' ' + str(enemy3) + ' ' + str(hpe1) + ' ' + str(hpe2) + ' ' + str(hpe3))
            target3 = types.InlineKeyboardButton(text = '–¶–µ–ª—å 3 ‚öîÔ∏è',callback_data = 'pve ' + str(idk) + ' ' + str(turns) + ' ' + str(blocks) + ' -6 1 ' + str(targ) + ' ' + str(enemy1) + ' ' + str(enemy2) + ' ' + str(enemy3) + ' ' + str(hpe1) + ' ' + str(hpe2) + ' ' + str(hpe3))
            keyboard.add(target1,target2,target3)
            stack = []

            for i in range(36):
                callback_button = types.InlineKeyboardButton(text = sym[field[i]],callback_data = 'pve ' + str(idk) + ' ' + str(turns) + ' ' + str(blocks) + ' ' + str(i) + ' 1 ' + str(targ) + ' ' + str(enemy1) + ' ' + str(enemy2) + ' ' + str(enemy3) + ' ' + str(hpe1) + ' ' + str(hpe2) + ' ' + str(hpe3))
                stack.append(callback_button)
                if len(stack) == 6:
                    keyboard.add(stack[0],stack[1],stack[2],stack[3],stack[4],stack[5])
                    stack = []
            reroll = types.InlineKeyboardButton(text = 'üîÑ –ü–µ—Ä–µ–º–µ—à–∞—Ç—å',callback_data = 'pve ' + str(idk) + ' ' + str(turns) + ' ' + str(blocks) + ' -2 0 ' + str(targ) + ' ' + str(enemy1) + ' ' + str(enemy2) + ' ' + str(enemy3) + ' ' + str(hpe1) + ' ' + str(hpe2) + ' ' + str(hpe3))
            keyboard.add(reroll)
            #deleter = types.InlineKeyboardButton(text = 'üí• –†–∞–∑—Ä—É—à–∏—Ç—å —Ñ–∏–≥—É—Ä—É',callback_data = 'pve ' + str(idk) + ' ' + str(turns) + ' ' + str(blocks) + ' -3 0 ' + str(targ) + ' ' + str(enemy1) + ' ' + str(enemy2) + ' ' + str(enemy3) + ' ' + str(hpe1) + ' ' + str(hpe2) + ' ' + str(hpe3))
            #keyboard.add(deleter)
            md = pack(field)
            cursor.execute("UPDATE dungeons SET field = '" + str(md) + "',selected = -1 WHERE id = " + str(idk))
            txt = ''
            if enemy1 != -1:
                txt = txt + enemies[enemy1][0] + '\n[ '
                i = 1

                while i <= enemies[enemy1][1]:
                    if (i <= hpe1):
                        txt = txt + 'üü©'
                    else:
                        txt = txt + 'üü•'
                    i = i + 1
                txt = txt + ' ]\n'
            if enemy2 != -1:
                txt = txt + enemies[enemy2][0] + '\n[ '
                i = 1

                while i <= enemies[enemy2][1]:
                    if (i <= hpe2):
                        txt = txt + 'üü©'
                    else:
                        txt = txt + 'üü•'
                    i = i + 1
                txt = txt + ' ]\n'
            if enemy3 != -1:
                txt = txt + enemies[enemy3][0] + '\n[ '
                i = 1

                while i <= enemies[enemy3][1]:
                    if (i <= hpe3):
                        txt = txt + 'üü©'
                    else:
                        txt = txt + 'üü•'
                    i = i + 1
                txt = txt + ' ]\n'
            txt = txt + '\n'  + nam + '\n[ '
            i = 1
            while i <= maxhp:
                if i <= hp:
                    txt = txt + 'üü©'
                else:
                    txt = txt + 'üü•'
                i = i + 1
            txt = txt + ' ]\n\n'
            time.sleep(15)
            im1 = Image.open('bot/back.png')
            enems = [enemy1,enemy2,enemy3]
            if enems[0] != -1:
                im2 = Image.open('bot/enemy'+str(enems[0])+'.png')
                im1.paste(im2.convert('RGB'), (enemies[enems[0]][2]-233,enemies[enems[0]][3]), im2)
            if enems[1] != -1:
                im2 = Image.open('bot/enemy'+str(enems[1])+'.png')
                im1.paste(im2.convert('RGB'), (enemies[enems[1]][2],enemies[enems[1]][3]), im2)
            if enems[2] != -1:
                im2 = Image.open('bot/enemy'+str(enems[2])+'.png')
                im1.paste(im2.convert('RGB'), (enemies[enems[2]][2]+233,enemies[enems[2]][3]), im2)
            im1.save('bot/result.png')
            f = open("bot/result.png","rb")
            bot.edit_message_media(media=telebot.types.InputMedia(media=f,caption=txt + "–û—Å—Ç–∞–ª–æ—Å—å —Ö–æ–¥–æ–≤ –¥–æ –∞—Ç–∞–∫–∏ –≤—Ä–∞–≥–∞:  " + str(turns),type="photo",parse_mode='HTML'),chat_id=call.message.chat.id, message_id=call.message.message_id,reply_markup=keyboard)

            f.close()
            return
        else:
            phot = 'AgACAgIAAx0CZQN7rQACsTdi5aOWZGH8r_RsZ4ZDXbGXHwZZxwACz8AxG2fEKUv9PoikvhKaVgEAAwIAA3MAAykE'
            new_txt = '–ú–∞—Å—à—Ç–∞–±—ã —ç—Ç–∏—Ö –ø–µ—â–µ—Ä –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —É–¥–∏–≤–ª—è—é—Ç, –∞ –∏—Ö –∫—Ä–∞—Å–æ—Ç–∞ –∑–∞–≤–æ—Ä–∞–∂–∏–≤–∞–µ—Ç. –ó–¥–µ—Å—å –∂–µ –Ω–µ—Ç –∞–±—Å–æ–ª—é—Ç–Ω–æ –Ω–∏—á–µ–≥–æ –ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ–≥–æ, –∞ —Ç–∏—à–∏–Ω—É –ª–∏—à—å –∏–∑—Ä–µ–¥–∫–∞ –Ω–∞—Ä—É—à–∞–µ—Ç –ø–∞–¥–µ–Ω–∏–µ –∫–∞–ø–µ–ª—å –≤–æ–¥—ã'
        md = pack(mas)
        gd = pack(generation)
        cursor.execute("UPDATE dungeons SET map = '" + str(md) + "',generation = '" + str(gd) + "',co = " + str(co) + ",wh = " + str(wh) + ",mo = " + str(mo) + ",he = " + str(he) + ",cur_x = " + str(next_x) + ",cur_y = " + str(next_y) + " WHERE id = " + str(idk))
        txt = new_txt + '\n\n' + '–î–æ–±—ã—á–∞:  ' + str(co) + 'üí∞ ' + str(wh) + 'üç´ ' + str(mo) + '‚ö°Ô∏è ' + str(he) + 'üçº\n'+'–ö–∞—Ä—Ç–∞:\n'
        for a in range(0, 13):
            for b in range(0, 10):
                if mas[a*10+b] == 0:
                    txt = txt + '‚óºÔ∏è'
                if mas[a*10+b] == 1:
                    txt = txt + '‚ñ´Ô∏è'
                if mas[a*10+b] == 2:
                    txt = txt + 'üü•'
                if mas[a*10+b] == 3:
                    txt = txt + 'üü¢'
                if mas[a*10+b] == 4:
                    txt = txt + 'üü©'
                if mas[a*10+b] == 5:
                    txt = txt + 'üüß'
            txt = txt + '\n'
        callback_button1 = types.InlineKeyboardButton(text = '‚¨ÜÔ∏è',callback_data = 'move ' + str(idk) + ' 1')
        callback_button2 = types.InlineKeyboardButton(text = '‚¨ÖÔ∏è',callback_data = 'move ' + str(idk) + ' 4')
        callback_button3 = types.InlineKeyboardButton(text = '‚è∫',callback_data = 'nothing')
        callback_button4 = types.InlineKeyboardButton(text = '‚û°Ô∏è',callback_data = 'move ' + str(idk) + ' 2')
        callback_button5 = types.InlineKeyboardButton(text = '‚¨áÔ∏è',callback_data = 'move ' + str(idk) + ' 3')
        callback_button6 = types.InlineKeyboardButton(text = '–£–π—Ç–∏ üîö',callback_data = 'back ' + str(idk))
        keyboard.add(callback_button1,callback_button5,callback_button2,callback_button4)
        keyboard.add(callback_button6)
        bot.edit_message_media(media=telebot.types.InputMedia(media=phot,caption=txt,type="photo",parse_mode='HTML'),chat_id=call.message.chat.id, message_id=call.message.message_id, reply_markup=keyboard)

      elif "back" in call.data:
        args = call.data.split()
        idk = int(args[1])
        if call.from_user.id != idk:
            answer_callback_query(call,'–ü–∞—à–æ–ª –Ω–∞—Ö—É–π')

            return
        answer_callback_query(call,'–£—Å–ø–µ—à–Ω–æ')
        time.sleep(0.25)
        data = cursor.execute('SELECT * FROM neko WHERE id = '+str(idk))
        data = data.fetchone()
        coins = data[11]
        buff = data[12]
        monsters = data[20]
        heal = data[21]
        gender = data[33]
        baza = data[8]
        data = cursor.execute('SELECT * FROM dungeons WHERE id = '+str(idk))
        data = data.fetchone()
        co = data[6]
        wh = data[7]
        mo = data[8]
        he = data[9]
        coins = coins + co
        buff = buff + wh
        if wh != 0 and baza >= 6:
            buff = buff + 1
        monsters = monsters + mo
        heal = heal + he
        cursor.execute("UPDATE neko SET coins = "+ str(coins) +",buff = "+str(buff)+",monsters = "+str(monsters)+",heal = "+str(heal)+" WHERE id = " + str(idk))
        cursor.execute("DELETE FROM dungeons WHERE id = "+str(idk))


        txt = '–¢–≤–æ—è –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫–∞ –≤–µ—Ä–Ω—É–ª–∞—Å—å –æ–±—Ä–∞—Ç–Ω–æ –∏ –ø—Ä–∏–Ω–µ—Å–ª–∞ –≤—Å—ë, —á—Ç–æ –Ω–∞—à–ª–∞ –≤ —ç—Ç–æ–º –∑–∞–≥–∞–¥–æ—á–Ω–æ–º –º–∏—Ä–µ. –ú–æ–∂–µ—Ç —Å—Ç–æ–∏—Ç –Ω–∞–≥—Ä–∞–¥–∏—Ç—å –µ—ë –≤–∏—Å–∫–∞—Å–æ–º?'
        if gender == 1:
            txt = '–¢–≤–æ–π –Ω–µ–∫–æ–º–∞–ª—å—á–∏–∫ –≤–µ—Ä–Ω—É–ª–∞—Å—å –æ–±—Ä–∞—Ç–Ω–æ –∏ –ø—Ä–∏–Ω—ë—Å –≤—Å—ë, —á—Ç–æ –Ω–∞—à—ë–ª –≤ —ç—Ç–æ–º –∑–∞–≥–∞–¥–æ—á–Ω–æ–º –º–∏—Ä–µ. –ú–æ–∂–µ—Ç —Å—Ç–æ–∏—Ç –Ω–∞–≥—Ä–∞–¥–∏—Ç—å –µ–≥–æ –≤–∏—Å–∫–∞—Å–æ–º?'
        bot.edit_message_media(media=telebot.types.InputMedia(media='AgACAgIAAx0CZQN7rQACwxZi8uNUoMtUGP6J96D7X-pveAGj3wAC374xGxy_mEsWdB1RBPi4nQEAAwIAA3MAAykE',caption=txt,type="photo"),chat_id=call.message.chat.id, message_id=call.message.message_id)

      elif "nothing" in call.data:
        answer_callback_query(call,'–≠—Ç–∞ –∫–Ω–æ–ø–∫–∞ –¥–ª—è –∫—Ä–∞—Å–æ—Ç—ã')

      elif "get" in call.data:
        args = call.data.split()
        idk = int(args[1])
        gndr = int(args[2])
        cs = int(args[3])
        if call.from_user.id != idk:
            answer_callback_query(call,'–ü–∞—à–æ–ª –Ω–∞—Ö—É–π')

            return
        data = cursor.execute('SELECT * FROM neko WHERE id = '+str(idk))
        data = data.fetchone()
        if data is None:
            answer_callback_query(call,'–ü–∞—à–æ–ª –Ω–∞—Ö—É–π')

            return
        answer_callback_query(call,'–£—Å–ø–µ—à–Ω–æ')
        keyboard = types.InlineKeyboardMarkup(row_width=3)
        callback_button1 = types.InlineKeyboardButton(text = '–¢–û–ß–ù–û –ë–õ–Ø–¢–¨ –í–ó–Ø–¢–¨? ‚úÖ',callback_data = 'fuck ' + str(idk) + ' ' + str(gndr))
        keyboard.add(callback_button1)
        if cs == 0:
            callback_button2 = types.InlineKeyboardButton(text = '–ù–µ –±—Ä–∞—Ç—å ‚ùå',callback_data = 'dont ' + str(idk))
        else:
            callback_button2 = types.InlineKeyboardButton(text = '–í–∑—è—Ç—å 50 –Ω–µ–∫–æ–≥—Ä–∏–≤–µ–Ω üí∞',callback_data = 'money ' + str(idk))
        keyboard.add(callback_button2)
        bot.edit_message_media(media=telebot.types.InputMedia(media=call.message.photo[0].file_id,type="photo"),chat_id=call.message.chat.id, message_id=call.message.message_id,reply_markup=keyboard)
        time.sleep(1)

      elif "wear" in call.data:
        args = call.data.split()
        idk = int(args[1])
        if call.from_user.id != idk:
            answer_callback_query(call,'–ü–∞—à–æ–ª –Ω–∞—Ö—É–π')

            return
        data = cursor.execute('SELECT * FROM neko WHERE id = '+str(idk))
        data = data.fetchone()
        if data is None:
            answer_callback_query(call,'–ü–∞—à–æ–ª –Ω–∞—Ö—É–π')

            return

        answer_callback_query(call,'–£—Å–ø–µ—à–Ω–æ')
        photka = call.message.photo[0].file_id
        cursor.execute("UPDATE neko SET gifka = 'Nothing',new_phot = '"+photka+"' WHERE id = "+ str(idk))
        bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)
        time.sleep(1)

      elif "fuck" in call.data:
        args = call.data.split()
        idk = int(args[1])
        gndr = int(args[2])
        if call.from_user.id != idk:
            answer_callback_query(call,'–ü–∞—à–æ–ª –Ω–∞—Ö—É–π')

            return
        data = cursor.execute('SELECT * FROM neko WHERE id = '+str(idk))
        data = data.fetchone()
        if data is None:
            answer_callback_query(call,'–ü–∞—à–æ–ª –Ω–∞—Ö—É–π')

            return

        answer_callback_query(call,'–£—Å–ø–µ—à–Ω–æ')
        nam = str(data[1]).rstrip()
        baza = data[8]
        gender = data[33]
        if gndr == 0:
            text = '–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, —ç—Ç–æ —Ç–≤–æ—è –Ω–æ–≤–∞—è –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫–∞! –°—Ç–∞—Ä—É—é –º—ã —Å–∞–º–∏ –≤—ã–∫–∏–Ω–µ–º –≤ –±–ª–∏–∂–∞–π—à—É—é –∫–∞–Ω–∞–≤—É, —Ç–µ–±–µ –Ω–µ –Ω—É–∂–Ω–æ –æ–± —ç—Ç–æ–º –±–µ—Å–ø–æ–∫–æ–∏—Ç—å—Å—è ‚ò†Ô∏è'
            if gender == 1:
                text = '–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, —ç—Ç–æ —Ç–≤–æ—è –Ω–æ–≤–∞—è –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫–∞! –°—Ç–∞—Ä–æ–≥–æ –Ω–µ–∫–æ–º–∞–ª—å—á–∏–∫–∞ –º—ã —Å–∞–º–∏ –≤—ã–∫–∏–Ω–µ–º –≤ –±–ª–∏–∂–∞–π—à—É—é –∫–∞–Ω–∞–≤—É, —Ç–µ–±–µ –Ω–µ –Ω—É–∂–Ω–æ –æ–± —ç—Ç–æ–º –±–µ—Å–ø–æ–∫–æ–∏—Ç—å—Å—è ‚ò†Ô∏è'
        else:
            text = '–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, —ç—Ç–æ —Ç–≤–æ–π –Ω–æ–≤—ã–π –Ω–µ–∫–æ–º–∞–ª—å—á–∏–∫! –°—Ç–∞—Ä—É—é –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫—É –º—ã —Å–∞–º–∏ –≤—ã–∫–∏–Ω–µ–º –≤ –±–ª–∏–∂–∞–π—à—É—é –∫–∞–Ω–∞–≤—É, —Ç–µ–±–µ –Ω–µ –Ω—É–∂–Ω–æ –æ–± —ç—Ç–æ–º –±–µ—Å–ø–æ–∫–æ–∏—Ç—å—Å—è ‚ò†Ô∏è'
            if gender == 1:
                text = '–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, —ç—Ç–æ —Ç–≤–æ–π –Ω–æ–≤—ã–π –Ω–µ–∫–æ–º–∞–ª—å—á–∏–∫! –°—Ç–∞—Ä–æ–≥–æ –º—ã —Å–∞–º–∏ –≤—ã–∫–∏–Ω–µ–º –≤ –±–ª–∏–∂–∞–π—à—É—é –∫–∞–Ω–∞–≤—É, —Ç–µ–±–µ –Ω–µ –Ω—É–∂–Ω–æ –æ–± —ç—Ç–æ–º –±–µ—Å–ø–æ–∫–æ–∏—Ç—å—Å—è ‚ò†Ô∏è'
        bot.send_message(call.message.chat.id,text)
        photka = call.message.photo[0].file_id
        if nam == '–ù–µ–∫–æ–¥–µ–≤–æ—á–∫–∞' or nam == '–ù–µ–∫–æ–º–∞–ª—å—á–∏–∫':
            cursor.execute("INSERT INTO dead (name,time) VALUES ('–ë–µ–∑—ã–º—è–Ω–Ω–∞—è –º–æ–≥–∏–ª–∞',"+str(int(time.time())) +")")
        else:
            cursor.execute("INSERT INTO dead (name,time) VALUES ('"+nam+"',"+str(int(time.time())) +")")
        if gndr == 0:
            newnam = '–ù–µ–∫–æ–¥–µ–≤–æ—á–∫–∞'
        else:
            newnam = '–ù–µ–∫–æ–º–∞–ª—å—á–∏–∫'
        kormit = time.time()
        gulat = time.time()
        cursor.execute("UPDATE neko SET new_phot = 'None', gender = " + str(gndr) + ", name = '" + newnam + "', gifka = 'Nothing', gulat = " + str(gulat) + ",kormit = " + str(kormit) + ", gladit = 0, licension = 0, photo = '"+photka+"' WHERE id = "+ str(idk))
        if baza >= 2:
            if gndr == 0:
                text = '–ù–æ–≤–æ–π –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫–µ, c—É–¥—è –ø–æ –≤—Å–µ–º—É, –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å —Ç–≤–æ—è –±–∞–∑–∞'
            else:
                text = '–ù–æ–≤–æ–º—É –Ω–µ–∫–æ–º–∞–ª—å—á–∏–∫—É, c—É–¥—è –ø–æ –≤—Å–µ–º—É, –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å —Ç–≤–æ—è –±–∞–∑–∞'
            bot.send_message(call.message.chat.id, text)
            bot.send_sticker(call.message.chat.id, 'CAACAgIAAxkBAAEFM5VixNUnaSAzda2fwcrxHsDUdA-caAACJw8AAmVYWEj9O0ji0K4xiikE')
        else:
            cursor.execute("UPDATE neko SET rep = 0 WHERE id = "+ str(idk))
        bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)
        time.sleep(1)

      elif "dont" in call.data:
        args = call.data.split()
        idk = int(args[1])
        if call.from_user.id != idk:
            answer_callback_query(call,'–ü–∞—à–æ–ª –Ω–∞—Ö—É–π')

            return
        data = cursor.execute('SELECT * FROM neko WHERE id = '+str(idk))
        data = data.fetchone()
        if data is None:
            answer_callback_query(call,'–ü–∞—à–æ–ª –Ω–∞—Ö—É–π')

            return
        answer_callback_query(call,'–£—Å–ø–µ—à–Ω–æ')
        bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)
        time.sleep(1)

      elif "skill" in call.data:
        args = call.data.split()
        idk = int(args[1])
        turn = int(args[2])
        sk = int(args[3])
        if call.from_user.id != idk:
            answer_callback_query(call,'–ü–∞—à–æ–ª –Ω–∞—Ö—É–π')
            return
        data = cursor.execute('SELECT * FROM neko WHERE id = '+str(idk))
        data = data.fetchone()
        if data is None:
            answer_callback_query(call,'–ü–∞—à–æ–ª –Ω–∞—Ö—É–π')
            return
        skill1 = data[30]
        skill2 = data[31]
        if turn == 1:
            cursor.execute("UPDATE neko SET skill_one = " + str(sk) + " WHERE id = "+ str(idk))
            skill1 = sk
        else:
            cursor.execute("UPDATE neko SET skill_two = " + str(sk) + " WHERE id = "+ str(idk))
            skill2 = sk
        if skill1 > 100:
            sktxt1 = active_skill_list[skill1-100]
        else:
            sktxt1 = passive_skill_list[skill1]
        if skill2 > 100:
            sktxt2 = active_skill_list[skill2-100]
        else:
            sktxt2 = passive_skill_list[skill2]

        answer_callback_query(call,'–£—Å–ø–µ—à–Ω–æ')
        time.sleep(2)
        txt = '–ù–∞–≤—ã–∫–∏ –∏–∑–º–µ–Ω–µ–Ω—ã:\n\n' + sktxt1 + '\n' + sktxt2
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,text = txt,parse_mode='HTML')



      elif "item" in call.data:
        args = call.data.split()
        idk = int(args[1])
        turn = int(args[2])
        it = int(args[3])
        if call.from_user.id != idk:
            answer_callback_query(call,'–ü–∞—à–æ–ª –Ω–∞—Ö—É–π')

            return
        data = cursor.execute('SELECT * FROM neko WHERE id = '+str(idk))
        data = data.fetchone()
        if data is None:
            answer_callback_query(call,'–ü–∞—à–æ–ª –Ω–∞—Ö—É–π')

            return

        answer_callback_query(call,'–£—Å–ø–µ—à–Ω–æ')
        if turn == 1:
            cursor.execute("UPDATE neko SET new_phot = 'None', item_one = " + str(it) + " WHERE id = "+ str(idk))
        else:
            cursor.execute("UPDATE neko SET new_phot = 'None', item_two = " + str(it) + " WHERE id = "+ str(idk))
        bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)
        time.sleep(1)

      elif "money" in call.data:
        args = call.data.split()
        idk = int(args[1])
        if call.from_user.id != idk:
            answer_callback_query(call,'–ü–∞—à–æ–ª –Ω–∞—Ö—É–π')

            return
        data = cursor.execute('SELECT * FROM neko WHERE id = '+str(idk))
        data = data.fetchone()
        if data is None:
            answer_callback_query(call,'–ü–∞—à–æ–ª –Ω–∞—Ö—É–π')

            return
        answer_callback_query(call,'–£—Å–ø–µ—à–Ω–æ')
        coins = data[11]
        bot.send_message(call.message.chat.id,'–î–µ–Ω—å–≥–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –ø–æ—á—Ç–æ–≤—ã–º –≥–æ–ª—É–±–µ–º')
        bot.send_sticker(call.message.chat.id, 'CAACAgIAAxkBAAEFOCFix4kIdkWwblTRCUvuw5oM3e3UQwACQRoAAvMOqEi2-xyG-vtxfCkE')
        coins = coins + 50
        cursor.execute("UPDATE neko SET coins = " + str(coins) + " WHERE id = "+ str(idk))
        bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)
        time.sleep(1)

      elif "pend" in call.data:
        args = call.data.split()
        idk = int(args[1])
        if call.from_user.id != idk:
            answer_callback_query(call,'–ü–∞—à–æ–ª –Ω–∞—Ö—É–π')
            return
        answer_callback_query(call,'–£—Å–ø–µ—à–Ω–æ')
        bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)
        cursor.execute("DELETE FROM poker WHERE id = "+str(idk))

      elif "pjoin" in call.data:
        args = call.data.split()
        idk = int(args[1])
        data = cursor.execute('SELECT * FROM neko WHERE id = '+str(call.from_user.id))
        data = data.fetchone()
        if data is None:
            answer_callback_query(call,'–ü–∞—à–æ–ª –Ω–∞—Ö—É–π')
            return
        bolnitsa = int(data[6] - time.time())
        coins = data[11]
        event = data[10]
        if coins < 20:
            answer_callback_query(call,'–ê –¥–µ–Ω—å–≥–∏ –≥–¥–µ')
            return
        if bolnitsa > 0:
            answer_callback_query(call,'–¢—ã –≤ –±–æ–ª—å–Ω–∏—Ü–µ')
            return
        if event > 0:
            answer_callback_query(call,'–¢—ã –≥—É–ª—è–µ—à—å')
            return
        if check_poker(call.from_user.id):
            answer_callback_query(call,'–¢—ã —É–∂–µ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è')
            return
        data = cursor.execute('SELECT * FROM poker WHERE id = '+str(idk))
        data = data.fetchone()
        if data is None:
            answer_callback_query(call,'–ü–∞—à–æ–ª –Ω–∞—Ö—É–π')
            return
        event = data[2]
        players = unpack(data[7])
        bank = unpack(data[8])
        names = unpack(data[9])
        money = unpack(data[10])
        if len(players) == 6:
            answer_callback_query(call,'–ú–∞–∫—Å–∏–º—É–º –∏–≥—Ä–æ–∫–æ–≤')
            return
        answer_callback_query(call,'–£—Å–ø–µ—à–Ω–æ')
        players.append(call.from_user.id)
        bank.append(5)
        names.append(call.from_user.first_name)
        money.append(coins)
        pd = pack(players)
        bd = pack(bank)
        nd = pack(names)
        md = pack(money)
        cursor.execute("UPDATE poker SET players = '" + str(pd) + "',bank = '" + str(bd) + "',names = '" + str(nd) + "',money = '" + str(md) + "' WHERE id = " + str(idk))
        keyboard = types.InlineKeyboardMarkup(row_width=2)

        callback_button1 = types.InlineKeyboardButton(text = '–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è ‚ûï',callback_data = 'pjoin ' + str(idk))
        callback_button2 = types.InlineKeyboardButton(text = '–°—Ç–∞—Ä—Ç ‚úÖ',callback_data = 'pstart ' + str(idk))
        callback_button3 = types.InlineKeyboardButton(text = '–û—Ç–º–µ–Ω–∞ ‚ùå',callback_data = 'pend ' + str(idk))
        keyboard.add(callback_button1)
        keyboard.add(callback_button2,callback_button3)
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,text = '–ò–¥—ë—Ç –Ω–∞–±–æ—Ä –≤ –ø–æ–∫–µ—Ä, –∫—Ç–æ –Ω–µ –æ—Ç–∑–æ–≤—ë—Ç—Å—è —Ç–æ—Ç –ª–æ—Ö\n–í—Ö–æ–¥ –æ—Ç 20 –Ω–µ–∫–æ–≥—Ä–∏–≤–µ–Ω üí∞\n'+str(len(players))+' –∏–∑ 2 –∏–≥—Ä–æ–∫–æ–≤',parse_mode='HTML',reply_markup=keyboard)

      elif "pstart" in call.data:
        args = call.data.split()
        idk = int(args[1])
        if call.from_user.id != idk:
            answer_callback_query(call,'–ü–∞—à–æ–ª –Ω–∞—Ö—É–π')
            return
        data = cursor.execute('SELECT * FROM neko WHERE id = '+str(idk))
        data = data.fetchone()
        if data is None:
            answer_callback_query(call,'–ü–∞—à–æ–ª –Ω–∞—Ö—É–π')
            return
        bolnitsa = int(data[6] - time.time())
        coins = data[11]
        event = data[10]
        if coins < 20:
            answer_callback_query(call,'–ê –¥–µ–Ω—å–≥–∏ –≥–¥–µ')
            return
        if bolnitsa > 0:
            answer_callback_query(call,'–¢—ã –≤ –±–æ–ª—å–Ω–∏—Ü–µ')
            return
        if event > 0:
            answer_callback_query(call,'–¢—ã –≥—É–ª—è–µ—à—å')
            return
        data = cursor.execute('SELECT * FROM poker WHERE id = '+str(idk))
        data = data.fetchone()
        if data is None:
            answer_callback_query(call,'–ü–∞—à–æ–ª –Ω–∞—Ö—É–π')
            return
        event = data[2]
        players = unpack(data[7])
        bank = unpack(data[8])
        names = unpack(data[9])
        money = unpack(data[10])
        if len(players) < 2:
            answer_callback_query(call,'–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∏–≥—Ä–æ–∫–æ–≤')
            return
        if event != -1:
            answer_callback_query(call,'–ü–∞—à–æ–ª –Ω–∞—Ö—É–π')
            return
        answer_callback_query(call,'–£—Å–ø–µ—à–Ω–æ')
        deck = [2.1,3.1,4.1,5.1,6.1,7.1,8.1,9.1,10.1,11.1,12.1,13.1,14.1,2.2,3.2,4.2,5.2,6.2,7.2,8.2,9.2,10.2,11.2,12.2,13.2,14.2,2.3,3.3,4.3,5.3,6.3,7.3,8.3,9.3,10.3,11.3,12.3,13.3,14.3,2.4,3.4,4.4,5.4,6.4,7.4,8.4,9.4,10.4,11.4,12.4,13.4,14.4]
        cards = []
        hand = []
        for i in range(5):
            d = random.choice(deck)
            deck.remove(d)
            cards.append(d)
        for j in range(len(players)):
            for i in range(2):
                d = random.choice(deck)
                deck.remove(d)
                hand.append(d)
        turn = players[0]
        pos = 0
        r = 1
        txt = ''
        for i in range(len(players)):
            txt = txt + names[i] + '  ' + str(bank[i]) + 'üí∞\n'
        txt = txt + '\n–•–æ–¥ <a href="tg://user?id='+str(turn)+'">'+str(names[pos])+'</a>',

        keyboard = types.InlineKeyboardMarkup(row_width=2)
        m = 5
        callback_button1 = types.InlineKeyboardButton(text = 'üÜó –ü—Ä–æ–ø—É—Å–∫',callback_data = 'poker ' + str(idk) + ' ' + str(turn) + ' ' + str(pos) + ' 1 ' + str(r))
        callback_button2 = types.InlineKeyboardButton(text = '‚ùå –°–¥–∞—Ç—å—Å—è',callback_data = 'poker ' + str(idk) + ' ' + str(turn) + ' ' + str(pos) + ' 2 ' + str(r))
        callback_button4 = types.InlineKeyboardButton(text = 'üîº –°—Ç–∞–≤–∫–∞ ('+str(m)+' üí∞)',callback_data = 'poker ' + str(idk) + ' ' + str(turn) + ' ' + str(pos) + ' 3 ' + str(r) + ' ' + str(m))
        callback_button5 = types.InlineKeyboardButton(text = '‚è´ –°—Ç–∞–≤–∫–∞ ('+str(2*m)+' üí∞)',callback_data = 'poker ' + str(idk) + ' ' + str(turn) + ' ' + str(pos) + ' 4 ' + str(r) + ' ' + str(2*m))
        callback_button3 = types.InlineKeyboardButton(text = '–ú–æ–∏ –∫–∞—Ä—Ç—ã',callback_data = 'hand ' + str(idk) + ' ' + str(turn) + ' ' + str(pos))
        keyboard.add(callback_button1,callback_button2)
        keyboard.add(callback_button4,callback_button5)
        keyboard.add(callback_button3)
        f = poker_image(cards,-1)
        m = bot.send_photo(call.message.chat.id, photo=f,caption = txt,reply_markup=keyboard,parse_mode='HTML')
        bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)
        cd = pack(cards)
        hd = pack(hand)
        wait = int(time.time() + 600)
        cursor.execute("UPDATE poker SET cards = '" + str(cd) + "',hand = '" + str(hd) + "',event = 2, wait = " + str(wait) + ", message = " + str(m.id) + " WHERE id = " + str(idk))

      elif 'poker' in call.data:
        args = call.data.split()
        idk = int(args[1])
        turn = int(args[2])
        pos = int(args[3])
        action = int(args[4])
        r = int(args[5])
        if call.from_user.id != turn:
            answer_callback_query(call,'–ù–µ —Ç–≤–æ–π —Ö–æ–¥')
            return
        data = cursor.execute('SELECT * FROM poker WHERE id = '+str(idk))
        data = data.fetchone()
        if data is None:
            answer_callback_query(call,'–ü–∞—à–æ–ª –Ω–∞—Ö—É–π')
            return
        answer_callback_query(call,'–£—Å–ø–µ—à–Ω–æ')
        cards = unpack(data[1])
        event = data[2]
        hand = unpack(data[6])
        players = unpack(data[7])
        bank = unpack(data[8])

        names = unpack(data[9])
        money = unpack(data[10])
        dead = unpack(data[11])
        vabank = unpack(data[12])
        end = False
        if action == 1:
            act_txt = names[pos] + ' –∑–∞—Å—Å–∞–ª –∏ –ø—Ä–æ–ø—É—Å—Ç–∏–ª —Ö–æ–¥\n\n'
        elif action == 2:
            act_txt = names[pos] + ' —Å–ª–∏–ª—Å—è, –Ω—É –∏ —Ö—É–π —Å –Ω–∏–º\n\n'
            names[pos] = '‚ò†Ô∏è‚ò†Ô∏è‚ò†Ô∏è'
            dead.append(turn)
            dd = pack(dead)
            nd = pack(names)
            cursor.execute("UPDATE poker SET dead = '" + str(dd) + "',names = '" + str(nd) + "' WHERE id = " + str(idk))
        elif action == 3 or action == 4:
            act_txt = names[pos] + ' –Ω–µ –∑–∞—Å—Å–∞–ª –∏ —Å–¥–µ–ª–∞–ª —Å—Ç–∞–≤–∫—É\n\n'
            m = int(args[6])
            bank[pos] = bank[pos] + m
            if bank[pos] >= money[pos]:
                vabank.append(turn)
                act_txt = names[pos] + ' —Å—Ç–∞–≤–∏—Ç –¥—É—à—É —Å–≤–æ–µ–π –º–∞—Ç–µ—Ä–∏\n\n'
            vd = pack(vabank)
            bd = pack(bank)
            cursor.execute("UPDATE poker SET vabank = '" + str(vd) + "', bank = '" + str(bd) + "' WHERE id = " + str(idk))
        #—É—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ –±–∞–Ω–∫–∞ –¥–ª—è —Ä–∞—Å—á–µ—Ç–æ–≤
        true_bank = bank.copy()
        for i in range(len(bank)):
            if players[i] in dead:
                bank[i] = max(bank)
            if players[i] in vabank:
                bank[i] = max(bank)
        balance = max(bank) == min(bank)
        #—É—Å–ª–æ–≤–∏—è –∫–æ–Ω—Ü–∞ –∏–≥—Ä—ã
        if len(dead) == len(players) - 1:
            end = True
        if len(vabank) >= len(players) - len(dead) - 1 and balance:
            end = True
        #—Å–º–µ–Ω–∞ —Ö–æ–¥—è—â–µ–≥–æ –∏–≥—Ä–æ–∫–∞
        if r == 1:
            pos = pos + 1
            while pos != len(players) and (players[pos] in dead or players[pos] in vabank):
                pos = pos + 1
        #–Ω–æ–≤–∞—è —Å—Ç–∞–¥–∏—è –∏–ª–∏ –∫–æ–Ω–µ—Ü
        if (r == 1 and pos == len(players) and balance) or (r == 2 and balance) or end == True:
            if end == True:
                event = 5
            pos = 0
            r = 1
            while pos != len(players) and (players[pos] in dead or players[pos] in vabank):
                pos = pos + 1
            f = poker_image(cards,event)
            event = event + 1
            if event == 6:
                #–ü–†–û–°–ß–ï–¢ –ö–û–ú–ë–ò–ù–ê–¶–ò–ô
                combinations = ['–°—Ç–∞—Ä—à–∞—è –∫–∞—Ä—Ç–∞','–ü–∞—Ä–∞','–î–≤–µ –ø–∞—Ä—ã','–°–µ—Ç','–°—Ç—Ä–∏—Ç','–§–ª–µ—à','–§—É–ª–ª —Ö–∞—É—Å','–ö–∞—Ä–µ','–°—Ç—Ä–∏—Ç —Ñ–ª–µ—à','–§–ª–µ—à —Ä–æ—è–ª—å']
                colors = ['‚ô¶Ô∏è','‚ô•Ô∏è','‚ô†Ô∏è','‚ô£Ô∏è']
                numbers = ['J','Q','K','A']
                player_combs = []
                for j in range(len(players)):
                    crd = cards.copy()
                    crd.append(hand[j*2])
                    crd.append(hand[j*2+1])
                    player_combs.append(combinator(crd))
                #–ì–ï–ù–ï–†–ê–¶–ò–Ø –¢–ï–ö–°–¢–ê
                txt = act_txt
                for i in range(len(players)):
                    hd = [hand[i*2],hand[i*2+1]]
                    txt = txt + names[i] + '  ' + str(true_bank[i]) + 'üí∞\n'
                    a = round(hd[0])
                    b = round((hd[0]%1)*10)
                    if a > 10:
                        a = numbers[a-11]
                    txt = txt + colors[b-1] + str(a) + '   '
                    a = round(hd[1])
                    b = round((hd[1]%1)*10)
                    if a > 10:
                        a = numbers[a-11]
                    txt = txt + colors[b-1] + str(a) + '\n'
                    txt = txt + str(combinations[round(player_combs[i])]) + '\n\n'
                #–í–´–ë–û–† –ü–û–ë–ï–î–ò–¢–ï–õ–Ø
                for i in range(len(players)):
                    if players[i] in dead:
                        player_combs[i] = -1
                max_comb = max(player_combs)
                if player_combs.count(max_comb) == 1:
                    winners = [player_combs.index(max_comb)]
                else:
                    for i in range(len(players)):

                            if math.isclose(player_combs[i],max_comb):
                                hd = [hand[i*2],hand[i*2+1]]
                                player_combs[i] = round(max(hd))
                            else:
                                player_combs[i] = -1
                    max_comb = max(player_combs)
                    winners = []
                    for i in range(len(players)):
                        if math.isclose(player_combs[i],max_comb):
                            winners.append(i)
                #–ì–ï–ù–ï–†–ê–¶–ò–Ø –¢–ï–ö–°–¢–ê
                if len(winners) == 1:
                    txt = txt + '–ü–æ–±–µ–¥–∏—Ç–µ–ª—å <a href="tg://user?id='+str(players[winners[0]])+'">'+str(names[winners[0]])+'</a>, –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å–æ—Å—É—Ç –±–∏–±—É'
                else:
                    txt = txt + '–ü–æ–±–µ–¥–∏—Ç–µ–ª–∏ '
                    for j in winners:
                        txt = txt + '<a href="tg://user?id='+str(players[j])+'">'+str(names[j])+'</a>, '
                    txt = txt + '–æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å–æ—Å—É—Ç –±–∏–±—É'
                #–†–ê–°–ü–†–ï–î–ï–õ–ï–ù–ò–ï –î–ï–ù–ï–ì
                max_cash = []
                for j in winners:
                    max_cash.append(true_bank[j])
                max_cash = max(max_cash)
                money = 0
                for i in range(len(players)):
                    if i in winners:
                        continue
                    if true_bank[i] > max_cash:
                        money += max_cash
                        cursor.execute("UPDATE neko SET coins = coins - " + str(max_cash) + " WHERE id = " + str(players[i]))
                    else:
                        money += true_bank[i]
                        cursor.execute("UPDATE neko SET coins = coins - " + str(true_bank[i]) + " WHERE id = " + str(players[i]))
                money = int(money/len(winners))
                for j in winners:
                    cursor.execute("UPDATE neko SET coins = coins + " + str(money) + " WHERE id = " + str(players[j]))
                time.sleep(2)
                bot.edit_message_media(media=telebot.types.InputMedia(media=f,caption = txt,type="photo",parse_mode='HTML'),chat_id=call.message.chat.id, message_id=call.message.message_id)
                cursor.execute("DELETE FROM poker WHERE id = "+str(idk))
                return
            cursor.execute("UPDATE poker SET event = " + str(event) + " WHERE id = " + str(idk))
            turn = players[pos]
            txt = act_txt
            for i in range(len(players)):
                txt = txt + names[i] + '  ' + str(true_bank[i]) + 'üí∞\n'
            txt = txt + '\n–•–æ–¥ <a href="tg://user?id='+str(turn)+'">'+str(names[pos])+'</a>'
            keyboard = types.InlineKeyboardMarkup(row_width=2)
            callback_button1 = types.InlineKeyboardButton(text = 'üÜó –ü—Ä–æ–ø—É—Å–∫',callback_data = 'poker ' + str(idk) + ' ' + str(turn) + ' ' + str(pos) + ' 1 ' + str(r))
            callback_button2 = types.InlineKeyboardButton(text = '‚ùå –°–¥–∞—Ç—å—Å—è',callback_data = 'poker ' + str(idk) + ' ' + str(turn) + ' ' + str(pos) + ' 2 ' + str(r))
            m = 5
            #–ú–ò–ù –°–¢–ê–í–ö–ê
            if money[pos] < bank[pos] + m:
                a = money[pos] - bank[pos]
                callback_button4 = types.InlineKeyboardButton(text = 'üîº –°—Ç–∞–≤–∫–∞ ('+str(a)+' üí∞)',callback_data = 'poker ' + str(idk) + ' ' + str(turn) + ' ' + str(pos) + ' 3 ' + str(r) + ' ' + str(a))
            else:
                callback_button4 = types.InlineKeyboardButton(text = 'üîº –°—Ç–∞–≤–∫–∞ ('+str(m)+' üí∞)',callback_data = 'poker ' + str(idk) + ' ' + str(turn) + ' ' + str(pos) + ' 3 ' + str(r) + ' ' + str(m))
            #–ú–ê–ö–° –°–¢–ê–í–ö–ê
            if money[pos] <= bank[pos] + m:
                callback_button5 = types.InlineKeyboardButton(text = 'üõë –ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ',callback_data = 'nothing')
            elif money[pos] < bank[pos] + 2*m:
                a = money[pos] - bank[pos]
                callback_button5 = types.InlineKeyboardButton(text = '‚è´ –°—Ç–∞–≤–∫–∞ ('+str(a)+' üí∞)',callback_data = 'poker ' + str(idk) + ' ' + str(turn) + ' ' + str(pos) + ' 4 ' + str(r) + ' ' + str(a))
            else:
                callback_button5 = types.InlineKeyboardButton(text = '‚è´ –°—Ç–∞–≤–∫–∞ ('+str(2*m)+' üí∞)',callback_data = 'poker ' + str(idk) + ' ' + str(turn) + ' ' + str(pos) + ' 4 ' + str(r) + ' ' + str(2*m))




            callback_button3 = types.InlineKeyboardButton(text = '–ú–æ–∏ –∫–∞—Ä—Ç—ã',callback_data = 'hand ' + str(idk) + ' ' + str(turn) + ' ' + str(pos))
            keyboard.add(callback_button1,callback_button2)
            keyboard.add(callback_button4,callback_button5)
            keyboard.add(callback_button3)
            time.sleep(2)
            bot.edit_message_media(media=telebot.types.InputMedia(media=f,caption = txt,type="photo",parse_mode='HTML'),chat_id=call.message.chat.id, message_id=call.message.message_id,reply_markup=keyboard)

        else:
            if (r == 1 and pos == len(players)) or r == 2:
                r = 2
                pos = bank.index(min(bank))
            turn = players[pos]
            txt = act_txt
            for i in range(len(players)):
                txt = txt + names[i] + '  ' + str(true_bank[i]) + 'üí∞\n'
            txt = txt + '\n–•–æ–¥ <a href="tg://user?id='+str(turn)+'">'+str(names[pos])+'</a>'
            keyboard = types.InlineKeyboardMarkup(row_width=2)
            if r == 1 and balance:
                callback_button1 = types.InlineKeyboardButton(text = 'üÜó –ü—Ä–æ–ø—É—Å–∫',callback_data = 'poker ' + str(idk) + ' ' + str(turn) + ' ' + str(pos) + ' 1 ' + str(r))
            else:
                callback_button1 = types.InlineKeyboardButton(text = 'üõë –ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ',callback_data = 'nothing')
            callback_button2 = types.InlineKeyboardButton(text = '‚ùå –°–¥–∞—Ç—å—Å—è',callback_data = 'poker ' + str(idk) + ' ' + str(turn) + ' ' + str(pos) + ' 2 ' + str(r))
            if balance:
                m = 5
            else:
                m = max(bank) - bank[pos]
            #–ú–ò–ù –°–¢–ê–í–ö–ê
            if money[pos] < bank[pos] + m:
                a = money[pos] - bank[pos]
                callback_button4 = types.InlineKeyboardButton(text = 'üîº –°—Ç–∞–≤–∫–∞ ('+str(a)+' üí∞)',callback_data = 'poker ' + str(idk) + ' ' + str(turn) + ' ' + str(pos) + ' 3 ' + str(r) + ' ' + str(a))
            else:
                callback_button4 = types.InlineKeyboardButton(text = 'üîº –°—Ç–∞–≤–∫–∞ ('+str(m)+' üí∞)',callback_data = 'poker ' + str(idk) + ' ' + str(turn) + ' ' + str(pos) + ' 3 ' + str(r) + ' ' + str(m))
            #–ú–ê–ö–° –°–¢–ê–í–ö–ê
            if money[pos] <= bank[pos] + m or len(vabank) >= len(players) - len(dead) - 1:
                callback_button5 = types.InlineKeyboardButton(text = 'üõë –ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ',callback_data = 'nothing')
            elif money[pos] < bank[pos] + 2*m:
                a = money[pos] - bank[pos]
                callback_button5 = types.InlineKeyboardButton(text = '‚è´ –°—Ç–∞–≤–∫–∞ ('+str(a)+' üí∞)',callback_data = 'poker ' + str(idk) + ' ' + str(turn) + ' ' + str(pos) + ' 4 ' + str(r) + ' ' + str(a))
            else:
                callback_button5 = types.InlineKeyboardButton(text = '‚è´ –°—Ç–∞–≤–∫–∞ ('+str(2*m)+' üí∞)',callback_data = 'poker ' + str(idk) + ' ' + str(turn) + ' ' + str(pos) + ' 4 ' + str(r) + ' ' + str(2*m))

            callback_button3 = types.InlineKeyboardButton(text = '–ú–æ–∏ –∫–∞—Ä—Ç—ã',callback_data = 'hand ' + str(idk) + ' ' + str(turn) + ' ' + str(pos))
            keyboard.add(callback_button1,callback_button2)
            keyboard.add(callback_button4,callback_button5)
            keyboard.add(callback_button3)
            time.sleep(2)
            bot.edit_message_media(media=telebot.types.InputMedia(media=call.message.photo[len(call.message.photo) - 1].file_id,caption = txt,type="photo",parse_mode='HTML'),chat_id=call.message.chat.id, message_id=call.message.message_id,reply_markup=keyboard)

      elif 'hand' in call.data:
        args = call.data.split()
        idk = int(args[1])
        turn = int(args[2])
        pos = int(args[3])
        if call.from_user.id != turn:
            answer_callback_query(call,'–ù–µ —Ç–≤–æ–π —Ö–æ–¥')
            return

        data = cursor.execute('SELECT * FROM poker WHERE id = '+str(idk))
        data = data.fetchone()
        if data is None:
            answer_callback_query(call,'–ü–∞—à–æ–ª –Ω–∞—Ö—É–π')
            return
        cards = unpack(data[1])
        event = data[2]
        hand = unpack(data[6])
        hand = [hand[pos*2],hand[pos*2+1]]
        if event == 2:
            event = 0
        for i in range(5-event):
            cards.pop()
        combinations = ['–°—Ç–∞—Ä—à–∞—è –∫–∞—Ä—Ç–∞','–ü–∞—Ä–∞','–î–≤–µ –ø–∞—Ä—ã','–°–µ—Ç','–°—Ç—Ä–∏—Ç','–§–ª–µ—à','–§—É–ª–ª —Ö–∞—É—Å','–ö–∞—Ä–µ','–°—Ç—Ä–∏—Ç —Ñ–ª–µ—à','–§–ª–µ—à —Ä–æ—è–ª—å']
        percents = ['100%','43.8%','23.5%','4.8%','4.6%','3%','2.6%','0.16%','0.03%','0.003%']
        cards.append(hand[0])
        cards.append(hand[1])
        comb = combinator(cards)
        colors = ['‚ô¶Ô∏è','‚ô•Ô∏è','‚ô†Ô∏è','‚ô£Ô∏è']
        numbers = ['J','Q','K','A']
        txt = '–ö–∞—Ä—Ç—ã —É —Ç–µ–±—è –≤ —Ä—É–∫–µ:\n'
        a = round(hand[0])
        b = round((hand[0]%1)*10)
        if a > 10:
            a = numbers[a-11]
        txt = txt + colors[b-1] + str(a) + '   '
        a = round(hand[1])
        b = round((hand[1]%1)*10)
        if a > 10:
            a = numbers[a-11]
        txt = txt + colors[b-1] + str(a)
        txt = txt + '\n\n–¢–µ–∫—É—â–∞—è –∫–æ–º–±–∏–Ω–∞—Ü–∏—è:\n'
        txt = txt + combinations[round(comb)]

        notify_callback_query(call,txt)
      elif 'read' in call.data:
        args = call.data.split()
        idk = int(args[1])
        if call.from_user.id != idk:
            answer_callback_query(call,'–ü–∞—à–æ–ª –Ω–∞—Ö—É–π')

            return
        answer_callback_query(call,'–£—Å–ø–µ—à–Ω–æ')
        bot.edit_message_media(media=telebot.types.InputMedia(media=patch_image,type="photo"),chat_id=call.message.chat.id, message_id=call.message.message_id)

      elif 'letter' in call.data:
        args = call.data.split()
        idk = int(args[1])
        if call.from_user.id != idk:
            answer_callback_query(call,'–ü–∞—à–æ–ª –Ω–∞—Ö—É–π')

            return
        data = cursor.execute('SELECT * FROM neko WHERE id = '+str(idk))
        data = data.fetchone()
        if data is None:
            answer_callback_query(call,'–ü–∞—à–æ–ª –Ω–∞—Ö—É–π')
            return
        answer_callback_query(call,'–£—Å–ø–µ—à–Ω–æ')
        nam = str(data[1]).rstrip()
        rep = data[2]
        reward_rep = int(rep/100) * 200
        letter_title = '–ü–û–ó–î–†–ê–í–õ–Ø–ï–ú –° ' + str(reward_rep) + ' –î–û–í–ï–†–ò–Ø'
        letter_text = '–í—ã –∏ ' + nam + ', –±–µ–∑—É—Å–ª–æ–≤–Ω–æ, —É–∂–µ –¥–æ–≤–æ–ª—å–Ω–æ –¥–æ–ª–≥–æ –≤–º–µ—Å—Ç–µ. –ù–∞–¥–µ–µ–º—Å—è, –≤ –ù–µ–∫–æ—Å–ª–∞–≤–∏–∏ –±—É–¥—É—â–µ–≥–æ –≤—Å–µ –≥—Ä–∞–∂–¥–∞–Ω–µ —Å–º–æ–≥—É—Ç –ø–æ—Å—Ç—Ä–æ–∏—Ç—å —Ç–∞–∫–∏–µ –∂–µ –∫—Ä–µ–ø–∫–∏–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è —Å–æ —Å–≤–æ–∏–º–∏ –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫–∞–º–∏, –∏ –≤—ã —è–≤–ª—è–µ—Ç–µ—Å—å –ø—Ä–µ–∫—Ä–∞—Å–Ω—ã–º —Ç–æ–º—É –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–æ–º. –ü–∞—Ä—Ç–∏—è –≥–æ—Ä–¥–∏—Ç—Å—è —Ç–æ–±–æ–π, –≤ —Å–≤—è–∑–∏ —Å —á–µ–º –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª–∞ –Ω–µ–±–æ–ª—å—à–æ–π, –Ω–æ –ø—Ä–∏—è—Ç–Ω—ã–π –ø–æ–¥–∞—Ä–æ–∫. –°–ª–∞–≤—å—Å—è –ù–µ–∫–æ—Å–ª–∞–≤–∏—è!'

        lines = textwrap.wrap(letter_text, width=35)
        ptxt = ''
        for line in lines:
            ptxt = ptxt + line + '\n'
        im0 = Image.open('bot/letter.png')
        font = ImageFont.truetype('bot/times-new-roman.ttf', size=50)
        draw = ImageDraw.Draw(im0)
        draw.text((70, 130), ptxt, font=font, fill=(71, 66, 66))
        w = font.getlength(letter_title)
        draw.text(((924-w)/2,50), letter_title, font=font, fill=(71, 66, 66))
        im0.save('bot/result.png')
        f = open("bot/result.png","rb")
        bot.edit_message_media(media=telebot.types.InputMedia(media=f,type="photo"),chat_id=call.message.chat.id, message_id=call.message.message_id)
      elif "spinner" in call.data:
        args = call.data.split()
        idk = int(args[1])
        if call.from_user.id != idk:
            answer_callback_query(call,'–ü–∞—à–æ–ª –Ω–∞—Ö—É–π')
            return
        data = cursor.execute('SELECT * FROM neko WHERE id = '+str(call.from_user.id))
        data = data.fetchone()
        if data is None:
            answer_callback_query(call,'–ü–∞—à–æ–ª –Ω–∞—Ö—É–π')
            return
        coins = data[11]
        pilk = data[41]
        answer_callback_query(call,'–£—Å–ø–µ—à–Ω–æ')
        d = random.randint(0,6)
        texts = ['–¢—ã –≤—ã–∏–≥—Ä–∞–ª 30 –Ω–µ–∫–æ–≥—Ä–∏–≤–µ–Ω üí∞, –Ω–µ–ø–ª–æ—Ö–æ',
        '–¢—ã –≤—ã–∏–≥—Ä–∞–ª —Å—Ç–∞–∫–∞–Ω —Å—Ç—Ä–∞–Ω–Ω–æ–π –±–µ–ª–æ–π –∂–∏–¥–∫–æ—Å—Ç–∏ ü•õ',
        '–í–∞—É, —Ç—ã –≤—ã–∏–≥—Ä–∞–ª —Ü–µ–ª–æ–µ –Ω–∏—Ö—É—è',
        '–¢—ã –≤—ã–∏–≥—Ä–∞–ª 20 –Ω–µ–∫–æ–≥—Ä–∏–≤–µ–Ω üí∞, –Ω–µ–ø–ª–æ—Ö–æ',
        '–¢—ã –≤—ã–∏–≥—Ä–∞–ª 15 –Ω–µ–∫–æ–≥—Ä–∏–≤–µ–Ω üí∞, –Ω–µ–ø–ª–æ—Ö–æ',
        '–í–∞—É, —Ç—ã –≤—ã–∏–≥—Ä–∞–ª —Ü–µ–ª–æ–µ –Ω–∏—Ö—É—è',
        '–¢—ã –≤—ã–∏–≥—Ä–∞–ª 40 –Ω–µ–∫–æ–≥—Ä–∏–≤–µ–Ω üí∞, –Ω–µ–ø–ª–æ—Ö–æ']
        gifs = ['CgACAgIAAx0CZQN7rQAC3G5jwMhPiQwlkRYiMKeeS8-CZcqOgAACVyQAAiEsCEpAqdma088Iry0E',
        'CgACAgIAAx0CZQN7rQAC3HFjwMhwvuJEY8e_yAgTQkJeVjKoGAACWCQAAiEsCEpHsvBSvT-v6C0E',
        'CgACAgIAAx0CZQN7rQAC3HRjwMiE2qyJF3dTF0m5EZ9dg-IFRgACWSQAAiEsCErxfueDukAhXy0E',
        'CgACAgIAAx0CZQN7rQAC3HdjwMiJF3_WaVj6h2986oTl5RpikQACWiQAAiEsCEqfKMMNyTg2-y0E',
        'CgACAgIAAx0CZQN7rQAC3HpjwMiaGehstXo-1qug40koUCrjGAACWyQAAiEsCEo-mEGYHqHwCC0E',
        'CgACAgIAAx0CZQN7rQAC3H1jwMiTA3C7WIZLwMYQvcW74pVohwACXCQAAiEsCEqR-AVp9dE_Bi0E',
        'CgACAgIAAx0CZQN7rQAC3IBjwMiDEyr1BFXw3hie2gzTjHkFcwACXSQAAiEsCEqjTiGYFjksry0E']
        if d == 0:
            coins = coins + 30
        elif d == 1:
            pilk = pilk + 1
        elif d == 3:
            coins = coins + 20
        elif d == 4:
            coins = coins + 15
        elif d == 6:
            coins = coins + 40
        time.sleep(2)
        bot.edit_message_media(media=telebot.types.InputMedia(media=gifs[d],type="animation"),chat_id=call.message.chat.id, message_id=call.message.message_id)
        time.sleep(12)
        bot.edit_message_caption(chat_id=call.message.chat.id, message_id=call.message.message_id,caption=texts[d])
        cursor.execute('UPDATE neko SET coins = ' + str(coins) + ', pilk = ' + str(pilk) + ' WHERE id = '+str(call.from_user.id))
      elif "paper" in call.data:
        args = call.data.split()
        idk = int(args[1])
        b1 = eval(args[2])
        b2 = eval(args[3])
        starter = int(args[4])
        if call.from_user.id != idk:
            answer_callback_query(call,'–ü–∞—à–æ–ª –Ω–∞—Ö—É–π')
            return
        data = cursor.execute('SELECT * FROM neko WHERE id = '+str(idk))
        data = data.fetchone()
        if data is None:
            answer_callback_query(call,'–ü–∞—à–æ–ª –Ω–∞—Ö—É–π')
            return
        coins = data[11]
        version = data[29]
        data = cursor.execute('SELECT * FROM papers WHERE id = '+str(idk))
        data = data.fetchone()
        if data is None:
            answer_callback_query(call,'–ü–∞—à–æ–ª –Ω–∞—Ö—É–π')
            return
        images = unpack(data[1])
        stage = data[5]
        mistakes = data[6]
        if starter == 1:
            answer_callback_query(call,'–£—Å–ø–µ—à–Ω–æ')
        else:
            if b1 == b2:
                answer_callback_query(call,'–ü—Ä–∞–≤–∏–ª—å–Ω–æ üëç')
            else:
                answer_callback_query(call,'–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ üëé')
                mistakes += 1
            stage += 1
        if stage == 3:
            phot = 'AgACAgIAAx0CZQN7rQAC3fFj7PN2eIWEEvqIJy3vH2FBpAUl1AACKsUxG7OiaUu7MhScqwbHIAEAAwIAA3MAAy4E'
            c = 15 - 5*mistakes
            coins += c
            cursor.execute("UPDATE neko SET coins = "+ str(coins) +" WHERE id = "+str(idk))
            cursor.execute("DELETE FROM papers WHERE id = "+str(idk))
            time.sleep(2)
            if mistakes == 0:
                txt = '–ó–∞ —ç—Ç—É —Å–º–µ–Ω—É —Ç–µ–±–µ —É–¥–∞–ª–æ—Å—å –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å ' + str(c) + ' –Ω–µ–∫–æ–≥—Ä–∏–≤–µ–Ω üí∞. –¢—ã –Ω–µ —Å–æ–≤–µ—Ä—à–∏–ª –Ω–∏ –µ–¥–∏–Ω–æ–π –æ—à–∏–±–∫–∏, —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –∑–∞–≤–æ–¥–∞ –≥–æ—Ä–¥–∏—Ç—Å—è —Ç–æ–±–æ–π!'
            elif mistakes == 1 or mistakes == 2:
                txt = '–ó–∞ —ç—Ç—É —Å–º–µ–Ω—É —Ç–µ–±–µ —É–¥–∞–ª–æ—Å—å –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å ' + str(c) + ' –Ω–µ–∫–æ–≥—Ä–∏–≤–µ–Ω üí∞. –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Å–µ–≥–æ–¥–Ω—è —Ç–≤–æ—è —Ä–∞–±–æ—Ç–∞ –Ω–µ –±—ã–ª–∞ –∏–¥–µ–∞–ª—å–Ω–æ–π, –∏ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –∑–∞–≤–æ–¥–∞ –∑–∞–ø–æ–º–Ω–∏—Ç —ç—Ç–æ'
            elif mistakes == 3:
                txt = '–ó–∞ —ç—Ç—É —Å–º–µ–Ω—É —Ç–µ–±–µ –Ω–∏—á–µ–≥–æ –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å. –ü–∞—Ä—Ç–∏—è –≤—Å—ë —á–∞—â–µ –ø–æ–¥—É–º—ã–≤–∞–µ—Ç –æ —Ç–æ–º, —á—Ç–æ —Ç—ã –Ω–µ–¥–æ—Å—Ç–æ–∏–Ω —Å–≤–æ–µ–π –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫–∏'
            r = random.randint(1,10)
            if r == 10:
                biba = random.randint(10800,21600)
                b = int(time.time() + biba)
                biba = math.ceil(biba/3600)
                cursor.execute('UPDATE neko SET bolnitsa  = '+str(b)+' WHERE id = ' + str(idk))
                txt += '\n\n–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ–ø—Ä–æ—à–µ–¥—à–∏–µ –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–µ–∫–æ—á–∞–Ω—ã —Å–≥–æ–≤–æ—Ä–∏–ª–∏—Å—å –∏ –æ—Ç–ø–∏–∑–¥–∏–ª–∏ —Ç–µ–±—è –ø–æ—Å–ª–µ —Ä–∞–±–æ—Ç—ã, –±–ª–∞–≥–æ–¥–∞—Ä—è —á–µ–º—É ' + str(biba) + ' —á–∞—Å–æ–≤ —Ç—ã –ø—Ä–æ–≤–µ–¥—ë—à—å –≤ –±–æ–ª—å–Ω–∏—Ü–µ üíä'
            bot.edit_message_media(media=telebot.types.InputMedia(media=phot,caption=txt,type="photo"),chat_id=call.message.chat.id, message_id=call.message.message_id)
            if version != patch_version:
                cursor.execute("UPDATE neko SET version = "+ str(patch_version) +" WHERE id = "+str(idk))
                keyboard = types.InlineKeyboardMarkup()
                callback_button1 = types.InlineKeyboardButton(text = '–ß–∏—Ç–∞—Ç—å üëÄ',callback_data = 'read ' + str(idk))
                keyboard.add(callback_button1)
                callback_button2 = types.InlineKeyboardButton(text = '–ù–µ —á–∏—Ç–∞—Ç—å ‚ùå',callback_data = 'dont ' + str(idk))
                keyboard.add(callback_button2)
                bot.send_photo(call.message.chat.id, photo = 'AgACAgIAAx0CZQN7rQACznBjQgABiPsE5FE7am8mfAOKiXsSOEsAAju9MRuS1hFKlyErHhjWQfcBAAMCAANzAAMqBA',caption = '–í–æ–∑–≤—Ä–∞—â–∞—è—Å—å —Å —Ä–∞–±–æ—Ç—ã, —Ç—ã –∑–∞–º–µ—Ç–∏–ª —Å–≤–µ–∂—É—é –≥–∞–∑–µ—Ç—É, —Ç–æ—Ä—á–∞—â—É—é –∏–∑ —Ç–≤–æ–µ–≥–æ –ø–æ—á—Ç–æ–≤–æ–≥–æ —è—â–∏–∫–∞. –ü—Ä–æ—á–∏—Ç–∞—Ç—å –µ—ë?',reply_markup=keyboard)
        else:
            args = images[stage]
            args = args.split()
            phot = str(args[0])
            propusk = eval(args[1])
            keyboard = types.InlineKeyboardMarkup(row_width=2)
            callback_button1 = types.InlineKeyboardButton(text = '–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å ‚úÖ',callback_data = 'paper ' + str(idk) + ' ' + str(True) + ' ' + str(propusk) + ' 0')
            callback_button2 = types.InlineKeyboardButton(text = '–î–∞—Ç—å –ø–∏–∑–¥—ã ‚ùå',callback_data = 'paper ' + str(idk) + ' ' + str(False) + ' ' + str(propusk) + ' 0')
            callback_button3 = types.InlineKeyboardButton(text = '–°–ø—Ä–∞–≤–∫–∞ ‚ùî',callback_data = 'spravka ' + str(idk))
            keyboard.add(callback_button1,callback_button2)
            keyboard.add(callback_button3)
            cursor.execute("UPDATE papers SET stage = "+ str(stage) +",mistakes = " + str(mistakes) + " WHERE id = "+str(idk))
            time.sleep(2)
            bot.edit_message_media(media=telebot.types.InputMedia(media=phot,type="photo"),chat_id=call.message.chat.id, message_id=call.message.message_id,reply_markup=keyboard)


      elif "spravka" in call.data:
        args = call.data.split()
        idk = int(args[1])
        if call.from_user.id != idk:
            answer_callback_query(call,'–ü–∞—à–æ–ª –Ω–∞—Ö—É–π')
            return
        prof_text = ['–º–æ–Ω—Ç–∞–∂–Ω–∏–∫–∞–º','—ç–ª–µ–∫—Ç—Ä–∏–∫–∞–º','—Ç–æ–∫–∞—Ä—è–º','—Å–≤–∞—Ä—â–∏–∫–∞–º','–æ—Ö—Ä–∞–Ω–Ω–∏–∫–∞–º']
        p = prof_text[prof.index(bad_prof)]
        txt = '–ö–∞–∂–¥—ã–π –¥–µ–Ω—å —á–µ—Ä–µ–∑ —Ç–≤–æ–π –ø—É–Ω–∫—Ç –±—É–¥–µ—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç—å 3 –Ω–µ–∫–æ—á–∞–Ω–∞. –î–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ–≥–æ —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–≤–µ—Ä—å —Ñ–æ—Ç–æ, –ø–µ—á–∞—Ç—å, –¥–∞—Ç—É –≤—ã–¥–∞—á–∏ –∏ —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è\n\n–°–µ–≥–æ–¥–Ω—è –∑–∞–ø—Ä–µ—â–µ–Ω –ø—Ä–æ—Ö–æ–¥ ' + str(p)
        notify_callback_query(call,txt)
      elif "comb" in call.data:
        args = call.data.split()
        idk = int(args[1])
        if call.from_user.id != idk:
            bot.answer_callback_query(call.id,text = '–ü–∞—à–æ–ª –Ω–∞—Ö—É–π')
            return
        txt = '–í–æ–∑–º–æ–∂–Ω—ã–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏:\nüçâüçâ - 0 –Ω–µ–∫–æ–≥—Ä–∏–≤–µ–Ω üí∞\nüçìüçì - 10 –Ω–µ–∫–æ–≥—Ä–∏–≤–µ–Ω üí∞\nüçíüçí - 10 –Ω–µ–∫–æ–≥—Ä–∏–≤–µ–Ω üí∞\nüçìüçìüçì - 40 –Ω–µ–∫–æ–≥—Ä–∏–≤–µ–Ω üí∞\nüçíüçíüçí - 70 –Ω–µ–∫–æ–≥—Ä–∏–≤–µ–Ω üí∞\nüçâüçâüçâ - 100 –Ω–µ–∫–æ–≥—Ä–∏–≤–µ–Ω üí∞\nüçãüçãüçã - —Ö–æ—Ä–Ω–∏ –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫–∞ üê±'
        notify_callback_query(call,txt)





@app.route('/' + token, methods=['POST'])
def get_message():
    json_string = request.get_data().decode('utf-8')
    update = telebot.types.Update.de_json(json_string)
    bot.process_new_updates([update])
    return 'ok', 200
@app.route('/')
def get_ok():
    return 'ok', 200




def jobmo():
    bot.send_sticker(-1001268892138, 'CAACAgIAAxkBAAEE1S5ikMzhzjyo5wXFT3FXJc1QfEGT-gACgxUAAuqKgUvgoYyaWs-hnSQE')
    bot.send_message(-1001268892138, '–°–ø–æ–∫–æ–π–Ω–æ–π –Ω–æ—á–∏, –Ω–µ–∫–æ—Å–ª–∞–≤—ã')
def jobtu():
    bot.send_sticker(-1001268892138, 'CAACAgIAAxkBAAEE1TBikMzlxp-F-OAnXJ5mDMygsK41oAACyRYAAqjSgUvZ7sYejHfOlyQE')
    bot.send_message(-1001268892138, '–°–ø–æ–∫–æ–π–Ω–æ–π –Ω–æ—á–∏, –Ω–µ–∫–æ—Å–ª–∞–≤—ã')
def jobwe():
    bot.send_sticker(-1001268892138, 'CAACAgIAAxkBAAEE1TJikMztMFxCKSh2kxVos_BdnsBlEgACNxQAAksbgEvt_JM25B-doyQE')
    bot.send_message(-1001268892138, '–°–ø–æ–∫–æ–π–Ω–æ–π –Ω–æ—á–∏, –Ω–µ–∫–æ—Å–ª–∞–≤—ã')
def jobth():
    bot.send_sticker(-1001268892138, 'CAACAgIAAxkBAAEE1TRikMzx053XPlFUosf0fDT6yAwoogACohcAArw1gUu9AtlM7MrK8CQE')
    bot.send_message(-1001268892138, '–°–ø–æ–∫–æ–π–Ω–æ–π –Ω–æ—á–∏, –Ω–µ–∫–æ—Å–ª–∞–≤—ã')
def jobfr():
    bot.send_sticker(-1001268892138, 'CAACAgIAAxkBAAEE1TZikMz1RgVpp8Q-zbLrpIOFdaL09wACbBUAAu4tiEs5QNHnNZ-5ByQE')
    bot.send_message(-1001268892138, '–°–ø–æ–∫–æ–π–Ω–æ–π –Ω–æ—á–∏, –Ω–µ–∫–æ—Å–ª–∞–≤—ã')
def jobsa():
    bot.send_sticker(-1001268892138, 'CAACAgIAAxkBAAEE1ThikMz4-mrv2wFbCA1hjTrvmWKAGAACWxcAAomDiUu7YG_wPShz4yQE')
    bot.send_message(-1001268892138, '–°–ø–æ–∫–æ–π–Ω–æ–π –Ω–æ—á–∏, –Ω–µ–∫–æ—Å–ª–∞–≤—ã')
def jobsu():
    bot.send_sticker(-1001268892138, 'CAACAgIAAxkBAAEE1TpikMz8T3SW2L914SMykVrJWvoR8gACoBYAAgwTgUsYv06y1Bvz1CQE')
    bot.send_message(-1001268892138, '–°–ø–æ–∫–æ–π–Ω–æ–π –Ω–æ—á–∏, –Ω–µ–∫–æ—Å–ª–∞–≤—ã')
def jobday():
    bot.send_sticker(-1001268892138, 'CAACAgIAAxkBAAEE3Nhikp10A0x2mXRExbnjP1Rm3m4jvAACpxAAAntFWEgwuu0ea7AOsSQE')
def jobupd():
  try:
    bot.send_message(738931917, '–ü—Ä–æ–≤–µ—Ä–∫–∞')
    data = cursor.execute('SELECT * FROM neko')
    data = data.fetchall()
    i = 0
    while i < len(data):
        nam = str(data[i][1]).rstrip()
        idk = data[i][0]
        ch = data[i][13]
        chel = str(data[i][16]).rstrip()
        notifed = data[i][39]
        kormit = int(time.time() - data[i][4])
        if kormit > 4*24*3600 and notifed == 0:
            try:
                cursor.execute("UPDATE neko SET notifed = 1 WHERE id = " + str(idk))
                bot.send_message(ch, nam + ' —É–∂–µ –Ω–µ –µ–ª–∞ —á–µ—Ç—ã—Ä–µ –¥–Ω—è! <a href="tg://user?id='+str(idk)+'">'+str(chel)+'</a>, —Ç—ã –º–Ω–µ –Ω–µ —Ö–æ—á–µ—à—å –Ω–∏—á–µ–≥–æ –æ–±—ä—è—Å–Ω–∏—Ç—å?',parse_mode='HTML')
                bot.send_sticker(ch, 'CAACAgIAAxkBAAEFNvlixtyYbnUoOviqOfiUaIH6jdlPhAACuxMAAsmQWEhravemy77rYSkE')
            except:
                pass

        #if kormit > 5*24*3600:
        #    try:
        #        bot.send_message(ch, nam + ' —É–º–µ—Ä–ª–∞ –æ—Ç –≥–æ–ª–æ–¥–∞... <a href="tg://user?id='+str(idk)+'">'+str(chel)+'</a>, –µ—ë —Å–º–µ—Ä—Ç—å –Ω–∞ —Ç–≤–æ–µ–π —Å–æ–≤–µ—Å—Ç–∏, –∏ —Ç—ã —Ç–µ–ø–µ—Ä—å –∏–∑–≥–Ω–∞–Ω –∏–∑ –ù–µ–∫–æ—Å–ª–∞–≤–∏–∏',parse_mode='HTML')
        #        bot.send_sticker(ch, 'CAACAgIAAxkBAAEFNNFixbh5x7lPtkqzBN2g8YO9FAMCLgACjxEAAqg6WEjqQFCw4uPiwikE')
        #    except:
        #        pass
        #    if nam == '–ù–µ–∫–æ–¥–µ–≤–æ—á–∫–∞':
        #        cursor.execute("INSERT INTO dead (name,time) VALUES ('–ë–µ–∑—ã–º—è–Ω–Ω–∞—è –º–æ–≥–∏–ª–∞',"+str(int(time.time())) +")")
        #    else:
        #        cursor.execute("INSERT INTO dead (name,time) VALUES ('"+nam+"',"+str(int(time.time())) +")")
        #    cursor.execute("DELETE FROM neko WHERE id = "+str(idk))
        i = i + 1
    data = cursor.execute('SELECT * FROM battles')
    data = data.fetchall()
    i = 0
    while i < len(data):
        one = data[i][0]
        two = data[i][1]
        event = data[i][2]
        wait = data[i][3]
        ch = data[i][5]
        msg = data[i][6]
        wait = int(wait - time.time())
        if wait <= 0:
            if event == 0:
                try:
                    bot.edit_message_text(chat_id=ch, message_id=msg,text="–ß—Ç–æ –∂, –Ω–∞ –≤—ã–∑–æ–≤ —Ç–∞–∫ –Ω–∏–∫—Ç–æ –∏ –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª..")
                except:
                    pass
                cursor.execute("DELETE FROM battles WHERE one = "+str(one)+" AND two = " + str(two))
            if event == 2:
                try:
                    bot.edit_message_caption(chat_id=ch, message_id=msg,caption="–≠—Ç–æ –±—ã–ª –∑–∞—Ç—è–∂–Ω–æ–π –±–æ–π, –∑–∞–≤–µ—Ä—à–∏–≤—à–∏–π—Å—è –Ω–∏—á—å—ë–π..")
                except:
                    pass
                cursor.execute("DELETE FROM battles WHERE one = "+str(one)+" AND two = " + str(two))
        i = i + 1
    data = cursor.execute('SELECT * FROM dungeons')
    data = data.fetchall()
    i = 0
    while i < len(data):
        idk = data[i][0]
        wait = data[i][4]
        ch = data[i][3]
        msg = data[i][2]
        wait = int(wait - time.time())
        if wait <= 0:
                try:
                    bot.edit_message_media(media=telebot.types.InputMedia(media='AgACAgIAAx0CZQN7rQACwxZi8uNUoMtUGP6J96D7X-pveAGj3wAC374xGxy_mEsWdB1RBPi4nQEAAwIAA3MAAykE',caption='–¢–≤–æ—è –Ω–µ–∫–æ–¥–µ–≤–æ—á–∫–∞ –Ω–µ –≤—ã–¥–µ—Ä–∂–∞–ª–∞ —É–∂–∞—Å–æ–≤ LGBT –º–∏—Ä–∞ –∏ —Å–±–µ–∂–∞–ª–∞, –±—Ä–æ—Å–∏–≤ –≤—Å—ë –Ω–∞–π–¥–µ–Ω–Ω–æ–µ. –í —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑ –Ω–µ –∑–∞—Å—Ç–∞–≤–ª—è–π –µ—ë –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è —Ç–∞–º —Ç–∞–∫ –¥–æ–ª–≥–æ',type="photo"),chat_id=ch, message_id=msg)
                except:
                    pass
                cursor.execute("DELETE FROM dungeons WHERE id = "+str(idk))
        i = i + 1
    data = cursor.execute('SELECT * FROM poker')
    data = data.fetchall()
    i = 0
    while i < len(data):
        idk = data[i][0]
        event = data[i][2]
        wait = data[i][3]
        ch = data[i][4]
        msg = data[i][5]
        wait = int(wait - time.time())
        if wait <= 0:
                try:
                    if event == -1:
                        bot.edit_message_text(chat_id=ch, message_id=msg,text = '–ù–∏–∫—Ç–æ –Ω–µ –æ—Ç–æ–∑–≤–∞–ª—Å—è, –æ–¥–Ω–æ —Å—Å—ã–∫–ª–æ –≤ —á–∞—Ç–µ')
                    else:
                        bot.edit_message_media(media=telebot.types.InputMedia(media='AgACAgIAAx0CZQN7rQACwxZi8uNUoMtUGP6J96D7X-pveAGj3wAC374xGxy_mEsWdB1RBPi4nQEAAwIAA3MAAykE',caption='–í—ã –∏–≥—Ä–∞–ª–∏ —Å–ª–∏—à–∫–æ–º –¥–æ–ª–≥–æ –∏ –æ—Ö—Ä–∞–Ω–Ω–∏–∫–∞–º –ø—Ä–∏—à–ª–æ—Å—å –∑–∞—Å—Ç–∞–≤–∏—Ç—å –≤–∞—Å –æ—Å–≤–æ–±–æ–¥–∏—Ç—å —Å—Ç–æ–ª',type="photo"),chat_id=ch, message_id=msg)
                except:
                    pass
                cursor.execute("DELETE FROM poker WHERE id = "+str(idk))
        i = i + 1
    data = cursor.execute('SELECT * FROM papers')
    data = data.fetchall()
    i = 0
    while i < len(data):
        idk = data[i][0]
        wait = data[i][2]
        ch = data[i][3]
        msg = data[i][4]
        wait = int(wait - time.time())
        if wait <= 0:
                try:
                    bot.edit_message_media(media=telebot.types.InputMedia(media='AgACAgIAAx0CZQN7rQAC36hj7xy2suavuAqw-0Qq3sBI_jwxVAACbcIxG2V6eUvcsQGSTN-iYQEAAwIAA3MAAy4E',caption='–†–∞–±–æ—á–∏–π –¥–µ–Ω—å –∑–∞–∫–æ–Ω—á–∏–ª—Å—è, –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑ –±—É–¥—å –±—ã—Å—Ç—Ä–µ–µ',type="photo"),chat_id=ch, message_id=msg)
                except:
                    pass
                cursor.execute("DELETE FROM papers WHERE id = "+str(idk))
        i = i + 1
  except Exception as e:
    bot.send_message(738931917, e)

def updater():
    while True:
        schedule.run_pending()
        time.sleep(1)

if __name__ == '__main__':
    schedule.every().monday.at("23:01").do(jobtu)
    schedule.every().tuesday.at("23:01").do(jobwe)
    schedule.every().wednesday.at("23:01").do(jobth)
    schedule.every().thursday.at("23:01").do(jobfr)
    schedule.every().friday.at("23:01").do(jobsa)
    schedule.every().saturday.at("23:01").do(jobsu)
    schedule.every().sunday.at("23:01").do(jobmo)
    schedule.every().day.at("06:01").do(jobday)
    schedule.every(60).seconds.do(jobupd)
    t = Thread(target=updater)
    t.start()
    app.run(host='0.0.0.0',port=80)
  
